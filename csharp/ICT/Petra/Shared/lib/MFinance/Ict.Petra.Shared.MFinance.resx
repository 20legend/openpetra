<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accounts.png" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>