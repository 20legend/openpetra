/* Auto generated with nant generateORM
 * Do not modify this file manually!
 */
namespace Ict.Petra.Shared.MPartner.Partner.Data.Access
{
    using System;
    using System.Collections.Specialized;
    using System.Data;
    using System.Data.Odbc;
    using Ict.Common;
    using Ict.Common.DB;
    using Ict.Common.Verification;
    using Ict.Common.Data;
    using Ict.Petra.Shared;
    using Ict.Petra.Shared.MPartner.Partner.Data;
    using Ict.Petra.Shared.MCommon.Data;
    using Ict.Petra.Shared.MSysMan.Data;
    using Ict.Petra.Shared.MPartner.Mailroom.Data;
    using Ict.Petra.Shared.MPersonnel.Units.Data;
    using Ict.Petra.Shared.MPersonnel.Personnel.Data;
    using Ict.Petra.Shared.MConference.Data;
    using Ict.Petra.Shared.MFinance.Gift.Data;
    
    
    /// List of statuses for partners
    public class PPartnerStatusAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerStatus";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_status";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_partner_status") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStatusTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStatusTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AStatusCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_partner_status WHERE p_status_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStatusTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStatusTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AStatusCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStatusTable AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStatusTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_partner_status") 
                            + GenerateWhereClause(PPartnerStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStatusTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStatusTable AData, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStatusTable AData, PPartnerStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStatusTable AData, PPartnerStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStatusTable AData, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_status", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AStatusCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_status WHERE p_status_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_status" + GenerateWhereClause(PPartnerStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AStatusCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_status WHERE p_status_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_status" + GenerateWhereClause(PPartnerStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerStatusTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_status", PPartnerStatusTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_status", PPartnerStatusTable.GetColumnStringList(), PPartnerStatusTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_status", PPartnerStatusTable.GetColumnStringList(), PPartnerStatusTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerStatus", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table is used to describe how a partner first came into contact with the organisation.  Which department entered them.
    public class PAcquisitionAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PAcquisition";
        
        /// original table name in database
        public const string DBTABLENAME = "p_acquisition";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_acquisition_code_c"}) + " FROM PUB_p_acquisition") 
                            + GenerateOrderByClause(AOrderBy)), PAcquisitionTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PAcquisitionTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAcquisitionTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PAcquisitionTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PAcquisitionTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AAcquisitionCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_acquisition_code_c"}) + " FROM PUB_p_acquisition WHERE p_acquisition_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PAcquisitionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AAcquisitionCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AAcquisitionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AAcquisitionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAcquisitionTable AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAcquisitionTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AAcquisitionCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAcquisitionTable AData, String AAcquisitionCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AAcquisitionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAcquisitionTable AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AAcquisitionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_acquisition_code_c"}) + " FROM PUB_p_acquisition") 
                            + GenerateWhereClause(PAcquisitionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PAcquisitionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PAcquisitionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PAcquisitionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAcquisitionTable AData, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAcquisitionTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAcquisitionTable AData, PAcquisitionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAcquisitionTable AData, PAcquisitionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAcquisitionTable AData, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_acquisition", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AAcquisitionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AAcquisitionCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_acquisition WHERE p_acquisition_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_acquisition" + GenerateWhereClause(PAcquisitionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AAcquisitionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AAcquisitionCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_acquisition WHERE p_acquisition_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_acquisition" + GenerateWhereClause(PAcquisitionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PAcquisitionTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_acquisition", PAcquisitionTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_acquisition", PAcquisitionTable.GetColumnStringList(), PAcquisitionTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_acquisition", PAcquisitionTable.GetColumnStringList(), PAcquisitionTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PAcquisition", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Ex. Fam - Family, SM - Single Male, etc.
    public class PAddresseeTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PAddresseeType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_addressee_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_addressee_type_code_c"}) + " FROM PUB_p_addressee_type") 
                            + GenerateOrderByClause(AOrderBy)), PAddresseeTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PAddresseeTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAddresseeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PAddresseeTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PAddresseeTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_addressee_type_code_c"}) + " FROM PUB_p_addressee_type WHERE p_addressee_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PAddresseeTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAddresseeTypeTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAddresseeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AAddresseeTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAddresseeTypeTable AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PAddresseeTypeTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_addressee_type_code_c"}) + " FROM PUB_p_addressee_type") 
                            + GenerateWhereClause(PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PAddresseeTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAddresseeTypeTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PAddresseeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAddresseeTypeTable AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAddresseeTypeTable AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PAddresseeTypeTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_addressee_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_addressee_type WHERE p_addressee_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_addressee_type" + GenerateWhereClause(PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_addressee_type WHERE p_addressee_type_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_addressee_type" + GenerateWhereClause(PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PAddresseeTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), PAddresseeTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), PAddresseeTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PAddresseeType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Titles available for use
    public class PTitleAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PTitle";
        
        /// original table name in database
        public const string DBTABLENAME = "p_title";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_title_c"}) + " FROM PUB_p_title") 
                            + GenerateOrderByClause(AOrderBy)), PTitleTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTitleTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTitleTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PTitleTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTitleTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ATitle, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 64);
            ParametersArray[0].Value = ((object)(ATitle));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_title_c"}) + " FROM PUB_p_title WHERE p_title_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTitleTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ATitle, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ATitle, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ATitle, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ATitle, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTitleTable AData, String ATitle, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTitleTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ATitle, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTitleTable AData, String ATitle, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ATitle, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTitleTable AData, String ATitle, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ATitle, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PTitleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_title_c"}) + " FROM PUB_p_title") 
                            + GenerateWhereClause(PTitleTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTitleTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTitleRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTitleRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTitleTable AData, PTitleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTitleTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTitleTable AData, PTitleRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTitleTable AData, PTitleRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTitleTable AData, PTitleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_title", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ATitle, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 64);
            ParametersArray[0].Value = ((object)(ATitle));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_title WHERE p_title_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PTitleRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_title" + GenerateWhereClause(PTitleTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet ADataSet, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_title_c"}) + " FROM PUB_p_title WHERE p_default_addressee_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTitleTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PTitleTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTitleTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAddresseeType(FillDataSet, AAddresseeTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PTitleTable AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(out AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PTitleTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(out AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet ADataSet, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_title", AFieldList, new string[] {
                            "p_title_c"}) + " FROM PUB_p_title, PUB_p_addressee_type WHERE p_title.p_default_addressee_type_co" +
                    "de_c = p_addressee_type.p_addressee_type_code_c") 
                            + GenerateWhereClauseLong("PUB_p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTitleTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PTitleTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTitleTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAddresseeTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PTitleTable AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PTitleTable AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PTitleTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPAddresseeType(String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_title WHERE p_default_addressee_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPAddresseeTypeTemplate(PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_title, PUB_p_addressee_type WHERE p_title.p_default_ad" +
                        "dressee_type_code_c = p_addressee_type.p_addressee_type_code_c" + GenerateWhereClauseLong("PUB_p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PAddresseeTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ATitle, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 64);
            ParametersArray[0].Value = ((object)(ATitle));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_title WHERE p_title_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PTitleRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_title" + GenerateWhereClause(PTitleTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PTitleTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_title", PTitleTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_title", PTitleTable.GetColumnStringList(), PTitleTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_title", PTitleTable.GetColumnStringList(), PTitleTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PTitle", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// The class a partner is (PERSON, UNIT, etc.
    public class PPartnerClassesAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerClasses";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_classes";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_class_c"}) + " FROM PUB_p_partner_classes") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerClassesTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerClassesTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerClassesTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerClassesTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerClassesTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_class_c"}) + " FROM PUB_p_partner_classes WHERE p_partner_class_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerClassesTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerClassesTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerClassesTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerClass, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerClassesTable AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerClassesTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_class_c"}) + " FROM PUB_p_partner_classes") 
                            + GenerateWhereClause(PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerClassesTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerClassesTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerClassesTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerClassesTable AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerClassesTable AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerClassesTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_classes", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String APartnerClass, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_classes WHERE p_partner_class_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_classes" + GenerateWhereClause(PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String APartnerClass, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_classes WHERE p_partner_class_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_classes" + GenerateWhereClause(PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerClassesTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_classes", PPartnerClassesTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_classes", PPartnerClassesTable.GetColumnStringList(), PPartnerClassesTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_classes", PPartnerClassesTable.GetColumnStringList(), PPartnerClassesTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerClasses", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This is the main table of the partner system.  Partners can be individuals, families, organisations (churches, businesses), fields, cost centers, and others.  These represent various classes of partners.
    public class PPartnerAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartner";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner") 
                            + GenerateWhereClause(PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner" + GenerateWhereClause(PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(DataSet ADataSet, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AAcquisitionCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_acquisition_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(DataSet AData, String AAcquisitionCode, TDBTransaction ATransaction)
        {
            LoadViaPAcquisition(AData, AAcquisitionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(DataSet AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAcquisition(AData, AAcquisitionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(out PPartnerTable AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAcquisition(FillDataSet, AAcquisitionCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(out PPartnerTable AData, String AAcquisitionCode, TDBTransaction ATransaction)
        {
            LoadViaPAcquisition(out AData, AAcquisitionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisition(out PPartnerTable AData, String AAcquisitionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAcquisition(out AData, AAcquisitionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(DataSet ADataSet, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_acquisition WHERE p_partner.p_acquisition_code_c = p_a" +
                    "cquisition.p_acquisition_code_c") 
                            + GenerateWhereClauseLong("PUB_p_acquisition", PAcquisitionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(DataSet AData, PAcquisitionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAcquisitionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(DataSet AData, PAcquisitionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAcquisitionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(out PPartnerTable AData, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAcquisitionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(out PPartnerTable AData, PAcquisitionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAcquisitionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(out PPartnerTable AData, PAcquisitionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAcquisitionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAcquisitionTemplate(out PPartnerTable AData, PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAcquisitionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPAcquisition(String AAcquisitionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AAcquisitionCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_acquisition_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPAcquisitionTemplate(PAcquisitionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_acquisition WHERE p_partner.p_acquisiti" +
                        "on_code_c = p_acquisition.p_acquisition_code_c" + GenerateWhereClauseLong("PUB_p_acquisition", PAcquisitionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PAcquisitionTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPLanguage(DataSet ADataSet, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ALanguageCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_language_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(DataSet AData, String ALanguageCode, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(AData, ALanguageCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(DataSet AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(AData, ALanguageCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPartnerTable AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLanguage(FillDataSet, ALanguageCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPartnerTable AData, String ALanguageCode, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(out AData, ALanguageCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPartnerTable AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(out AData, ALanguageCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet ADataSet, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_language WHERE p_partner.p_language_code_c = p_languag" +
                    "e.p_language_code_c") 
                            + GenerateWhereClauseLong("PUB_p_language", PLanguageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet AData, PLanguageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet AData, PLanguageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPartnerTable AData, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLanguageTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPartnerTable AData, PLanguageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPartnerTable AData, PLanguageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPartnerTable AData, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPLanguage(String ALanguageCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ALanguageCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_language_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPLanguageTemplate(PLanguageRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_language WHERE p_partner.p_language_cod" +
                        "e_c = p_language.p_language_code_c" + GenerateWhereClauseLong("PUB_p_language", PLanguageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PLanguageTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(DataSet ADataSet, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AStatusCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_status_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(DataSet AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatus(AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(DataSet AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatus(AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(out PPartnerTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerStatus(FillDataSet, AStatusCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(out PPartnerTable AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatus(out AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatus(out PPartnerTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatus(out AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(DataSet ADataSet, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_status WHERE p_partner.p_status_code_c = p_par" +
                    "tner_status.p_status_code_c") 
                            + GenerateWhereClauseLong("PUB_p_partner_status", PPartnerStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(DataSet AData, PPartnerStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatusTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(DataSet AData, PPartnerStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatusTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(out PPartnerTable AData, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerStatusTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(out PPartnerTable AData, PPartnerStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatusTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(out PPartnerTable AData, PPartnerStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatusTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerStatusTemplate(out PPartnerTable AData, PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerStatusTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerStatus(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(AStatusCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_status_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerStatusTemplate(PPartnerStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_status WHERE p_partner.p_status" +
                        "_code_c = p_partner_status.p_status_code_c" + GenerateWhereClauseLong("PUB_p_partner_status", PPartnerStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerStatusTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet ADataSet, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_addressee_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(DataSet AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PPartnerTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAddresseeType(FillDataSet, AAddresseeTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PPartnerTable AData, String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(out AData, AAddresseeTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeType(out PPartnerTable AData, String AAddresseeTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeType(out AData, AAddresseeTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet ADataSet, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_addressee_type WHERE p_partner.p_addressee_type_code_c" +
                    " = p_addressee_type.p_addressee_type_code_c") 
                            + GenerateWhereClauseLong("PUB_p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(DataSet AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PPartnerTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAddresseeTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PPartnerTable AData, PAddresseeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PPartnerTable AData, PAddresseeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAddresseeTypeTemplate(out PPartnerTable AData, PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAddresseeTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPAddresseeType(String AAddresseeTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AAddresseeTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_addressee_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPAddresseeTypeTemplate(PAddresseeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_addressee_type WHERE p_partner.p_addres" +
                        "see_type_code_c = p_addressee_type.p_addressee_type_code_c" + GenerateWhereClauseLong("PUB_p_addressee_type", PAddresseeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PAddresseeTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet ADataSet, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_partner_class_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerClasses(FillDataSet, APartnerClass, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerTable AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(out AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(out AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet ADataSet, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_classes WHERE p_partner.p_partner_class_c = p_" +
                    "partner_classes.p_partner_class_c") 
                            + GenerateWhereClauseLong("PUB_p_partner_classes", PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerClassesTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerTable AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerTable AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerClasses(String APartnerClass, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_partner_class_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerClassesTemplate(PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_classes WHERE p_partner.p_partn" +
                        "er_class_c = p_partner_classes.p_partner_class_c" + GenerateWhereClauseLong("PUB_p_partner_classes", PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerClassesTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(DataSet ADataSet, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AFirstContactCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner WHERE p_first_contact_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(DataSet AData, String AFirstContactCode, TDBTransaction ATransaction)
        {
            LoadViaPFirstContact(AData, AFirstContactCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(DataSet AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFirstContact(AData, AFirstContactCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(out PPartnerTable AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFirstContact(FillDataSet, AFirstContactCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(out PPartnerTable AData, String AFirstContactCode, TDBTransaction ATransaction)
        {
            LoadViaPFirstContact(out AData, AFirstContactCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContact(out PPartnerTable AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFirstContact(out AData, AFirstContactCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(DataSet ADataSet, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_first_contact WHERE p_partner.p_first_contact_code_c =" +
                    " p_first_contact.p_first_contact_code_c") 
                            + GenerateWhereClauseLong("PUB_p_first_contact", PFirstContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(DataSet AData, PFirstContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFirstContactTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(DataSet AData, PFirstContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFirstContactTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(out PPartnerTable AData, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFirstContactTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(out PPartnerTable AData, PFirstContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFirstContactTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(out PPartnerTable AData, PFirstContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFirstContactTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFirstContactTemplate(out PPartnerTable AData, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFirstContactTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFirstContact(String AFirstContactCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AFirstContactCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner WHERE p_first_contact_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFirstContactTemplate(PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_first_contact WHERE p_partner.p_first_c" +
                        "ontact_code_c = p_first_contact.p_first_contact_code_c" + GenerateWhereClauseLong("PUB_p_first_contact", PFirstContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFirstContactTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSUserPRecentPartners(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_recent_partners WHERE PUB_p_recent_partners.p_partner_" +
                    "key_n = PUB_p_partner.p_partner_key_n AND PUB_p_recent_partners.s_user_id_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartners(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartners(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartners(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartners(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartners(out PPartnerTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserPRecentPartners(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartners(out PPartnerTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartners(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartners(out PPartnerTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartners(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_recent_partners, PUB_s_user WHERE PUB_p_recent_partner" +
                    "s.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_recent_partners.s_us" +
                    "er_id_c = PUB_s_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartnersTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartnersTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserPRecentPartnersTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(out PPartnerTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartnersTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartnersTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPRecentPartnersTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPRecentPartnersTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSUserPRecentPartners(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_recent_partners WHERE PUB_p_recent_part" +
                        "ners.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_recent_partners.s" +
                        "_user_id_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserPRecentPartnersTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_recent_partners, PUB_s_user WHERE PUB_p" +
                        "_recent_partners.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_recen" +
                        "t_partners.s_user_id_c = PUB_s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPLocation(DataSet ADataSet, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_location WHERE PUB_p_partner_location.p_partne" +
                    "r_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_location.p_site_key_n " +
                    "= ? AND PUB_p_partner_location.p_location_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocation(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadViaPLocation(AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocation(AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocation(FillDataSet, ASiteKey, ALocationKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerTable AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadViaPLocation(out AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocation(out AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet ADataSet, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_p_partner_location, PUB_p_location WHERE PUB_p_partner_location.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i = PUB_p_location.p_location_key_i") 
                            + GenerateWhereClauseLong("PUB_p_location", PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerTable AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerTable AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPLocation(Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_location WHERE PUB_p_partner_lo" +
                        "cation.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_locatio" +
                        "n.p_site_key_n = ? AND PUB_p_partner_location.p_location_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPLocationTemplate(PLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_location, PUB_p_location WHERE PUB_p_partner_location.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i = PUB_p_location.p_location_key_i" + GenerateWhereClauseLong("PUB_p_location", PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PLocationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartnerAttributeType(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_attribute WHERE PUB_p_partner_attribute.p_part" +
                    "ner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_attribute.p_code_c =" +
                    " ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerAttributeType(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet ADataSet, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_attribute, PUB_p_partner_attribute_type WHERE " +
                    "PUB_p_partner_attribute.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_" +
                    "p_partner_attribute.p_code_c = PUB_p_partner_attribute_type.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerAttributeTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerTable AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartnerAttributeType(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_attribute WHERE PUB_p_partner_a" +
                        "ttribute.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_attri" +
                        "bute.p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerAttributeTypeTemplate(PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_attribute, PUB_p_partner_attrib" +
                        "ute_type WHERE PUB_p_partner_attribute.p_partner_key_n = PUB_p_partner.p_partner" +
                        "_key_n AND PUB_p_partner_attribute.p_code_c = PUB_p_partner_attribute_type.p_cod" +
                        "e_c" + GenerateWhereClauseLong("PUB_p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerAttributeTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPBankingDetails(DataSet ADataSet, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_banking_details WHERE PUB_p_partner_banking_de" +
                    "tails.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_banking_" +
                    "details.p_banking_details_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(DataSet AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(DataSet AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetails(FillDataSet, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerTable AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(out AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(out AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet ADataSet, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_p_partner_banking_details, PUB_p_banking_details WHERE PUB_p_partner_banking_details.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_banking_details.p_banking_details_key_i = PUB_p_banking_details.p_banking_details_key_i") 
                            + GenerateWhereClauseLong("PUB_p_banking_details", PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerTable AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerTable AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPBankingDetails(Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_banking_details WHERE PUB_p_par" +
                        "tner_banking_details.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_p" +
                        "artner_banking_details.p_banking_details_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankingDetailsTemplate(PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_banking_details, PUB_p_banking_details WHERE PUB_p_partner_banking_details.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_banking_details.p_banking_details_key_i = PUB_p_banking_details.p_banking_details_key_i" + GenerateWhereClauseLong("PUB_p_banking_details", PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankingDetailsTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPType(DataSet ADataSet, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_type WHERE PUB_p_partner_type.p_partner_key_n " +
                    "= PUB_p_partner.p_partner_key_n AND PUB_p_partner_type.p_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPType(DataSet AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadViaPType(AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(DataSet AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPType(AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPType(FillDataSet, ATypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTable AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadViaPType(out AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPType(out AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet ADataSet, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_type, PUB_p_type WHERE PUB_p_partner_type.p_pa" +
                    "rtner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_type.p_type_code_c" +
                    " = PUB_p_type.p_type_code_c") 
                            + GenerateWhereClauseLong("PUB_p_type", PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTable AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTable AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPType(String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_type WHERE PUB_p_partner_type.p" +
                        "_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_type.p_type_cod" +
                        "e_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPTypeTemplate(PTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_type, PUB_p_type WHERE PUB_p_pa" +
                        "rtner_type.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_typ" +
                        "e.p_type_code_c = PUB_p_type.p_type_code_c" + GenerateWhereClauseLong("PUB_p_type", PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSUserPCustomisedGreeting(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_customised_greeting WHERE PUB_p_customised_greeting.p_" +
                    "partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_customised_greeting.s_us" +
                    "er_id_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreeting(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreeting(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreeting(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreeting(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreeting(out PPartnerTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserPCustomisedGreeting(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreeting(out PPartnerTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreeting(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreeting(out PPartnerTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreeting(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_customised_greeting, PUB_s_user WHERE PUB_p_customised" +
                    "_greeting.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_customised_g" +
                    "reeting.s_user_id_c = PUB_s_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreetingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreetingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserPCustomisedGreetingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(out PPartnerTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreetingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreetingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserPCustomisedGreetingTemplate(out PPartnerTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserPCustomisedGreetingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSUserPCustomisedGreeting(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_customised_greeting WHERE PUB_p_customi" +
                        "sed_greeting.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_customise" +
                        "d_greeting.s_user_id_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserPCustomisedGreetingTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_customised_greeting, PUB_s_user WHERE P" +
                        "UB_p_customised_greeting.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB" +
                        "_p_customised_greeting.s_user_id_c = PUB_s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPublication(DataSet ADataSet, String APublicationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(APublicationCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_subscription WHERE PUB_p_subscription.p_partner_key_n " +
                    "= PUB_p_partner.p_partner_key_n AND PUB_p_subscription.p_publication_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPublication(DataSet AData, String APublicationCode, TDBTransaction ATransaction)
        {
            LoadViaPPublication(AData, APublicationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublication(DataSet AData, String APublicationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPublication(AData, APublicationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublication(out PPartnerTable AData, String APublicationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPublication(FillDataSet, APublicationCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPublication(out PPartnerTable AData, String APublicationCode, TDBTransaction ATransaction)
        {
            LoadViaPPublication(out AData, APublicationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublication(out PPartnerTable AData, String APublicationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPublication(out AData, APublicationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(DataSet ADataSet, PPublicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_subscription, PUB_p_publication WHERE PUB_p_subscripti" +
                    "on.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_subscription.p_publ" +
                    "ication_code_c = PUB_p_publication.p_publication_code_c") 
                            + GenerateWhereClauseLong("PUB_p_publication", PPublicationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(DataSet AData, PPublicationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPublicationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(DataSet AData, PPublicationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPublicationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(out PPartnerTable AData, PPublicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPublicationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(out PPartnerTable AData, PPublicationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPublicationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(out PPartnerTable AData, PPublicationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPublicationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPublicationTemplate(out PPartnerTable AData, PPublicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPublicationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPublication(String APublicationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(APublicationCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_subscription WHERE PUB_p_subscription.p" +
                        "_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_subscription.p_publicat" +
                        "ion_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPublicationTemplate(PPublicationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_subscription, PUB_p_publication WHERE P" +
                        "UB_p_subscription.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_subs" +
                        "cription.p_publication_code_c = PUB_p_publication.p_publication_code_c" + GenerateWhereClauseLong("PUB_p_publication", PPublicationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPublicationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPDataLabel(DataSet ADataSet, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_data_label_value_partner WHERE PUB_p_data_label_value_" +
                    "partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_data_label_val" +
                    "ue_partner.p_data_label_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PPartnerTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabel(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PPartnerTable AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PPartnerTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet ADataSet, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_data_label_value_partner, PUB_p_data_label WHERE PUB_p" +
                    "_data_label_value_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PU" +
                    "B_p_data_label_value_partner.p_data_label_key_i = PUB_p_data_label.p_key_i") 
                            + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PPartnerTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PPartnerTable AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PPartnerTable AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PPartnerTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPDataLabel(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_data_label_value_partner WHERE PUB_p_da" +
                        "ta_label_value_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p" +
                        "_data_label_value_partner.p_data_label_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDataLabelTemplate(PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_data_label_value_partner, PUB_p_data_la" +
                        "bel WHERE PUB_p_data_label_value_partner.p_partner_key_n = PUB_p_partner.p_partn" +
                        "er_key_n AND PUB_p_data_label_value_partner.p_data_label_key_i = PUB_p_data_labe" +
                        "l.p_key_i" + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDataLabelTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaUmJob(DataSet ADataSet, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[4];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AUnitKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(APositionName));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[2].Value = ((object)(APositionScope));
            ParametersArray[3] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[3].Value = ((object)(AJobKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_pm_job_assignment WHERE PUB_pm_job_assignment.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_pm_job_assignment.pm_unit_key_n = ? AND PUB_pm_job_assignment.pt_position_name_c = ? AND PUB_pm_job_assignment.pt_position_scope_c = ? AND PUB_pm_job_assignment.um_job_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaUmJob(DataSet AData, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, TDBTransaction ATransaction)
        {
            LoadViaUmJob(AData, AUnitKey, APositionName, APositionScope, AJobKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJob(DataSet AData, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUmJob(AData, AUnitKey, APositionName, APositionScope, AJobKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJob(out PPartnerTable AData, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaUmJob(FillDataSet, AUnitKey, APositionName, APositionScope, AJobKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaUmJob(out PPartnerTable AData, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, TDBTransaction ATransaction)
        {
            LoadViaUmJob(out AData, AUnitKey, APositionName, APositionScope, AJobKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJob(out PPartnerTable AData, Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUmJob(out AData, AUnitKey, APositionName, APositionScope, AJobKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(DataSet ADataSet, UmJobRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_pm_job_assignment, PUB_um_job WHERE PUB_pm_job_assignment.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_pm_job_assignment.pm_unit_key_n = PUB_um_job.pm_unit_key_n AND PUB_pm_job_assignment.pt_position_name_c = PUB_um_job.pt_position_name_c AND PUB_pm_job_assignment.pt_position_scope_c = PUB_um_job.pt_position_scope_c AND PUB_pm_job_assignment.um_job_key_i = PUB_um_job.um_job_key_i") 
                            + GenerateWhereClauseLong("PUB_um_job", UmJobTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(DataSet AData, UmJobRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaUmJobTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(DataSet AData, UmJobRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUmJobTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(out PPartnerTable AData, UmJobRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaUmJobTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(out PPartnerTable AData, UmJobRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaUmJobTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(out PPartnerTable AData, UmJobRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUmJobTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUmJobTemplate(out PPartnerTable AData, UmJobRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUmJobTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaUmJob(Int64 AUnitKey, String APositionName, String APositionScope, Int32 AJobKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[4];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AUnitKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(APositionName));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[2].Value = ((object)(APositionScope));
            ParametersArray[3] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[3].Value = ((object)(AJobKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner, PUB_pm_job_assignment WHERE PUB_pm_job_assignment.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_pm_job_assignment.pm_unit_key_n = ? AND PUB_pm_job_assignment.pt_position_name_c = ? AND PUB_pm_job_assignment.pt_position_scope_c = ? AND PUB_pm_job_assignment.um_job_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaUmJobTemplate(UmJobRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner, PUB_pm_job_assignment, PUB_um_job WHERE PUB_pm_job_assignment.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_pm_job_assignment.pm_unit_key_n = PUB_um_job.pm_unit_key_n AND PUB_pm_job_assignment.pt_position_name_c = PUB_um_job.pt_position_name_c AND PUB_pm_job_assignment.pt_position_scope_c = PUB_um_job.pt_position_scope_c AND PUB_pm_job_assignment.um_job_key_i = PUB_um_job.um_job_key_i" + GenerateWhereClauseLong("PUB_um_job", UmJobTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, UmJobTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartnerContact(DataSet ADataSet, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_reminder WHERE PUB_p_partner_reminder.p_partne" +
                    "r_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_reminder.p_contact_id_" +
                    "i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContact(FillDataSet, AContactId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerTable AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet ADataSet, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_reminder, PUB_p_partner_contact WHERE PUB_p_pa" +
                    "rtner_reminder.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner" +
                    "_reminder.p_contact_id_i = PUB_p_partner_contact.p_contact_id_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerTable AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerTable AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartnerContact(Int32 AContactId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_reminder WHERE PUB_p_partner_re" +
                        "minder.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_reminde" +
                        "r.p_contact_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactTemplate(PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_reminder, PUB_p_partner_contact" +
                        " WHERE PUB_p_partner_reminder.p_partner_key_n = PUB_p_partner.p_partner_key_n AN" +
                        "D PUB_p_partner_reminder.p_contact_id_i = PUB_p_partner_contact.p_contact_id_i" + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerContactTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartnerSet(DataSet ADataSet, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_p_partner_set_partner WHERE PUB_p_partner_set_partner.p_" +
                    "partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_set_partner.p_pa" +
                    "rtner_set_id_c = ? AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(DataSet AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(DataSet AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerSet(FillDataSet, APartnerSetId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerTable AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(out AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(out AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet ADataSet, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_p_partner_set_partner, PUB_p_partner_set WHERE PUB_p_partner_set_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner_set", PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerSetTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerTable AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartnerSet(String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_set_partner WHERE PUB_p_partner" +
                        "_set_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_s" +
                        "et_partner.p_partner_set_id_c = ? AND PUB_p_partner_set_partner.p_partner_set_un" +
                        "it_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerSetTemplate(PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner, PUB_p_partner_set_partner, PUB_p_partner_set WHERE PUB_p_partner_set_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n" + GenerateWhereClauseLong("PUB_p_partner_set", PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerSetTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSVolumePartnerGroup(DataSet ADataSet, String AName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner, PUB_s_volume_partner_group_partner WHERE PUB_s_volume_partne" +
                    "r_group_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_s_volume" +
                    "_partner_group_partner.s_group_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroup(DataSet AData, String AName, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroup(AData, AName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroup(DataSet AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroup(AData, AName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroup(out PPartnerTable AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSVolumePartnerGroup(FillDataSet, AName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroup(out PPartnerTable AData, String AName, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroup(out AData, AName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroup(out PPartnerTable AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroup(out AData, AName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(DataSet ADataSet, SVolumePartnerGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_partner, PUB_s_volume_partner_group_partner, PUB_s_volume_partner_group WHERE PUB_s_volume_partner_group_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_s_volume_partner_group_partner.s_group_name_c = PUB_s_volume_partner_group.s_name_c") 
                            + GenerateWhereClauseLong("PUB_s_volume_partner_group", SVolumePartnerGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(DataSet AData, SVolumePartnerGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(DataSet AData, SVolumePartnerGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(out PPartnerTable AData, SVolumePartnerGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSVolumePartnerGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(out PPartnerTable AData, SVolumePartnerGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(out PPartnerTable AData, SVolumePartnerGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumePartnerGroupTemplate(out PPartnerTable AData, SVolumePartnerGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumePartnerGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSVolumePartnerGroup(String AName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner, PUB_s_volume_partner_group_partner WHERE PUB_" +
                        "s_volume_partner_group_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n A" +
                        "ND PUB_s_volume_partner_group_partner.s_group_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSVolumePartnerGroupTemplate(SVolumePartnerGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner, PUB_s_volume_partner_group_partner, PUB_s_volume_partner_group WHERE PUB_s_volume_partner_group_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n AND PUB_s_volume_partner_group_partner.s_group_name_c = PUB_s_volume_partner_group.s_name_c" + GenerateWhereClauseLong("PUB_s_volume_partner_group", SVolumePartnerGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SVolumePartnerGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner" + GenerateWhereClause(PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner", PPartnerTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner", PPartnerTable.GetColumnStringList(), PPartnerTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner", PPartnerTable.GetColumnStringList(), PPartnerTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartner", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// The partners a user has been working with recently
    public class PRecentPartnersAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PRecentPartners";
        
        /// original table name in database
        public const string DBTABLENAME = "p_recent_partners";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners") 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRecentPartnersTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PRecentPartnersTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRecentPartnersTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AUserId, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners WHERE s_user_id_c = ? AND p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AUserId, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AUserId, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AUserId, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AUserId, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRecentPartnersTable AData, String AUserId, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AUserId, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRecentPartnersTable AData, String AUserId, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AUserId, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRecentPartnersTable AData, String AUserId, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AUserId, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PRecentPartnersRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners") 
                            + GenerateWhereClause(PRecentPartnersTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRecentPartnersRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRecentPartnersRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRecentPartnersTable AData, PRecentPartnersRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRecentPartnersTable AData, PRecentPartnersRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRecentPartnersTable AData, PRecentPartnersRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRecentPartnersTable AData, PRecentPartnersRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_recent_partners", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AUserId, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_recent_partners WHERE s_user_id_c = ? AND p_partner_ke" +
                        "y_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PRecentPartnersRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_recent_partners" + GenerateWhereClause(PRecentPartnersTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners WHERE s_user_id_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUser(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUser(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PRecentPartnersTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUser(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PRecentPartnersTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUser(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PRecentPartnersTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUser(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_recent_partners", AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners, PUB_s_user WHERE p_recent_partners.s_user_id_c = s_u" +
                    "ser.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PRecentPartnersTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PRecentPartnersTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PRecentPartnersTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PRecentPartnersTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUser(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_recent_partners WHERE s_user_id_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_recent_partners, PUB_s_user WHERE p_recent_partners.s_" +
                        "user_id_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PRecentPartnersTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PRecentPartnersTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PRecentPartnersTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_recent_partners", AFieldList, new string[] {
                            "s_user_id_c",
                            "p_partner_key_n"}) + " FROM PUB_p_recent_partners, PUB_p_partner WHERE p_recent_partners.p_partner_key_" +
                    "n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRecentPartnersTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PRecentPartnersTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRecentPartnersTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PRecentPartnersTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PRecentPartnersTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PRecentPartnersTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_recent_partners WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_recent_partners, PUB_p_partner WHERE p_recent_partners" +
                        ".p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AUserId, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_recent_partners WHERE s_user_id_c = ? AND p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PRecentPartnersRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_recent_partners" + GenerateWhereClause(PRecentPartnersTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PRecentPartnersTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_recent_partners", PRecentPartnersTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_recent_partners", PRecentPartnersTable.GetColumnStringList(), PRecentPartnersTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_recent_partners", PRecentPartnersTable.GetColumnStringList(), PRecentPartnersTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PRecentPartners", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Any graphic associated to a partner can be stored here.
    public class PPartnerGraphicAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerGraphic";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_graphic";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerGraphicTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerGraphicTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerGraphicTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerGraphicTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFileInfoKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerGraphicTable AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerGraphicTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerGraphicRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic") 
                            + GenerateWhereClause(PPartnerGraphicTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerGraphicRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerGraphicRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerGraphicTable AData, PPartnerGraphicRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerGraphicTable AData, PPartnerGraphicRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerGraphicTable AData, PPartnerGraphicRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerGraphicTable AData, PPartnerGraphicRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_graphic", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_graphic WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerGraphicRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_graphic" + GenerateWhereClause(PPartnerGraphicTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerGraphicTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerGraphicTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerGraphicTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_graphic", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic, PUB_p_partner WHERE p_partner_graphic.p_partner_key_" +
                    "n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerGraphicTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerGraphicTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerGraphicTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerGraphicTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_graphic WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_graphic, PUB_p_partner WHERE p_partner_graphic" +
                        ".p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet ADataSet, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerGraphicTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfo(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerGraphicTable AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerGraphicTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet ADataSet, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_graphic", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_graphic, PUB_p_file_info WHERE p_partner_graphic.p_file_info_" +
                    "key_n = p_file_info.p_key_n") 
                            + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerGraphicTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerGraphicTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerGraphicTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfoTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerGraphicTable AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerGraphicTable AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerGraphicTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFileInfo(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_graphic WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFileInfoTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_graphic, PUB_p_file_info WHERE p_partner_graph" +
                        "ic.p_file_info_key_n = p_file_info.p_key_n" + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFileInfoTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_graphic WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerGraphicRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_graphic" + GenerateWhereClause(PPartnerGraphicTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerGraphicTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_graphic", PPartnerGraphicTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_graphic", PPartnerGraphicTable.GetColumnStringList(), PPartnerGraphicTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_graphic", PPartnerGraphicTable.GetColumnStringList(), PPartnerGraphicTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerGraphic", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Address and other data related to that address.
    public class PLocationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PLocation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_location";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location WHERE p_site_key_n = ? AND p_location_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ASiteKey, ALocationKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location") 
                            + GenerateWhereClause(PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTable AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTable AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_location", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_location WHERE p_site_key_n = ? AND p_location_key_i =" +
                        " ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_location" + GenerateWhereClause(PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet ADataSet, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location WHERE p_country_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PLocationTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountry(FillDataSet, ACountryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PLocationTable AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PLocationTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet ADataSet, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_location", AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location, PUB_p_country WHERE p_location.p_country_code_c = p_country" +
                    ".p_country_code_c") 
                            + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PLocationTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PLocationTable AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PLocationTable AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PLocationTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPCountry(String ACountryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_location WHERE p_country_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPCountryTemplate(PCountryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_location, PUB_p_country WHERE p_location.p_country_cod" +
                        "e_c = p_country.p_country_code_c" + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PCountryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_location", AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_location, PUB_p_partner_location WHERE PUB_p_partner_location.p_site_" +
                    "key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i " +
                    "= PUB_p_location.p_location_key_i AND PUB_p_partner_location.p_partner_key_n = ?" +
                    "") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PLocationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PLocationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PLocationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_location", AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + @" FROM PUB_p_location, PUB_p_partner_location, PUB_p_partner WHERE PUB_p_partner_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_p_partner_location.p_partner_key_n = PUB_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PLocationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PLocationTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PLocationTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PLocationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_location, PUB_p_partner_location WHERE PUB_p_partner_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_p_partner_location.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_location, PUB_p_partner_location, PUB_p_partner WHERE PUB_p_partner_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_p_partner_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_p_partner_location.p_partner_key_n = PUB_p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_location", AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + @" FROM PUB_p_location, PUB_s_group_location WHERE PUB_s_group_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_s_group_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_s_group_location.s_group_id_c = ? AND PUB_s_group_location.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PLocationTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PLocationTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PLocationTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_location", AFieldList, new string[] {
                            "p_site_key_n",
                            "p_location_key_i"}) + @" FROM PUB_p_location, PUB_s_group_location, PUB_s_group WHERE PUB_s_group_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_s_group_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_s_group_location.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_location.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PLocationTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PLocationTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PLocationTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PLocationTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_location, PUB_s_group_location WHERE PUB_s_group_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_s_group_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_s_group_location.s_group_id_c = ? AND PUB_s_group_location.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_location, PUB_s_group_location, PUB_s_group WHERE PUB_s_group_location.p_site_key_n = PUB_p_location.p_site_key_n AND PUB_s_group_location.p_location_key_i = PUB_p_location.p_location_key_i AND PUB_s_group_location.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_location.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_location WHERE p_site_key_n = ? AND p_location_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_location" + GenerateWhereClause(PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PLocationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PLocationRow)(TheRow)).LocationKey = ((Int32)(DBAccess.GDBAccessObj.GetNextSequenceValue("seq_location_number", ATransaction)));
                        TTypedDataAccess.InsertRow("p_location", PLocationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_location", PLocationTable.GetColumnStringList(), PLocationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_location", PLocationTable.GetColumnStringList(), PLocationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PLocation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Types of address e.g. home, business
    public class PLocationTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PLocationType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_location_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_location_type") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PLocationTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_location_type WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PLocationTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTypeTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PLocationTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_location_type") 
                            + GenerateWhereClause(PLocationTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PLocationTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PLocationTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PLocationTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTypeTable AData, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PLocationTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTypeTable AData, PLocationTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTypeTable AData, PLocationTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PLocationTypeTable AData, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_location_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_location_type WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_location_type" + GenerateWhereClause(PLocationTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_location_type WHERE p_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_location_type" + GenerateWhereClause(PLocationTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PLocationTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_location_type", PLocationTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_location_type", PLocationTypeTable.GetColumnStringList(), PLocationTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_location_type", PLocationTypeTable.GetColumnStringList(), PLocationTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PLocationType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Links partners with locations (addresses) and has specific info about the link (e.g. phone number)
    public class PPartnerLocationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerLocation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_location";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLocationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLocationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLocationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(ASiteKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ALocationKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location WHERE p_partner_key_n = ? AND p_site_key_n = ? AND p" +
                    "_location_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLocationTable AData, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ASiteKey, ALocationKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLocationTable AData, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLocationTable AData, Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location") 
                            + GenerateWhereClause(PPartnerLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLocationTable AData, PPartnerLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLocationTable AData, PPartnerLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLocationTable AData, PPartnerLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLocationTable AData, PPartnerLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_location", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(ASiteKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ALocationKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_location WHERE p_partner_key_n = ? AND p_site_" +
                        "key_n = ? AND p_location_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_location" + GenerateWhereClause(PPartnerLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerLocationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerLocationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerLocationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_location", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location, PUB_p_partner WHERE p_partner_location.p_partner_ke" +
                    "y_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerLocationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerLocationTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerLocationTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerLocationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_location WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_location, PUB_p_partner WHERE p_partner_locati" +
                        "on.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPLocation(DataSet ADataSet, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location WHERE p_site_key_n = ? AND p_location_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocation(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadViaPLocation(AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(DataSet AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocation(AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocation(FillDataSet, ASiteKey, ALocationKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            LoadViaPLocation(out AData, ASiteKey, ALocationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocation(out PPartnerLocationTable AData, Int64 ASiteKey, Int32 ALocationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocation(out AData, ASiteKey, ALocationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet ADataSet, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_location", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location, PUB_p_location WHERE p_partner_location.p_site_key_" +
                    "n = p_location.p_site_key_n AND p_partner_location.p_location_key_i = p_location" +
                    ".p_location_key_i") 
                            + GenerateWhereClauseLong("PUB_p_location", PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(DataSet AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerLocationTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerLocationTable AData, PLocationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerLocationTable AData, PLocationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTemplate(out PPartnerLocationTable AData, PLocationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPLocation(Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ALocationKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_location WHERE p_site_key_n = ? AND p_location" +
                        "_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPLocationTemplate(PLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_location, PUB_p_location WHERE p_partner_locat" +
                        "ion.p_site_key_n = p_location.p_site_key_n AND p_partner_location.p_location_key" +
                        "_i = p_location.p_location_key_i" + GenerateWhereClauseLong("PUB_p_location", PLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PLocationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPLocationType(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location WHERE p_location_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocationType(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPLocationType(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationType(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationType(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationType(out PPartnerLocationTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocationType(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocationType(out PPartnerLocationTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPLocationType(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationType(out PPartnerLocationTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationType(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(DataSet ADataSet, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_location", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + " FROM PUB_p_partner_location, PUB_p_location_type WHERE p_partner_location.p_loca" +
                    "tion_type_c = p_location_type.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_location_type", PLocationTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(DataSet AData, PLocationTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(DataSet AData, PLocationTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(out PPartnerLocationTable AData, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLocationTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(out PPartnerLocationTable AData, PLocationTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLocationTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(out PPartnerLocationTable AData, PLocationTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLocationTypeTemplate(out PPartnerLocationTable AData, PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLocationTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPLocationType(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_location WHERE p_location_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPLocationTypeTemplate(PLocationTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_location, PUB_p_location_type WHERE p_partner_" +
                        "location.p_location_type_c = p_location_type.p_code_c" + GenerateWhereClauseLong("PUB_p_location_type", PLocationTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PLocationTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_location", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + @" FROM PUB_p_partner_location, PUB_s_group_partner_location WHERE PUB_s_group_partner_location.p_partner_key_n = PUB_p_partner_location.p_partner_key_n AND PUB_s_group_partner_location.p_site_key_n = PUB_p_partner_location.p_site_key_n AND PUB_s_group_partner_location.p_location_key_i = PUB_p_partner_location.p_location_key_i AND PUB_s_group_partner_location.s_group_id_c = ? AND PUB_s_group_partner_location.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerLocationTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerLocationTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerLocationTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_location", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_site_key_n",
                            "p_location_key_i"}) + @" FROM PUB_p_partner_location, PUB_s_group_partner_location, PUB_s_group WHERE PUB_s_group_partner_location.p_partner_key_n = PUB_p_partner_location.p_partner_key_n AND PUB_s_group_partner_location.p_site_key_n = PUB_p_partner_location.p_site_key_n AND PUB_s_group_partner_location.p_location_key_i = PUB_p_partner_location.p_location_key_i AND PUB_s_group_partner_location.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_location.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLocationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerLocationTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLocationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerLocationTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerLocationTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerLocationTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner_location, PUB_s_group_partner_location WHERE PUB_s_group_partner_location.p_partner_key_n = PUB_p_partner_location.p_partner_key_n AND PUB_s_group_partner_location.p_site_key_n = PUB_p_partner_location.p_site_key_n AND PUB_s_group_partner_location.p_location_key_i = PUB_p_partner_location.p_location_key_i AND PUB_s_group_partner_location.s_group_id_c = ? AND PUB_s_group_partner_location.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_location, PUB_s_group_partner_location, PUB_s_group WHERE PUB_s_group_partner_location.p_partner_key_n = PUB_p_partner_location.p_partner_key_n AND PUB_s_group_partner_location.p_site_key_n = PUB_p_partner_location.p_site_key_n AND PUB_s_group_partner_location.p_location_key_i = PUB_p_partner_location.p_location_key_i AND PUB_s_group_partner_location.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_location.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int64 ASiteKey, Int32 ALocationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(ASiteKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ALocationKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_location WHERE p_partner_key_n = ? AND p_site_key_n = ?" +
                    " AND p_location_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerLocationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_location" + GenerateWhereClause(PPartnerLocationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerLocationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_location", PPartnerLocationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_location", PPartnerLocationTable.GetColumnStringList(), PPartnerLocationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_location", PPartnerLocationTable.GetColumnStringList(), PPartnerLocationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerLocation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// All the different Partner attribute types will be stored in here.
    public class PPartnerAttributeTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerAttributeType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_attribute_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_partner_attribute_type") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_partner_attribute_type WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTypeTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_partner_attribute_type") 
                            + GenerateWhereClause(PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTypeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTypeTable AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTypeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTypeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute_type WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_attribute_type" + GenerateWhereClause(PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_attribute_type", AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_partner_attribute_type, PUB_p_partner_attribute WHERE PUB_p_partner_a" +
                    "ttribute.p_code_c = PUB_p_partner_attribute_type.p_code_c AND PUB_p_partner_attr" +
                    "ibute.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTypeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_attribute_type", AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_partner_attribute_type, PUB_p_partner_attribute, PUB_p_partner WHERE " +
                    "PUB_p_partner_attribute.p_code_c = PUB_p_partner_attribute_type.p_code_c AND PUB" +
                    "_p_partner_attribute.p_partner_key_n = PUB_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTypeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTypeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute_type, PUB_p_partner_attribute WHERE " +
                        "PUB_p_partner_attribute.p_code_c = PUB_p_partner_attribute_type.p_code_c AND PUB" +
                        "_p_partner_attribute.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_attribute_type, PUB_p_partner_attribute, PUB_p" +
                        "_partner WHERE PUB_p_partner_attribute.p_code_c = PUB_p_partner_attribute_type.p" +
                        "_code_c AND PUB_p_partner_attribute.p_partner_key_n = PUB_p_partner.p_partner_ke" +
                        "y_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_attribute_type WHERE p_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_attribute_type" + GenerateWhereClause(PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerAttributeTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), PPartnerAttributeTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), PPartnerAttributeTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerAttributeType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Mainly introduced for contact details like email addresses and mobile phone numbers, but can be used for any attribute you might want to save for a partner.
    public class PPartnerAttributeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerAttribute";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_attribute";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerAttributeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, String ACode, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[1].Value = ((object)(ACode));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute WHERE p_partner_key_n = ? AND p_code_c = ? AND p_se" +
                    "quence_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ACode, Int32 ASequence, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ACode, ASequence, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ACode, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ACode, ASequence, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTable AData, Int64 APartnerKey, String ACode, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ACode, ASequence, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTable AData, Int64 APartnerKey, String ACode, Int32 ASequence, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ACode, ASequence, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerAttributeTable AData, Int64 APartnerKey, String ACode, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ACode, ASequence, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerAttributeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute") 
                            + GenerateWhereClause(PPartnerAttributeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerAttributeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerAttributeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTable AData, PPartnerAttributeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTable AData, PPartnerAttributeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTable AData, PPartnerAttributeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerAttributeTable AData, PPartnerAttributeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, String ACode, Int32 ASequence, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[1].Value = ((object)(ACode));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute WHERE p_partner_key_n = ? AND p_code" +
                        "_c = ? AND p_sequence_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerAttributeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_attribute" + GenerateWhereClause(PPartnerAttributeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerAttributeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_attribute", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute, PUB_p_partner WHERE p_partner_attribute.p_partner_" +
                    "key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerAttributeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_attribute, PUB_p_partner WHERE p_partner_attri" +
                        "bute.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerAttributeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerAttributeType(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerAttributeTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeType(out PPartnerAttributeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeType(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet ADataSet, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_attribute", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_code_c",
                            "p_sequence_i"}) + " FROM PUB_p_partner_attribute, PUB_p_partner_attribute_type WHERE p_partner_attri" +
                    "bute.p_code_c = p_partner_attribute_type.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerAttributeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(DataSet AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerAttributeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerAttributeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerAttributeTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerAttributeTable AData, PPartnerAttributeTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerAttributeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerAttributeTypeTemplate(out PPartnerAttributeTable AData, PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerAttributeTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerAttributeType(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_attribute WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerAttributeTypeTemplate(PPartnerAttributeTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_attribute, PUB_p_partner_attribute_type WHERE " +
                        "p_partner_attribute.p_code_c = p_partner_attribute_type.p_code_c" + GenerateWhereClauseLong("PUB_p_partner_attribute_type", PPartnerAttributeTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerAttributeTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, String ACode, Int32 ASequence, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[1].Value = ((object)(ACode));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_attribute WHERE p_partner_key_n = ? AND p_code_c = ? AN" +
                    "D p_sequence_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerAttributeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_attribute" + GenerateWhereClause(PPartnerAttributeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerAttributeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_attribute", PPartnerAttributeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_attribute", PPartnerAttributeTable.GetColumnStringList(), PPartnerAttributeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_attribute", PPartnerAttributeTable.GetColumnStringList(), PPartnerAttributeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerAttribute", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// General information about the unit such as unit type and entry conference. 
    public class UUnitTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "UUnitType";
        
        /// original table name in database
        public const string DBTABLENAME = "u_unit_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "u_unit_type_code_c"}) + " FROM PUB_u_unit_type") 
                            + GenerateOrderByClause(AOrderBy)), UUnitTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out UUnitTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UUnitTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out UUnitTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out UUnitTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AUnitTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "u_unit_type_code_c"}) + " FROM PUB_u_unit_type WHERE u_unit_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), UUnitTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AUnitTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AUnitTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AUnitTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UUnitTypeTable AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UUnitTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AUnitTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UUnitTypeTable AData, String AUnitTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AUnitTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UUnitTypeTable AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AUnitTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "u_unit_type_code_c"}) + " FROM PUB_u_unit_type") 
                            + GenerateWhereClause(UUnitTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), UUnitTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, UUnitTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, UUnitTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UUnitTypeTable AData, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UUnitTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UUnitTypeTable AData, UUnitTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UUnitTypeTable AData, UUnitTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UUnitTypeTable AData, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_u_unit_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AUnitTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AUnitTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_u_unit_type WHERE u_unit_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_u_unit_type" + GenerateWhereClause(UUnitTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AUnitTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AUnitTypeCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_u_unit_type WHERE u_unit_type_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_u_unit_type" + GenerateWhereClause(UUnitTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(UUnitTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("u_unit_type", UUnitTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("u_unit_type", UUnitTypeTable.GetColumnStringList(), UUnitTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("u_unit_type", UUnitTypeTable.GetColumnStringList(), UUnitTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table UUnitType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Details of a unit.  This is an organizational unit such as an om field, department, local cost center, etc.
    public class PUnitAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PUnit";
        
        /// original table name in database
        public const string DBTABLENAME = "p_unit";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PUnitTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PUnitTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PUnitTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PUnitTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit") 
                            + GenerateWhereClause(PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PUnitTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PUnitTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PUnitTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PUnitTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit" + GenerateWhereClause(PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PUnitTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_p_partner WHERE p_unit.p_partner_key_n = p_partner.p_partne" +
                    "r_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_p_partner WHERE p_unit.p_partner_key_n = p_p" +
                        "artner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaUUnitType(DataSet ADataSet, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AUnitTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE u_unit_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaUUnitType(DataSet AData, String AUnitTypeCode, TDBTransaction ATransaction)
        {
            LoadViaUUnitType(AData, AUnitTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitType(DataSet AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUUnitType(AData, AUnitTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitType(out PUnitTable AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaUUnitType(FillDataSet, AUnitTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaUUnitType(out PUnitTable AData, String AUnitTypeCode, TDBTransaction ATransaction)
        {
            LoadViaUUnitType(out AData, AUnitTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitType(out PUnitTable AData, String AUnitTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUUnitType(out AData, AUnitTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(DataSet ADataSet, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_u_unit_type WHERE p_unit.u_unit_type_code_c = u_unit_type.u" +
                    "_unit_type_code_c") 
                            + GenerateWhereClauseLong("PUB_u_unit_type", UUnitTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(DataSet AData, UUnitTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaUUnitTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(DataSet AData, UUnitTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUUnitTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(out PUnitTable AData, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaUUnitTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(out PUnitTable AData, UUnitTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaUUnitTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(out PUnitTable AData, UUnitTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUUnitTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaUUnitTypeTemplate(out PUnitTable AData, UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaUUnitTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaUUnitType(String AUnitTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AUnitTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE u_unit_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaUUnitTypeTemplate(UUnitTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_u_unit_type WHERE p_unit.u_unit_type_code_c " +
                        "= u_unit_type.u_unit_type_code_c" + GenerateWhereClauseLong("PUB_u_unit_type", UUnitTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, UUnitTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet ADataSet, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE p_country_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PUnitTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountry(FillDataSet, ACountryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PUnitTable AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PUnitTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet ADataSet, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_p_country WHERE p_unit.p_country_code_c = p_country.p_count" +
                    "ry_code_c") 
                            + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PUnitTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PUnitTable AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PUnitTable AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PUnitTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPCountry(String ACountryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE p_country_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPCountryTemplate(PCountryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_p_country WHERE p_unit.p_country_code_c = p_" +
                        "country.p_country_code_c" + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PCountryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet ADataSet, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE p_xyz_tbd_cost_currency_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PUnitTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrency(FillDataSet, ACurrencyCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PUnitTable AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PUnitTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet ADataSet, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_a_currency WHERE p_unit.p_xyz_tbd_cost_currency_code_c = a_" +
                    "currency.a_currency_code_c") 
                            + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PUnitTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrencyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PUnitTable AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PUnitTable AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PUnitTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaACurrency(String ACurrencyCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE p_xyz_tbd_cost_currency_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaACurrencyTemplate(ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_a_currency WHERE p_unit.p_xyz_tbd_cost_curre" +
                        "ncy_code_c = a_currency.a_currency_code_c" + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, ACurrencyTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit WHERE p_primary_office_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOffice(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOffice(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPrimaryOffice(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(out PUnitTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOffice(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOffice(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOffice(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_p_partner WHERE p_unit.p_primary_office_n = p_partner.p_par" +
                    "tner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOfficeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOfficeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPrimaryOfficeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOfficeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOfficeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPrimaryOfficeTemplate(out PUnitTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPrimaryOfficeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPrimaryOffice(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit WHERE p_primary_office_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPrimaryOfficeTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_p_partner WHERE p_unit.p_primary_office_n = " +
                        "p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPerson(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_pm_general_application WHERE PUB_pm_general_application.pm_" +
                    "registration_office_n = PUB_p_unit.p_partner_key_n AND PUB_pm_general_applicatio" +
                    "n.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPerson(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPerson(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPerson(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPerson(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PUnitTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPerson(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PUnitTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPerson(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet ADataSet, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_pm_general_application, PUB_p_person WHERE PUB_pm_general_a" +
                    "pplication.pm_registration_office_n = PUB_p_unit.p_partner_key_n AND PUB_pm_gene" +
                    "ral_application.p_partner_key_n = PUB_p_person.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_person", PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PUnitTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPersonTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PUnitTable AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PUnitTable AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PUnitTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPerson(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit, PUB_pm_general_application WHERE PUB_pm_general_" +
                        "application.pm_registration_office_n = PUB_p_unit.p_partner_key_n AND PUB_pm_gen" +
                        "eral_application.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPersonTemplate(PPersonRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_pm_general_application, PUB_p_person WHERE P" +
                        "UB_pm_general_application.pm_registration_office_n = PUB_p_unit.p_partner_key_n " +
                        "AND PUB_pm_general_application.p_partner_key_n = PUB_p_person.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_person", PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPersonTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtPosition(DataSet ADataSet, String APositionName, String APositionScope, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(APositionName));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[1].Value = ((object)(APositionScope));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_job WHERE PUB_um_job.pm_unit_key_n = PUB_p_unit.p_partne" +
                    "r_key_n AND PUB_um_job.pt_position_name_c = ? AND PUB_um_job.pt_position_scope_c" +
                    " = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtPosition(DataSet AData, String APositionName, String APositionScope, TDBTransaction ATransaction)
        {
            LoadViaPtPosition(AData, APositionName, APositionScope, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPosition(DataSet AData, String APositionName, String APositionScope, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtPosition(AData, APositionName, APositionScope, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPosition(out PUnitTable AData, String APositionName, String APositionScope, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtPosition(FillDataSet, APositionName, APositionScope, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtPosition(out PUnitTable AData, String APositionName, String APositionScope, TDBTransaction ATransaction)
        {
            LoadViaPtPosition(out AData, APositionName, APositionScope, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPosition(out PUnitTable AData, String APositionName, String APositionScope, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtPosition(out AData, APositionName, APositionScope, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(DataSet ADataSet, PtPositionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_job, PUB_pt_position WHERE PUB_um_job.pm_unit_key_n = PU" +
                    "B_p_unit.p_partner_key_n AND PUB_um_job.pt_position_name_c = PUB_pt_position.pt_" +
                    "position_name_c AND PUB_um_job.pt_position_scope_c = PUB_pt_position.pt_position" +
                    "_scope_c") 
                            + GenerateWhereClauseLong("PUB_pt_position", PtPositionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(DataSet AData, PtPositionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtPositionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(DataSet AData, PtPositionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtPositionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(out PUnitTable AData, PtPositionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtPositionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(out PUnitTable AData, PtPositionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtPositionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(out PUnitTable AData, PtPositionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtPositionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtPositionTemplate(out PUnitTable AData, PtPositionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtPositionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtPosition(String APositionName, String APositionScope, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(APositionName));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[1].Value = ((object)(APositionScope));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit, PUB_um_job WHERE PUB_um_job.pm_unit_key_n = PUB_" +
                        "p_unit.p_partner_key_n AND PUB_um_job.pt_position_name_c = ? AND PUB_um_job.pt_p" +
                        "osition_scope_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtPositionTemplate(PtPositionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_unit, PUB_um_job, PUB_pt_position WHERE PUB_um_job.pm_unit_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_job.pt_position_name_c = PUB_pt_position.pt_position_name_c AND PUB_um_job.pt_position_scope_c = PUB_pt_position.pt_position_scope_c" + GenerateWhereClauseLong("PUB_pt_position", PtPositionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtPositionTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtAbilityArea(DataSet ADataSet, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AAbilityAreaName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_unit_ability WHERE PUB_um_unit_ability.p_partner_key_n =" +
                    " PUB_p_unit.p_partner_key_n AND PUB_um_unit_ability.pt_ability_area_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(DataSet AData, String AAbilityAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(AData, AAbilityAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(DataSet AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(AData, AAbilityAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PUnitTable AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtAbilityArea(FillDataSet, AAbilityAreaName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PUnitTable AData, String AAbilityAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(out AData, AAbilityAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PUnitTable AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(out AData, AAbilityAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet ADataSet, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_unit_ability, PUB_pt_ability_area WHERE PUB_um_unit_abil" +
                    "ity.p_partner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_ability.pt_abil" +
                    "ity_area_name_c = PUB_pt_ability_area.pt_ability_area_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_ability_area", PtAbilityAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet AData, PtAbilityAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet AData, PtAbilityAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PUnitTable AData, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtAbilityAreaTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PUnitTable AData, PtAbilityAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PUnitTable AData, PtAbilityAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PUnitTable AData, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtAbilityArea(String AAbilityAreaName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AAbilityAreaName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit, PUB_um_unit_ability WHERE PUB_um_unit_ability.p_" +
                        "partner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_ability.pt_ability_ar" +
                        "ea_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtAbilityAreaTemplate(PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_um_unit_ability, PUB_pt_ability_area WHERE P" +
                        "UB_um_unit_ability.p_partner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_" +
                        "ability.pt_ability_area_name_c = PUB_pt_ability_area.pt_ability_area_name_c" + GenerateWhereClauseLong("PUB_pt_ability_area", PtAbilityAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtAbilityAreaTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtVisionArea(DataSet ADataSet, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AVisionAreaName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_unit_vision WHERE PUB_um_unit_vision.p_partner_key_n = P" +
                    "UB_p_unit.p_partner_key_n AND PUB_um_unit_vision.pt_vision_area_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(DataSet AData, String AVisionAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(AData, AVisionAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(DataSet AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(AData, AVisionAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PUnitTable AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtVisionArea(FillDataSet, AVisionAreaName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PUnitTable AData, String AVisionAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(out AData, AVisionAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PUnitTable AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(out AData, AVisionAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet ADataSet, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_unit", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_unit, PUB_um_unit_vision, PUB_pt_vision_area WHERE PUB_um_unit_vision" +
                    ".p_partner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_vision.pt_vision_a" +
                    "rea_name_c = PUB_pt_vision_area.pt_vision_area_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_vision_area", PtVisionAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PUnitTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet AData, PtVisionAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet AData, PtVisionAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PUnitTable AData, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PUnitTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtVisionAreaTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PUnitTable AData, PtVisionAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PUnitTable AData, PtVisionAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PUnitTable AData, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtVisionArea(String AVisionAreaName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AVisionAreaName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_unit, PUB_um_unit_vision WHERE PUB_um_unit_vision.p_pa" +
                        "rtner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_vision.pt_vision_area_n" +
                        "ame_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtVisionAreaTemplate(PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_unit, PUB_um_unit_vision, PUB_pt_vision_area WHERE PUB" +
                        "_um_unit_vision.p_partner_key_n = PUB_p_unit.p_partner_key_n AND PUB_um_unit_vis" +
                        "ion.pt_vision_area_name_c = PUB_pt_vision_area.pt_vision_area_name_c" + GenerateWhereClauseLong("PUB_pt_vision_area", PtVisionAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtVisionAreaTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_unit WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_unit" + GenerateWhereClause(PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PUnitTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_unit", PUnitTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_unit", PUnitTable.GetColumnStringList(), PUnitTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_unit", PUnitTable.GetColumnStringList(), PUnitTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PUnit", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This contains parent/child relationships.
    public class UmUnitStructureAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "UmUnitStructure";
        
        /// original table name in database
        public const string DBTABLENAME = "um_unit_structure";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure") 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out UmUnitStructureTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out UmUnitStructureTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out UmUnitStructureTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AParentUnitKey, Int64 AChildUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AParentUnitKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AChildUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure WHERE um_parent_unit_key_n = ? AND um_child_unit_key_" +
                    "n = ?") 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AParentUnitKey, Int64 AChildUnitKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AParentUnitKey, AChildUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AParentUnitKey, Int64 AChildUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AParentUnitKey, AChildUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UmUnitStructureTable AData, Int64 AParentUnitKey, Int64 AChildUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AParentUnitKey, AChildUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UmUnitStructureTable AData, Int64 AParentUnitKey, Int64 AChildUnitKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AParentUnitKey, AChildUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out UmUnitStructureTable AData, Int64 AParentUnitKey, Int64 AChildUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AParentUnitKey, AChildUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, UmUnitStructureRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure") 
                            + GenerateWhereClause(UmUnitStructureTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, UmUnitStructureRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, UmUnitStructureRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UmUnitStructureTable AData, UmUnitStructureRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UmUnitStructureTable AData, UmUnitStructureRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UmUnitStructureTable AData, UmUnitStructureRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out UmUnitStructureTable AData, UmUnitStructureRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_um_unit_structure", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AParentUnitKey, Int64 AChildUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AParentUnitKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AChildUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_um_unit_structure WHERE um_parent_unit_key_n = ? AND um_" +
                        "child_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(UmUnitStructureRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_um_unit_structure" + GenerateWhereClause(UmUnitStructureTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure WHERE um_parent_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitParentUnitKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_um_unit_structure", AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure, PUB_p_unit WHERE um_unit_structure.um_parent_unit_ke" +
                    "y_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitParentUnitKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitParentUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitParentUnitKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnitParentUnitKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_um_unit_structure WHERE um_parent_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitParentUnitKeyTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_um_unit_structure, PUB_p_unit WHERE um_unit_structure.um" +
                        "_parent_unit_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure WHERE um_child_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitChildUnitKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKey(out UmUnitStructureTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_um_unit_structure", AFieldList, new string[] {
                            "um_parent_unit_key_n",
                            "um_child_unit_key_n"}) + " FROM PUB_um_unit_structure, PUB_p_unit WHERE um_unit_structure.um_child_unit_key" +
                    "_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), UmUnitStructureTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new UmUnitStructureTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitChildUnitKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitChildUnitKeyTemplate(out UmUnitStructureTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitChildUnitKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnitChildUnitKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_um_unit_structure WHERE um_child_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitChildUnitKeyTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_um_unit_structure, PUB_p_unit WHERE um_unit_structure.um" +
                        "_child_unit_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AParentUnitKey, Int64 AChildUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AParentUnitKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AChildUnitKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_um_unit_structure WHERE um_parent_unit_key_n = ? AND um_child_uni" +
                    "t_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(UmUnitStructureRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_um_unit_structure" + GenerateWhereClause(UmUnitStructureTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(UmUnitStructureTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("um_unit_structure", UmUnitStructureTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("um_unit_structure", UmUnitStructureTable.GetColumnStringList(), UmUnitStructureTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("um_unit_structure", UmUnitStructureTable.GetColumnStringList(), UmUnitStructureTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table UmUnitStructure", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Contains details about a family in Partnership with us.  May have P_Person records linked to it.
    public class PFamilyAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFamily";
        
        /// original table name in database
        public const string DBTABLENAME = "p_family";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family") 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFamilyTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFamilyTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFamilyTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFamilyTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family") 
                            + GenerateWhereClause(PFamilyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFamilyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFamilyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFamilyTable AData, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFamilyTable AData, PFamilyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFamilyTable AData, PFamilyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFamilyTable AData, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_family", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_family WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFamilyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_family" + GenerateWhereClause(PFamilyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFamilyTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_family", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family, PUB_p_partner WHERE p_family.p_partner_key_n = p_partner.p_pa" +
                    "rtner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFamilyTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFamilyTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFamilyTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFamilyTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_family WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_family, PUB_p_partner WHERE p_family.p_partner_key_n =" +
                        " p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family WHERE p_field_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PFamilyTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PFamilyTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_family", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family, PUB_p_unit WHERE p_family.p_field_key_n = p_unit.p_partner_ke" +
                    "y_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PFamilyTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PFamilyTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PFamilyTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PFamilyTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_family WHERE p_field_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_family, PUB_p_unit WHERE p_family.p_field_key_n = p_un" +
                        "it.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family WHERE p_marital_status_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PFamilyTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtMaritalStatus(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PFamilyTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PFamilyTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet ADataSet, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_family", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_family, PUB_pt_marital_status WHERE p_family.p_marital_status_c = pt_" +
                    "marital_status.pt_code_c") 
                            + GenerateWhereClauseLong("PUB_pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFamilyTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PFamilyTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFamilyTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtMaritalStatusTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PFamilyTable AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PFamilyTable AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PFamilyTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPtMaritalStatus(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_family WHERE p_marital_status_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtMaritalStatusTemplate(PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_family, PUB_pt_marital_status WHERE p_family.p_marital" +
                        "_status_c = pt_marital_status.pt_code_c" + GenerateWhereClauseLong("PUB_pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtMaritalStatusTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_family WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFamilyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_family" + GenerateWhereClause(PFamilyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFamilyTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_family", PFamilyTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_family", PFamilyTable.GetColumnStringList(), PFamilyTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_family", PFamilyTable.GetColumnStringList(), PFamilyTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFamily", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table contains the codes indicating someones marital status.
    public class PtMaritalStatusAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PtMaritalStatus";
        
        /// original table name in database
        public const string DBTABLENAME = "pt_marital_status";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "pt_code_c"}) + " FROM PUB_pt_marital_status") 
                            + GenerateOrderByClause(AOrderBy)), PtMaritalStatusTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PtMaritalStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PtMaritalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PtMaritalStatusTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PtMaritalStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "pt_code_c"}) + " FROM PUB_pt_marital_status WHERE pt_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PtMaritalStatusTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PtMaritalStatusTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PtMaritalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PtMaritalStatusTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PtMaritalStatusTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "pt_code_c"}) + " FROM PUB_pt_marital_status") 
                            + GenerateWhereClause(PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PtMaritalStatusTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PtMaritalStatusTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PtMaritalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PtMaritalStatusTable AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PtMaritalStatusTable AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PtMaritalStatusTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pt_marital_status", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pt_marital_status WHERE pt_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_pt_marital_status" + GenerateWhereClause(PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_pt_marital_status WHERE pt_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_pt_marital_status" + GenerateWhereClause(PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PtMaritalStatusTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), PtMaritalStatusTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), PtMaritalStatusTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PtMaritalStatus", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// List of occupations with codes
    public class POccupationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "POccupation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_occupation";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_occupation_code_c"}) + " FROM PUB_p_occupation") 
                            + GenerateOrderByClause(AOrderBy)), POccupationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out POccupationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POccupationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out POccupationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out POccupationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AOccupationCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_occupation_code_c"}) + " FROM PUB_p_occupation WHERE p_occupation_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), POccupationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AOccupationCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AOccupationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AOccupationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POccupationTable AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POccupationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AOccupationCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POccupationTable AData, String AOccupationCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AOccupationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POccupationTable AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AOccupationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_occupation_code_c"}) + " FROM PUB_p_occupation") 
                            + GenerateWhereClause(POccupationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), POccupationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, POccupationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, POccupationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POccupationTable AData, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POccupationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POccupationTable AData, POccupationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POccupationTable AData, POccupationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POccupationTable AData, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_occupation", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AOccupationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AOccupationCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_occupation WHERE p_occupation_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(POccupationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_occupation" + GenerateWhereClause(POccupationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AOccupationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AOccupationCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_occupation WHERE p_occupation_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(POccupationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_occupation" + GenerateWhereClause(POccupationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(POccupationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_occupation", POccupationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_occupation", POccupationTable.GetColumnStringList(), POccupationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_occupation", POccupationTable.GetColumnStringList(), POccupationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table POccupation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Details of a person.  A person must also have a related FAMILY class p_partner record.
    public class PPersonAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPerson";
        
        /// original table name in database
        public const string DBTABLENAME = "p_person";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPersonTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPersonTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPersonTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPersonTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person") 
                            + GenerateWhereClause(PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPersonTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPersonTable AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPersonTable AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPersonTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPersonRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person" + GenerateWhereClause(PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPersonTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_p_partner WHERE p_person.p_partner_key_n = p_partner.p_pa" +
                    "rtner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPersonTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPersonTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPersonTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPersonTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_p_partner WHERE p_person.p_partner_key_n =" +
                        " p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFamily(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_family_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFamily(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFamily(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamily(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFamily(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamily(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFamily(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFamily(out PPersonTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFamily(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamily(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFamily(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(DataSet ADataSet, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_p_family WHERE p_person.p_family_key_n = p_family.p_partn" +
                    "er_key_n") 
                            + GenerateWhereClauseLong("PUB_p_family", PFamilyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(DataSet AData, PFamilyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFamilyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(DataSet AData, PFamilyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFamilyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(out PPersonTable AData, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFamilyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(out PPersonTable AData, PFamilyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFamilyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(out PPersonTable AData, PFamilyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFamilyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFamilyTemplate(out PPersonTable AData, PFamilyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFamilyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFamily(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_family_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFamilyTemplate(PFamilyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_p_family WHERE p_person.p_family_key_n = p" +
                        "_family.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_family", PFamilyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFamilyTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_marital_status_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PPersonTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtMaritalStatus(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PPersonTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatus(out PPersonTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatus(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet ADataSet, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pt_marital_status WHERE p_person.p_marital_status_c = pt_" +
                    "marital_status.pt_code_c") 
                            + GenerateWhereClauseLong("PUB_pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(DataSet AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PPersonTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtMaritalStatusTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PPersonTable AData, PtMaritalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PPersonTable AData, PtMaritalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtMaritalStatusTemplate(out PPersonTable AData, PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtMaritalStatusTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPtMaritalStatus(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 4);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_marital_status_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtMaritalStatusTemplate(PtMaritalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pt_marital_status WHERE p_person.p_marital" +
                        "_status_c = pt_marital_status.pt_code_c" + GenerateWhereClauseLong("PUB_pt_marital_status", PtMaritalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtMaritalStatusTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_field_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPersonTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_p_unit WHERE p_person.p_field_key_n = p_unit.p_partner_ke" +
                    "y_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPersonTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_field_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_p_unit WHERE p_person.p_field_key_n = p_un" +
                        "it.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPOccupation(DataSet ADataSet, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AOccupationCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person WHERE p_occupation_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPOccupation(DataSet AData, String AOccupationCode, TDBTransaction ATransaction)
        {
            LoadViaPOccupation(AData, AOccupationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupation(DataSet AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOccupation(AData, AOccupationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupation(out PPersonTable AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPOccupation(FillDataSet, AOccupationCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPOccupation(out PPersonTable AData, String AOccupationCode, TDBTransaction ATransaction)
        {
            LoadViaPOccupation(out AData, AOccupationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupation(out PPersonTable AData, String AOccupationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOccupation(out AData, AOccupationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(DataSet ADataSet, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_p_occupation WHERE p_person.p_occupation_code_c = p_occup" +
                    "ation.p_occupation_code_c") 
                            + GenerateWhereClauseLong("PUB_p_occupation", POccupationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(DataSet AData, POccupationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPOccupationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(DataSet AData, POccupationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOccupationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(out PPersonTable AData, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPOccupationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(out PPersonTable AData, POccupationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPOccupationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(out PPersonTable AData, POccupationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOccupationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOccupationTemplate(out PPersonTable AData, POccupationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOccupationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPOccupation(String AOccupationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AOccupationCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person WHERE p_occupation_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPOccupationTemplate(POccupationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_p_occupation WHERE p_person.p_occupation_c" +
                        "ode_c = p_occupation.p_occupation_code_c" + GenerateWhereClauseLong("PUB_p_occupation", POccupationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, POccupationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPUnitPmGeneralApplication(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_general_application WHERE PUB_pm_general_application.p" +
                    "_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_general_application.pm_" +
                    "registration_office_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplication(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplication(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplication(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplication(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplication(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitPmGeneralApplication(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplication(out PPersonTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplication(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplication(out PPersonTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplication(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_general_application, PUB_p_unit WHERE PUB_pm_general_a" +
                    "pplication.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_general_app" +
                    "lication.pm_registration_office_n = PUB_p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplicationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplicationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitPmGeneralApplicationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(out PPersonTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplicationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplicationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitPmGeneralApplicationTemplate(out PPersonTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitPmGeneralApplicationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPUnitPmGeneralApplication(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_general_application WHERE PUB_pm_genera" +
                        "l_application.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_general_" +
                        "application.pm_registration_office_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitPmGeneralApplicationTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_general_application, PUB_p_unit WHERE P" +
                        "UB_pm_general_application.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB" +
                        "_pm_general_application.pm_registration_office_n = PUB_p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPLanguage(DataSet ADataSet, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ALanguageCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_language WHERE PUB_pm_person_language.p_partner" +
                    "_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_language.p_language_code" +
                    "_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(DataSet AData, String ALanguageCode, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(AData, ALanguageCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(DataSet AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(AData, ALanguageCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPersonTable AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLanguage(FillDataSet, ALanguageCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPersonTable AData, String ALanguageCode, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(out AData, ALanguageCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguage(out PPersonTable AData, String ALanguageCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguage(out AData, ALanguageCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet ADataSet, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_language, PUB_p_language WHERE PUB_pm_person_la" +
                    "nguage.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_language" +
                    ".p_language_code_c = PUB_p_language.p_language_code_c") 
                            + GenerateWhereClauseLong("PUB_p_language", PLanguageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet AData, PLanguageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(DataSet AData, PLanguageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPersonTable AData, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPLanguageTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPersonTable AData, PLanguageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPersonTable AData, PLanguageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPLanguageTemplate(out PPersonTable AData, PLanguageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPLanguageTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPLanguage(String ALanguageCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ALanguageCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_language WHERE PUB_pm_person_lan" +
                        "guage.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_language." +
                        "p_language_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPLanguageTemplate(PLanguageRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_language, PUB_p_language WHERE P" +
                        "UB_pm_person_language.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_" +
                        "person_language.p_language_code_c = PUB_p_language.p_language_code_c" + GenerateWhereClauseLong("PUB_p_language", PLanguageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PLanguageTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtValuableItem(DataSet ADataSet, String AValuableItemName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(AValuableItemName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_ownership WHERE PUB_pm_ownership.p_partner_key_n = PUB" +
                    "_p_person.p_partner_key_n AND PUB_pm_ownership.pt_valuable_item_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItem(DataSet AData, String AValuableItemName, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItem(AData, AValuableItemName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItem(DataSet AData, String AValuableItemName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItem(AData, AValuableItemName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItem(out PPersonTable AData, String AValuableItemName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtValuableItem(FillDataSet, AValuableItemName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItem(out PPersonTable AData, String AValuableItemName, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItem(out AData, AValuableItemName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItem(out PPersonTable AData, String AValuableItemName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItem(out AData, AValuableItemName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(DataSet ADataSet, PtValuableItemRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_ownership, PUB_pt_valuable_item WHERE PUB_pm_ownership" +
                    ".p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_ownership.pt_valuable" +
                    "_item_name_c = PUB_pt_valuable_item.pt_valuable_item_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_valuable_item", PtValuableItemTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(DataSet AData, PtValuableItemRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItemTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(DataSet AData, PtValuableItemRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItemTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(out PPersonTable AData, PtValuableItemRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtValuableItemTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(out PPersonTable AData, PtValuableItemRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItemTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(out PPersonTable AData, PtValuableItemRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItemTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtValuableItemTemplate(out PPersonTable AData, PtValuableItemRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtValuableItemTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtValuableItem(String AValuableItemName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(AValuableItemName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_ownership WHERE PUB_pm_ownership.p_part" +
                        "ner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_ownership.pt_valuable_item_n" +
                        "ame_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtValuableItemTemplate(PtValuableItemRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_ownership, PUB_pt_valuable_item WHERE P" +
                        "UB_pm_ownership.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_owners" +
                        "hip.pt_valuable_item_name_c = PUB_pt_valuable_item.pt_valuable_item_name_c" + GenerateWhereClauseLong("PUB_pt_valuable_item", PtValuableItemTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtValuableItemTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtAbilityArea(DataSet ADataSet, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AAbilityAreaName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_ability WHERE PUB_pm_person_ability.p_partner_k" +
                    "ey_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_ability.pt_ability_area_na" +
                    "me_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(DataSet AData, String AAbilityAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(AData, AAbilityAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(DataSet AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(AData, AAbilityAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PPersonTable AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtAbilityArea(FillDataSet, AAbilityAreaName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PPersonTable AData, String AAbilityAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(out AData, AAbilityAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityArea(out PPersonTable AData, String AAbilityAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityArea(out AData, AAbilityAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet ADataSet, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_ability, PUB_pt_ability_area WHERE PUB_pm_perso" +
                    "n_ability.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_abili" +
                    "ty.pt_ability_area_name_c = PUB_pt_ability_area.pt_ability_area_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_ability_area", PtAbilityAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet AData, PtAbilityAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(DataSet AData, PtAbilityAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PPersonTable AData, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtAbilityAreaTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PPersonTable AData, PtAbilityAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PPersonTable AData, PtAbilityAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtAbilityAreaTemplate(out PPersonTable AData, PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtAbilityAreaTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtAbilityArea(String AAbilityAreaName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AAbilityAreaName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_ability WHERE PUB_pm_person_abil" +
                        "ity.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_ability.pt_" +
                        "ability_area_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtAbilityAreaTemplate(PtAbilityAreaRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_ability, PUB_pt_ability_area WHE" +
                        "RE PUB_pm_person_ability.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_" +
                        "pm_person_ability.pt_ability_area_name_c = PUB_pt_ability_area.pt_ability_area_n" +
                        "ame_c" + GenerateWhereClauseLong("PUB_pt_ability_area", PtAbilityAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtAbilityAreaTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtQualificationArea(DataSet ADataSet, String AQualificationAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AQualificationAreaName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_qualification WHERE PUB_pm_person_qualification" +
                    ".p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_qualification." +
                    "pt_qualification_area_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationArea(DataSet AData, String AQualificationAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationArea(AData, AQualificationAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationArea(DataSet AData, String AQualificationAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationArea(AData, AQualificationAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationArea(out PPersonTable AData, String AQualificationAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtQualificationArea(FillDataSet, AQualificationAreaName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationArea(out PPersonTable AData, String AQualificationAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationArea(out AData, AQualificationAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationArea(out PPersonTable AData, String AQualificationAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationArea(out AData, AQualificationAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(DataSet ADataSet, PtQualificationAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_person, PUB_pm_person_qualification, PUB_pt_qualification_area WHERE PUB_pm_person_qualification.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_qualification.pt_qualification_area_name_c = PUB_pt_qualification_area.pt_qualification_area_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_qualification_area", PtQualificationAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(DataSet AData, PtQualificationAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationAreaTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(DataSet AData, PtQualificationAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationAreaTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(out PPersonTable AData, PtQualificationAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtQualificationAreaTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(out PPersonTable AData, PtQualificationAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationAreaTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(out PPersonTable AData, PtQualificationAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationAreaTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtQualificationAreaTemplate(out PPersonTable AData, PtQualificationAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtQualificationAreaTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtQualificationArea(String AQualificationAreaName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AQualificationAreaName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_qualification WHERE PUB_pm_perso" +
                        "n_qualification.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person" +
                        "_qualification.pt_qualification_area_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtQualificationAreaTemplate(PtQualificationAreaRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_qualification, PUB_pt_qualification_area WHERE PUB_pm_person_qualification.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_qualification.pt_qualification_area_name_c = PUB_pt_qualification_area.pt_qualification_area_name_c" + GenerateWhereClauseLong("PUB_pt_qualification_area", PtQualificationAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtQualificationAreaTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPtVisionArea(DataSet ADataSet, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AVisionAreaName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_vision WHERE PUB_pm_person_vision.p_partner_key" +
                    "_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_vision.pt_vision_area_name_c" +
                    " = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(DataSet AData, String AVisionAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(AData, AVisionAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(DataSet AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(AData, AVisionAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PPersonTable AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtVisionArea(FillDataSet, AVisionAreaName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PPersonTable AData, String AVisionAreaName, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(out AData, AVisionAreaName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionArea(out PPersonTable AData, String AVisionAreaName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionArea(out AData, AVisionAreaName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet ADataSet, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_vision, PUB_pt_vision_area WHERE PUB_pm_person_" +
                    "vision.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_vision.p" +
                    "t_vision_area_name_c = PUB_pt_vision_area.pt_vision_area_name_c") 
                            + GenerateWhereClauseLong("PUB_pt_vision_area", PtVisionAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet AData, PtVisionAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(DataSet AData, PtVisionAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PPersonTable AData, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPtVisionAreaTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PPersonTable AData, PtVisionAreaRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PPersonTable AData, PtVisionAreaRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPtVisionAreaTemplate(out PPersonTable AData, PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPtVisionAreaTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPtVisionArea(String AVisionAreaName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AVisionAreaName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_vision WHERE PUB_pm_person_visio" +
                        "n.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_vision.pt_vis" +
                        "ion_area_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPtVisionAreaTemplate(PtVisionAreaRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_vision, PUB_pt_vision_area WHERE" +
                        " PUB_pm_person_vision.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_" +
                        "person_vision.pt_vision_area_name_c = PUB_pt_vision_area.pt_vision_area_name_c" + GenerateWhereClauseLong("PUB_pt_vision_area", PtVisionAreaTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PtVisionAreaTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPmCommitmentStatus(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_commitment_status WHERE PUB_pm_person_commitmen" +
                    "t_status.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_commit" +
                    "ment_status.pm_status_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatus(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatus(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatus(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatus(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatus(out PPersonTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmCommitmentStatus(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatus(out PPersonTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatus(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatus(out PPersonTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatus(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(DataSet ADataSet, PmCommitmentStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pm_person_commitment_status, PUB_pm_commitment_status WHE" +
                    "RE PUB_pm_person_commitment_status.p_partner_key_n = PUB_p_person.p_partner_key_" +
                    "n AND PUB_pm_person_commitment_status.pm_status_code_c = PUB_pm_commitment_statu" +
                    "s.pm_code_c") 
                            + GenerateWhereClauseLong("PUB_pm_commitment_status", PmCommitmentStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(DataSet AData, PmCommitmentStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatusTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(DataSet AData, PmCommitmentStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatusTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(out PPersonTable AData, PmCommitmentStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmCommitmentStatusTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(out PPersonTable AData, PmCommitmentStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatusTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(out PPersonTable AData, PmCommitmentStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatusTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmCommitmentStatusTemplate(out PPersonTable AData, PmCommitmentStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmCommitmentStatusTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPmCommitmentStatus(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_commitment_status WHERE PUB_pm_p" +
                        "erson_commitment_status.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_p" +
                        "m_person_commitment_status.pm_status_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPmCommitmentStatusTemplate(PmCommitmentStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_person, PUB_pm_person_commitment_status, PUB_pm_commitment_status WHERE PUB_pm_person_commitment_status.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pm_person_commitment_status.pm_status_code_c = PUB_pm_commitment_status.pm_code_c" + GenerateWhereClauseLong("PUB_pm_commitment_status", PmCommitmentStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PmCommitmentStatusTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPcConference(DataSet ADataSet, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AConferenceKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pc_attendee WHERE PUB_pc_attendee.p_partner_key_n = PUB_p" +
                    "_person.p_partner_key_n AND PUB_pc_attendee.pc_conference_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPcConference(DataSet AData, Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            LoadViaPcConference(AData, AConferenceKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(DataSet AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConference(AData, AConferenceKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PPersonTable AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPcConference(FillDataSet, AConferenceKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PPersonTable AData, Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            LoadViaPcConference(out AData, AConferenceKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PPersonTable AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConference(out AData, AConferenceKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet ADataSet, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_person", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_person, PUB_pc_attendee, PUB_pc_conference WHERE PUB_pc_attendee.p_pa" +
                    "rtner_key_n = PUB_p_person.p_partner_key_n AND PUB_pc_attendee.pc_conference_key" +
                    "_n = PUB_pc_conference.pc_conference_key_n") 
                            + GenerateWhereClauseLong("PUB_pc_conference", PcConferenceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPersonTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet AData, PcConferenceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet AData, PcConferenceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PPersonTable AData, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPersonTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPcConferenceTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PPersonTable AData, PcConferenceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PPersonTable AData, PcConferenceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PPersonTable AData, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPcConference(Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AConferenceKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_person, PUB_pc_attendee WHERE PUB_pc_attendee.p_partne" +
                        "r_key_n = PUB_p_person.p_partner_key_n AND PUB_pc_attendee.pc_conference_key_n =" +
                        " ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPcConferenceTemplate(PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_person, PUB_pc_attendee, PUB_pc_conference WHERE PUB_p" +
                        "c_attendee.p_partner_key_n = PUB_p_person.p_partner_key_n AND PUB_pc_attendee.pc" +
                        "_conference_key_n = PUB_pc_conference.pc_conference_key_n" + GenerateWhereClauseLong("PUB_pc_conference", PcConferenceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PcConferenceTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_person WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPersonRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_person" + GenerateWhereClause(PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPersonTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_person", PPersonTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_person", PPersonTable.GetColumnStringList(), PPersonTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_person", PPersonTable.GetColumnStringList(), PPersonTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPerson", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// List of denomination codes for churches
    public class PDenominationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDenomination";
        
        /// original table name in database
        public const string DBTABLENAME = "p_denomination";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_denomination_code_c"}) + " FROM PUB_p_denomination") 
                            + GenerateOrderByClause(AOrderBy)), PDenominationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDenominationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDenominationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDenominationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDenominationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ADenominationCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_denomination_code_c"}) + " FROM PUB_p_denomination WHERE p_denomination_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDenominationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ADenominationCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ADenominationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ADenominationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDenominationTable AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDenominationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ADenominationCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDenominationTable AData, String ADenominationCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ADenominationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDenominationTable AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ADenominationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_denomination_code_c"}) + " FROM PUB_p_denomination") 
                            + GenerateWhereClause(PDenominationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDenominationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDenominationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDenominationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDenominationTable AData, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDenominationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDenominationTable AData, PDenominationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDenominationTable AData, PDenominationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDenominationTable AData, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_denomination", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ADenominationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ADenominationCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_denomination WHERE p_denomination_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDenominationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_denomination" + GenerateWhereClause(PDenominationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ADenominationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ADenominationCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_denomination WHERE p_denomination_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDenominationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_denomination" + GenerateWhereClause(PDenominationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDenominationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_denomination", PDenominationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_denomination", PDenominationTable.GetColumnStringList(), PDenominationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_denomination", PDenominationTable.GetColumnStringList(), PDenominationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDenomination", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Specific information about a church which is a partner
    public class PChurchAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PChurch";
        
        /// original table name in database
        public const string DBTABLENAME = "p_church";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church") 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PChurchTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PChurchTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PChurchTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PChurchTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PChurchRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church") 
                            + GenerateWhereClause(PChurchTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PChurchRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PChurchRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PChurchTable AData, PChurchRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PChurchTable AData, PChurchRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PChurchTable AData, PChurchRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PChurchTable AData, PChurchRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_church", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_church WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PChurchRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_church" + GenerateWhereClause(PChurchTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PChurchTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_church", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church, PUB_p_partner WHERE p_church.p_partner_key_n = p_partner.p_pa" +
                    "rtner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_church WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_church, PUB_p_partner WHERE p_church.p_partner_key_n =" +
                        " p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPDenomination(DataSet ADataSet, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ADenominationCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church WHERE p_denomination_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDenomination(DataSet AData, String ADenominationCode, TDBTransaction ATransaction)
        {
            LoadViaPDenomination(AData, ADenominationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenomination(DataSet AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDenomination(AData, ADenominationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenomination(out PChurchTable AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDenomination(FillDataSet, ADenominationCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDenomination(out PChurchTable AData, String ADenominationCode, TDBTransaction ATransaction)
        {
            LoadViaPDenomination(out AData, ADenominationCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenomination(out PChurchTable AData, String ADenominationCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDenomination(out AData, ADenominationCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(DataSet ADataSet, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_church", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church, PUB_p_denomination WHERE p_church.p_denomination_code_c = p_d" +
                    "enomination.p_denomination_code_c") 
                            + GenerateWhereClauseLong("PUB_p_denomination", PDenominationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(DataSet AData, PDenominationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDenominationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(DataSet AData, PDenominationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDenominationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(out PChurchTable AData, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDenominationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(out PChurchTable AData, PDenominationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDenominationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(out PChurchTable AData, PDenominationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDenominationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDenominationTemplate(out PChurchTable AData, PDenominationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDenominationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPDenomination(String ADenominationCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ADenominationCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_church WHERE p_denomination_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDenominationTemplate(PDenominationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_church, PUB_p_denomination WHERE p_church.p_denominati" +
                        "on_code_c = p_denomination.p_denomination_code_c" + GenerateWhereClauseLong("PUB_p_denomination", PDenominationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDenominationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church WHERE p_contact_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PChurchTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PChurchTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_church", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_church, PUB_p_partner WHERE p_church.p_contact_partner_key_n = p_part" +
                    "ner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PChurchTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PChurchTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PChurchTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_church WHERE p_contact_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_church, PUB_p_partner WHERE p_church.p_contact_partner" +
                        "_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_church WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PChurchRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_church" + GenerateWhereClause(PChurchTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PChurchTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_church", PChurchTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_church", PChurchTable.GetColumnStringList(), PChurchTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_church", PChurchTable.GetColumnStringList(), PChurchTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PChurch", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// List of businesses with codes
    public class PBusinessAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBusiness";
        
        /// original table name in database
        public const string DBTABLENAME = "p_business";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_business_code_c"}) + " FROM PUB_p_business") 
                            + GenerateOrderByClause(AOrderBy)), PBusinessTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBusinessTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBusinessTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBusinessTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBusinessTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ABusinessCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_business_code_c"}) + " FROM PUB_p_business WHERE p_business_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBusinessTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ABusinessCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ABusinessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ABusinessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBusinessTable AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBusinessTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ABusinessCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBusinessTable AData, String ABusinessCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ABusinessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBusinessTable AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ABusinessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_business_code_c"}) + " FROM PUB_p_business") 
                            + GenerateWhereClause(PBusinessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBusinessTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBusinessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBusinessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBusinessTable AData, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBusinessTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBusinessTable AData, PBusinessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBusinessTable AData, PBusinessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBusinessTable AData, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_business", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ABusinessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ABusinessCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_business WHERE p_business_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBusinessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_business" + GenerateWhereClause(PBusinessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ABusinessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ABusinessCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_business WHERE p_business_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBusinessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_business" + GenerateWhereClause(PBusinessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBusinessTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_business", PBusinessTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_business", PBusinessTable.GetColumnStringList(), PBusinessTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_business", PBusinessTable.GetColumnStringList(), PBusinessTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBusiness", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Details of an organisation
    public class POrganisationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "POrganisation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_organisation";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation") 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out POrganisationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out POrganisationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out POrganisationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POrganisationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation") 
                            + GenerateWhereClause(POrganisationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, POrganisationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, POrganisationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POrganisationTable AData, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POrganisationTable AData, POrganisationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POrganisationTable AData, POrganisationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out POrganisationTable AData, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_organisation", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_organisation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(POrganisationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_organisation" + GenerateWhereClause(POrganisationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out POrganisationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_organisation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation, PUB_p_partner WHERE p_organisation.p_partner_key_n = p_" +
                    "partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_organisation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_organisation, PUB_p_partner WHERE p_organisation.p_par" +
                        "tner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPBusiness(DataSet ADataSet, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ABusinessCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation WHERE p_business_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBusiness(DataSet AData, String ABusinessCode, TDBTransaction ATransaction)
        {
            LoadViaPBusiness(AData, ABusinessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusiness(DataSet AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBusiness(AData, ABusinessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusiness(out POrganisationTable AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBusiness(FillDataSet, ABusinessCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBusiness(out POrganisationTable AData, String ABusinessCode, TDBTransaction ATransaction)
        {
            LoadViaPBusiness(out AData, ABusinessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusiness(out POrganisationTable AData, String ABusinessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBusiness(out AData, ABusinessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(DataSet ADataSet, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_organisation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation, PUB_p_business WHERE p_organisation.p_business_code_c =" +
                    " p_business.p_business_code_c") 
                            + GenerateWhereClauseLong("PUB_p_business", PBusinessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(DataSet AData, PBusinessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBusinessTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(DataSet AData, PBusinessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBusinessTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(out POrganisationTable AData, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBusinessTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(out POrganisationTable AData, PBusinessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBusinessTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(out POrganisationTable AData, PBusinessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBusinessTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBusinessTemplate(out POrganisationTable AData, PBusinessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBusinessTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPBusiness(String ABusinessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ABusinessCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_organisation WHERE p_business_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBusinessTemplate(PBusinessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_organisation, PUB_p_business WHERE p_organisation.p_bu" +
                        "siness_code_c = p_business.p_business_code_c" + GenerateWhereClauseLong("PUB_p_business", PBusinessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBusinessTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation WHERE p_contact_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out POrganisationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out POrganisationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_organisation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_organisation, PUB_p_partner WHERE p_organisation.p_contact_partner_ke" +
                    "y_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), POrganisationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new POrganisationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out POrganisationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_organisation WHERE p_contact_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_organisation, PUB_p_partner WHERE p_organisation.p_con" +
                        "tact_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_organisation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(POrganisationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_organisation" + GenerateWhereClause(POrganisationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(POrganisationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_organisation", POrganisationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_organisation", POrganisationTable.GetColumnStringList(), POrganisationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_organisation", POrganisationTable.GetColumnStringList(), POrganisationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table POrganisation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Details of an bank
    public class PBankAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBank";
        
        /// original table name in database
        public const string DBTABLENAME = "p_bank";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank") 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBankTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank") 
                            + GenerateWhereClause(PBankTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankTable AData, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankTable AData, PBankRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankTable AData, PBankRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankTable AData, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_bank", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_bank WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBankRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_bank" + GenerateWhereClause(PBankTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PBankTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_bank", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank, PUB_p_partner WHERE p_bank.p_partner_key_n = p_partner.p_partne" +
                    "r_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_bank WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_bank, PUB_p_partner WHERE p_bank.p_partner_key_n = p_p" +
                        "artner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank WHERE p_contact_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PBankTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PBankTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_bank", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_bank, PUB_p_partner WHERE p_bank.p_contact_partner_key_n = p_partner." +
                    "p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PBankTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_bank WHERE p_contact_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_bank, PUB_p_partner WHERE p_bank.p_contact_partner_key" +
                        "_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_bank WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBankRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_bank" + GenerateWhereClause(PBankTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBankTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_bank", PBankTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_bank", PBankTable.GetColumnStringList(), PBankTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_bank", PBankTable.GetColumnStringList(), PBankTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBank", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Details of a venue
    public class PVenueAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PVenue";
        
        /// original table name in database
        public const string DBTABLENAME = "p_venue";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PVenueTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PVenueTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PVenueTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PVenueTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PVenueRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue") 
                            + GenerateWhereClause(PVenueTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PVenueRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PVenueRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PVenueTable AData, PVenueRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PVenueTable AData, PVenueRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PVenueTable AData, PVenueRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PVenueTable AData, PVenueRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PVenueRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_venue" + GenerateWhereClause(PVenueTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PVenueTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_venue", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue, PUB_p_partner WHERE p_venue.p_partner_key_n = p_partner.p_part" +
                    "ner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_venue, PUB_p_partner WHERE p_venue.p_partner_key_n = p" +
                        "_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet ADataSet, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue WHERE a_currency_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PVenueTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrency(FillDataSet, ACurrencyCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PVenueTable AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PVenueTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet ADataSet, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_venue", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue, PUB_a_currency WHERE p_venue.a_currency_code_c = a_currency.a_" +
                    "currency_code_c") 
                            + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PVenueTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrencyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PVenueTable AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PVenueTable AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PVenueTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaACurrency(String ACurrencyCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue WHERE a_currency_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaACurrencyTemplate(ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_venue, PUB_a_currency WHERE p_venue.a_currency_code_c " +
                        "= a_currency.a_currency_code_c" + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, ACurrencyTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue WHERE p_contact_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PVenueTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKey(out PVenueTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_venue", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue, PUB_p_partner WHERE p_venue.p_contact_partner_key_n = p_partne" +
                    "r.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactPartnerKeyTemplate(out PVenueTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue WHERE p_contact_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_venue, PUB_p_partner WHERE p_venue.p_contact_partner_k" +
                        "ey_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPcConference(DataSet ADataSet, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AConferenceKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_venue", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue, PUB_pc_conference_venue WHERE PUB_pc_conference_venue.p_venue_" +
                    "key_n = PUB_p_venue.p_partner_key_n AND PUB_pc_conference_venue.pc_conference_ke" +
                    "y_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPcConference(DataSet AData, Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            LoadViaPcConference(AData, AConferenceKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(DataSet AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConference(AData, AConferenceKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PVenueTable AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPcConference(FillDataSet, AConferenceKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PVenueTable AData, Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            LoadViaPcConference(out AData, AConferenceKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConference(out PVenueTable AData, Int64 AConferenceKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConference(out AData, AConferenceKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet ADataSet, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_venue", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_venue, PUB_pc_conference_venue, PUB_pc_conference WHERE PUB_pc_confer" +
                    "ence_venue.p_venue_key_n = PUB_p_venue.p_partner_key_n AND PUB_pc_conference_ven" +
                    "ue.pc_conference_key_n = PUB_pc_conference.pc_conference_key_n") 
                            + GenerateWhereClauseLong("PUB_pc_conference", PcConferenceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PVenueTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet AData, PcConferenceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(DataSet AData, PcConferenceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PVenueTable AData, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PVenueTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPcConferenceTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PVenueTable AData, PcConferenceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PVenueTable AData, PcConferenceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPcConferenceTemplate(out PVenueTable AData, PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPcConferenceTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPcConference(Int64 AConferenceKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AConferenceKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_venue, PUB_pc_conference_venue WHERE PUB_pc_conference" +
                        "_venue.p_venue_key_n = PUB_p_venue.p_partner_key_n AND PUB_pc_conference_venue.p" +
                        "c_conference_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPcConferenceTemplate(PcConferenceRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_venue, PUB_pc_conference_venue, PUB_pc_conference WHER" +
                        "E PUB_pc_conference_venue.p_venue_key_n = PUB_p_venue.p_partner_key_n AND PUB_pc" +
                        "_conference_venue.pc_conference_key_n = PUB_pc_conference.pc_conference_key_n" + GenerateWhereClauseLong("PUB_pc_conference", PcConferenceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PcConferenceTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_venue WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PVenueRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_venue" + GenerateWhereClause(PVenueTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PVenueTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_venue", PVenueTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_venue", PVenueTable.GetColumnStringList(), PVenueTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_venue", PVenueTable.GetColumnStringList(), PVenueTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PVenue", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Tells of what type this banking-detail is (bank-account, visa, mastercard, etc.
    public class PBankingTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBankingType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_banking_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_id_i"}) + " FROM PUB_p_banking_type") 
                            + GenerateOrderByClause(AOrderBy)), PBankingTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_id_i"}) + " FROM PUB_p_banking_type WHERE p_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingTypeTable AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingTypeTable AData, Int32 AId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingTypeTable AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_id_i"}) + " FROM PUB_p_banking_type") 
                            + GenerateWhereClause(PBankingTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingTypeTable AData, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingTypeTable AData, PBankingTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingTypeTable AData, PBankingTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingTypeTable AData, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int32 AId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_type WHERE p_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_type" + GenerateWhereClause(PBankingTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int32 AId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AId));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_banking_type WHERE p_id_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_banking_type" + GenerateWhereClause(PBankingTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBankingTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_banking_type", PBankingTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_banking_type", PBankingTypeTable.GetColumnStringList(), PBankingTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_banking_type", PBankingTypeTable.GetColumnStringList(), PBankingTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBankingType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Any bank details for a partner can be store in this table
    public class PBankingDetailsAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBankingDetails";
        
        /// original table name in database
        public const string DBTABLENAME = "p_banking_details";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details WHERE p_banking_details_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsTable AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details") 
                            + GenerateWhereClause(PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details WHERE p_banking_details_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details" + GenerateWhereClause(PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPBankingType(DataSet ADataSet, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details WHERE p_banking_type_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingType(DataSet AData, Int32 AId, TDBTransaction ATransaction)
        {
            LoadViaPBankingType(AData, AId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingType(DataSet AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingType(AData, AId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingType(out PBankingDetailsTable AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingType(FillDataSet, AId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingType(out PBankingDetailsTable AData, Int32 AId, TDBTransaction ATransaction)
        {
            LoadViaPBankingType(out AData, AId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingType(out PBankingDetailsTable AData, Int32 AId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingType(out AData, AId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(DataSet ADataSet, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details", AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details, PUB_p_banking_type WHERE p_banking_details.p_banking" +
                    "_type_i = p_banking_type.p_id_i") 
                            + GenerateWhereClauseLong("PUB_p_banking_type", PBankingTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(DataSet AData, PBankingTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(DataSet AData, PBankingTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(out PBankingDetailsTable AData, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(out PBankingDetailsTable AData, PBankingTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(out PBankingDetailsTable AData, PBankingTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingTypeTemplate(out PBankingDetailsTable AData, PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPBankingType(Int32 AId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details WHERE p_banking_type_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankingTypeTemplate(PBankingTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details, PUB_p_banking_type WHERE p_banking_de" +
                        "tails.p_banking_type_i = p_banking_type.p_id_i" + GenerateWhereClauseLong("PUB_p_banking_type", PBankingTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankingTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPBank(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details WHERE p_bank_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBank(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPBank(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBank(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBank(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBank(out PBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBank(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBank(out PBankingDetailsTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPBank(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBank(out PBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBank(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(DataSet ADataSet, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details", AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details, PUB_p_bank WHERE p_banking_details.p_bank_key_n = p_" +
                    "bank.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_bank", PBankTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(DataSet AData, PBankRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(DataSet AData, PBankRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(out PBankingDetailsTable AData, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(out PBankingDetailsTable AData, PBankRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(out PBankingDetailsTable AData, PBankRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankTemplate(out PBankingDetailsTable AData, PBankRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPBank(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details WHERE p_bank_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankTemplate(PBankRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details, PUB_p_bank WHERE p_banking_details.p_" +
                        "bank_key_n = p_bank.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_bank", PBankTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_banking_details", AFieldList, new string[] {
                            "p_banking_details_key_i"}) + " FROM PUB_p_banking_details, PUB_p_partner_banking_details WHERE PUB_p_partner_ba" +
                    "nking_details.p_banking_details_key_i = PUB_p_banking_details.p_banking_details_" +
                    "key_i AND PUB_p_partner_banking_details.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PBankingDetailsTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details", AFieldList, new string[] {
                            "p_banking_details_key_i"}) + @" FROM PUB_p_banking_details, PUB_p_partner_banking_details, PUB_p_partner WHERE PUB_p_partner_banking_details.p_banking_details_key_i = PUB_p_banking_details.p_banking_details_key_i AND PUB_p_partner_banking_details.p_partner_key_n = PUB_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PBankingDetailsTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details, PUB_p_partner_banking_details WHERE P" +
                        "UB_p_partner_banking_details.p_banking_details_key_i = PUB_p_banking_details.p_b" +
                        "anking_details_key_i AND PUB_p_partner_banking_details.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_banking_details, PUB_p_partner_banking_details, PUB_p_partner WHERE PUB_p_partner_banking_details.p_banking_details_key_i = PUB_p_banking_details.p_banking_details_key_i AND PUB_p_partner_banking_details.p_partner_key_n = PUB_p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_banking_details WHERE p_banking_details_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_banking_details" + GenerateWhereClause(PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBankingDetailsTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PBankingDetailsRow)(TheRow)).BankingDetailsKey = ((Int32)(DBAccess.GDBAccessObj.GetNextSequenceValue("seq_bank_details", ATransaction)));
                        TTypedDataAccess.InsertRow("p_banking_details", PBankingDetailsTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_banking_details", PBankingDetailsTable.GetColumnStringList(), PBankingDetailsTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_banking_details", PBankingDetailsTable.GetColumnStringList(), PBankingDetailsTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBankingDetails", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Links p_partner table with p_banking_details table for many to many relationship
    public class PPartnerBankingDetailsAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerBankingDetails";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_banking_details";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerBankingDetailsTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerBankingDetailsTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerBankingDetailsTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details WHERE p_partner_key_n = ? AND p_banking_detai" +
                    "ls_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details") 
                            + GenerateWhereClause(PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerBankingDetailsTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerBankingDetailsTable AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerBankingDetailsTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerBankingDetailsTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_banking_details", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_banking_details WHERE p_partner_key_n = ? AND " +
                        "p_banking_details_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_banking_details" + GenerateWhereClause(PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerBankingDetailsTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_banking_details", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details, PUB_p_partner WHERE p_partner_banking_detail" +
                    "s.p_partner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerBankingDetailsTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerBankingDetailsTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_banking_details WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_banking_details, PUB_p_partner WHERE p_partner" +
                        "_banking_details.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(DataSet ADataSet, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details WHERE p_banking_details_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(DataSet AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(DataSet AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerBankingDetailsTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetails(FillDataSet, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerBankingDetailsTable AData, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(out AData, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetails(out PPartnerBankingDetailsTable AData, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetails(out AData, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet ADataSet, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_banking_details", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + " FROM PUB_p_partner_banking_details, PUB_p_banking_details WHERE p_partner_bankin" +
                    "g_details.p_banking_details_key_i = p_banking_details.p_banking_details_key_i") 
                            + GenerateWhereClauseLong("PUB_p_banking_details", PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(DataSet AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPBankingDetails(Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_banking_details WHERE p_banking_details_key_i " +
                        "= ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankingDetailsTemplate(PBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_banking_details, PUB_p_banking_details WHERE p" +
                        "_partner_banking_details.p_banking_details_key_i = p_banking_details.p_banking_d" +
                        "etails_key_i" + GenerateWhereClauseLong("PUB_p_banking_details", PBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankingDetailsTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPBankingDetailsUsageType(DataSet ADataSet, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_banking_details", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + @" FROM PUB_p_partner_banking_details, PUB_p_banking_details_usage WHERE PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i AND PUB_p_banking_details_usage.p_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(DataSet AData, String AType, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(DataSet AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PPartnerBankingDetailsTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsUsageType(FillDataSet, AType, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PPartnerBankingDetailsTable AData, String AType, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(out AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PPartnerBankingDetailsTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(out AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet ADataSet, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_banking_details", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i"}) + @" FROM PUB_p_partner_banking_details, PUB_p_banking_details_usage, PUB_p_banking_details_usage_type WHERE PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i AND PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c") 
                            + GenerateWhereClauseLong("PUB_p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerBankingDetailsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerBankingDetailsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsUsageTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PPartnerBankingDetailsTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPBankingDetailsUsageType(String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner_banking_details, PUB_p_banking_details_usage WHERE PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i AND PUB_p_banking_details_usage.p_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankingDetailsUsageTypeTemplate(PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_banking_details, PUB_p_banking_details_usage, PUB_p_banking_details_usage_type WHERE PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i AND PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c" + GenerateWhereClauseLong("PUB_p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankingDetailsUsageTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_banking_details WHERE p_partner_key_n = ? AND p_banking" +
                    "_details_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_banking_details" + GenerateWhereClause(PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerBankingDetailsTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), PPartnerBankingDetailsTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), PPartnerBankingDetailsTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerBankingDetails", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Usage type information for Banking Details.
    public class PBankingDetailsUsageTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBankingDetailsUsageType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_banking_details_usage_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage_type") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage_type WHERE p_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AType, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTypeTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AType, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTypeTable AData, String AType, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTypeTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage_type") 
                            + GenerateWhereClause(PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTypeTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTypeTable AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTypeTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTypeTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage_type WHERE p_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details_usage_type" + GenerateWhereClause(PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartnerBankingDetails(DataSet ADataSet, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_banking_details_usage_type", AFieldList, new string[] {
                            "p_type_c"}) + @" FROM PUB_p_banking_details_usage_type, PUB_p_banking_details_usage WHERE PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c AND PUB_p_banking_details_usage.p_partner_key_n = ? AND PUB_p_banking_details_usage.p_banking_details_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTypeTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerBankingDetails(FillDataSet, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTypeTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(out AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTypeTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(out AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet ADataSet, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details_usage_type", AFieldList, new string[] {
                            "p_type_c"}) + @" FROM PUB_p_banking_details_usage_type, PUB_p_banking_details_usage, PUB_p_partner_banking_details WHERE PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c AND PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTypeTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerBankingDetailsTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTypeTable AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTypeTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTypeTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartnerBankingDetails(Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_banking_details_usage_type, PUB_p_banking_details_usage WHERE PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c AND PUB_p_banking_details_usage.p_partner_key_n = ? AND PUB_p_banking_details_usage.p_banking_details_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerBankingDetailsTemplate(PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_banking_details_usage_type, PUB_p_banking_details_usage, PUB_p_partner_banking_details WHERE PUB_p_banking_details_usage.p_type_c = PUB_p_banking_details_usage_type.p_type_c AND PUB_p_banking_details_usage.p_partner_key_n = PUB_p_partner_banking_details.p_partner_key_n AND PUB_p_banking_details_usage.p_banking_details_key_i = PUB_p_partner_banking_details.p_banking_details_key_i" + GenerateWhereClauseLong("PUB_p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerBankingDetailsTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_banking_details_usage_type WHERE p_type_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_banking_details_usage_type" + GenerateWhereClause(PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBankingDetailsUsageTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), PBankingDetailsUsageTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), PBankingDetailsUsageTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBankingDetailsUsageType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Links p_partner - p_banking_details combination to a usage type
    public class PBankingDetailsUsageAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PBankingDetailsUsage";
        
        /// original table name in database
        public const string DBTABLENAME = "p_banking_details_usage";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PBankingDetailsUsageTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[2].Value = ((object)(AType));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage WHERE p_partner_key_n = ? AND p_banking_details" +
                    "_key_i = ? AND p_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ABankingDetailsKey, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ABankingDetailsKey, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ABankingDetailsKey, AType, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ABankingDetailsKey, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ABankingDetailsKey, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PBankingDetailsUsageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage") 
                            + GenerateWhereClause(PBankingDetailsUsageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsUsageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PBankingDetailsUsageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[2].Value = ((object)(AType));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage WHERE p_partner_key_n = ? AND p_" +
                        "banking_details_key_i = ? AND p_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PBankingDetailsUsageRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details_usage" + GenerateWhereClause(PBankingDetailsUsageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(DataSet ADataSet, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage WHERE p_partner_key_n = ? AND p_banking_details" +
                    "_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(DataSet AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerBankingDetails(FillDataSet, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(out AData, APartnerKey, ABankingDetailsKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetails(out PBankingDetailsUsageTable AData, Int64 APartnerKey, Int32 ABankingDetailsKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetails(out AData, APartnerKey, ABankingDetailsKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet ADataSet, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details_usage", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + @" FROM PUB_p_banking_details_usage, PUB_p_partner_banking_details WHERE p_banking_details_usage.p_partner_key_n = p_partner_banking_details.p_partner_key_n AND p_banking_details_usage.p_banking_details_key_i = p_partner_banking_details.p_banking_details_key_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(DataSet AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerBankingDetailsTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTable AData, PPartnerBankingDetailsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerBankingDetailsTemplate(out PBankingDetailsUsageTable AData, PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerBankingDetailsTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerBankingDetails(Int64 APartnerKey, Int32 ABankingDetailsKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage WHERE p_partner_key_n = ? AND p_" +
                        "banking_details_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerBankingDetailsTemplate(PPartnerBankingDetailsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_banking_details_usage, PUB_p_partner_banking_details WHERE p_banking_details_usage.p_partner_key_n = p_partner_banking_details.p_partner_key_n AND p_banking_details_usage.p_banking_details_key_i = p_partner_banking_details.p_banking_details_key_i" + GenerateWhereClauseLong("PUB_p_partner_banking_details", PPartnerBankingDetailsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerBankingDetailsTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(DataSet ADataSet, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage WHERE p_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(DataSet AData, String AType, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(DataSet AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PBankingDetailsUsageTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsUsageType(FillDataSet, AType, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PBankingDetailsUsageTable AData, String AType, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(out AData, AType, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageType(out PBankingDetailsUsageTable AData, String AType, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageType(out AData, AType, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet ADataSet, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_banking_details_usage", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_banking_details_key_i",
                            "p_type_c"}) + " FROM PUB_p_banking_details_usage, PUB_p_banking_details_usage_type WHERE p_banki" +
                    "ng_details_usage.p_type_c = p_banking_details_usage_type.p_type_c") 
                            + GenerateWhereClauseLong("PUB_p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PBankingDetailsUsageTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(DataSet AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PBankingDetailsUsageTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPBankingDetailsUsageTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPBankingDetailsUsageTypeTemplate(out PBankingDetailsUsageTable AData, PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPBankingDetailsUsageTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPBankingDetailsUsageType(String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[0].Value = ((object)(AType));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_banking_details_usage WHERE p_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPBankingDetailsUsageTypeTemplate(PBankingDetailsUsageTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_banking_details_usage, PUB_p_banking_details_usage_typ" +
                        "e WHERE p_banking_details_usage.p_type_c = p_banking_details_usage_type.p_type_c" +
                        "" + GenerateWhereClauseLong("PUB_p_banking_details_usage_type", PBankingDetailsUsageTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PBankingDetailsUsageTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 ABankingDetailsKey, String AType, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ABankingDetailsKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 32);
            ParametersArray[2].Value = ((object)(AType));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_banking_details_usage WHERE p_partner_key_n = ? AND p_banking_d" +
                    "etails_key_i = ? AND p_type_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PBankingDetailsUsageRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_banking_details_usage" + GenerateWhereClause(PBankingDetailsUsageTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PBankingDetailsUsageTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_banking_details_usage", PBankingDetailsUsageTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_banking_details_usage", PBankingDetailsUsageTable.GetColumnStringList(), PBankingDetailsUsageTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_banking_details_usage", PBankingDetailsUsageTable.GetColumnStringList(), PBankingDetailsUsageTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PBankingDetailsUsage", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// List of all possible special types for a partner.
    public class PTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type") 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type WHERE p_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ATypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeTable AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type") 
                            + GenerateWhereClause(PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeTable AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeTable AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type WHERE p_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_type" + GenerateWhereClause(PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type WHERE p_category_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategory(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategory(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(out PTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPTypeCategory(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(out PTypeTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategory(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategory(out PTypeTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategory(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(DataSet ADataSet, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_type", AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type, PUB_p_type_category WHERE p_type.p_category_code_c = p_type_cat" +
                    "egory.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_type_category", PTypeCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(DataSet AData, PTypeCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(DataSet AData, PTypeCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(out PTypeTable AData, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPTypeCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(out PTypeTable AData, PTypeCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(out PTypeTable AData, PTypeCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeCategoryTemplate(out PTypeTable AData, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPTypeCategory(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type WHERE p_category_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPTypeCategoryTemplate(PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_type, PUB_p_type_category WHERE p_type.p_category_code" +
                        "_c = p_type_category.p_code_c" + GenerateWhereClauseLong("PUB_p_type_category", PTypeCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PTypeCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_type", AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type, PUB_p_partner_type WHERE PUB_p_partner_type.p_type_code_c = PUB" +
                    "_p_type.p_type_code_c AND PUB_p_partner_type.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTypeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_type", AFieldList, new string[] {
                            "p_type_code_c"}) + " FROM PUB_p_type, PUB_p_partner_type, PUB_p_partner WHERE PUB_p_partner_type.p_ty" +
                    "pe_code_c = PUB_p_type.p_type_code_c AND PUB_p_partner_type.p_partner_key_n = PU" +
                    "B_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTypeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTypeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type, PUB_p_partner_type WHERE PUB_p_partner_type.p_ty" +
                        "pe_code_c = PUB_p_type.p_type_code_c AND PUB_p_partner_type.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_type, PUB_p_partner_type, PUB_p_partner WHERE PUB_p_pa" +
                        "rtner_type.p_type_code_c = PUB_p_type.p_type_code_c AND PUB_p_partner_type.p_par" +
                        "tner_key_n = PUB_p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_type WHERE p_type_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_type" + GenerateWhereClause(PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_type", PTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_type", PTypeTable.GetColumnStringList(), PTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_type", PTypeTable.GetColumnStringList(), PTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table contains the codes that indicate the categories of partner (special) types
    public class PTypeCategoryAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PTypeCategory";
        
        /// original table name in database
        public const string DBTABLENAME = "p_type_category";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_type_category") 
                            + GenerateOrderByClause(AOrderBy)), PTypeCategoryTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeCategoryTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTypeCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_type_category WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTypeCategoryTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeCategoryTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTypeCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_type_category") 
                            + GenerateWhereClause(PTypeCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTypeCategoryTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTypeCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTypeCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeCategoryTable AData, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTypeCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeCategoryTable AData, PTypeCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeCategoryTable AData, PTypeCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTypeCategoryTable AData, PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type_category", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_type_category WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_type_category" + GenerateWhereClause(PTypeCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_type_category WHERE p_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PTypeCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_type_category" + GenerateWhereClause(PTypeCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PTypeCategoryTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_type_category", PTypeCategoryTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_type_category", PTypeCategoryTable.GetColumnStringList(), PTypeCategoryTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_type_category", PTypeCategoryTable.GetColumnStringList(), PTypeCategoryTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PTypeCategory", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Types assigned to each partner.  Also known as special types.
    public class PPartnerTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ATypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type WHERE p_partner_key_n = ? AND p_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTypeTable AData, Int64 APartnerKey, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ATypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTypeTable AData, Int64 APartnerKey, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerTypeTable AData, Int64 APartnerKey, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type") 
                            + GenerateWhereClause(PPartnerTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTypeTable AData, PPartnerTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTypeTable AData, PPartnerTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTypeTable AData, PPartnerTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerTypeTable AData, PPartnerTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ATypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_type WHERE p_partner_key_n = ? AND p_type_code" +
                        "_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_type" + GenerateWhereClause(PPartnerTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerTypeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerTypeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_type", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type, PUB_p_partner WHERE p_partner_type.p_partner_key_n = p_" +
                    "partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerTypeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerTypeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerTypeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_type WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_type, PUB_p_partner WHERE p_partner_type.p_par" +
                        "tner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPType(DataSet ADataSet, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type WHERE p_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPType(DataSet AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadViaPType(AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(DataSet AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPType(AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTypeTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPType(FillDataSet, ATypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTypeTable AData, String ATypeCode, TDBTransaction ATransaction)
        {
            LoadViaPType(out AData, ATypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPType(out PPartnerTypeTable AData, String ATypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPType(out AData, ATypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet ADataSet, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_type", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_type_code_c"}) + " FROM PUB_p_partner_type, PUB_p_type WHERE p_partner_type.p_type_code_c = p_type." +
                    "p_type_code_c") 
                            + GenerateWhereClauseLong("PUB_p_type", PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(DataSet AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTypeTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTypeTable AData, PTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTypeTable AData, PTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPTypeTemplate(out PPartnerTypeTable AData, PTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPType(String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ATypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_type WHERE p_type_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPTypeTemplate(PTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_type, PUB_p_type WHERE p_partner_type.p_type_c" +
                        "ode_c = p_type.p_type_code_c" + GenerateWhereClauseLong("PUB_p_type", PTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, String ATypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ATypeCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_type WHERE p_partner_key_n = ? AND p_type_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_type" + GenerateWhereClause(PPartnerTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_type", PPartnerTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_type", PPartnerTypeTable.GetColumnStringList(), PPartnerTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_type", PPartnerTypeTable.GetColumnStringList(), PPartnerTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table contains the codes that indicate the categories of relations (grouping). 
    public class PRelationCategoryAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PRelationCategory";
        
        /// original table name in database
        public const string DBTABLENAME = "p_relation_category";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_relation_category") 
                            + GenerateOrderByClause(AOrderBy)), PRelationCategoryTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationCategoryTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_relation_category WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRelationCategoryTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationCategoryTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_relation_category") 
                            + GenerateWhereClause(PRelationCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRelationCategoryTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRelationCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRelationCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationCategoryTable AData, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationCategoryTable AData, PRelationCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationCategoryTable AData, PRelationCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationCategoryTable AData, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_relation_category", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_relation_category WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_relation_category" + GenerateWhereClause(PRelationCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_relation_category WHERE p_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_relation_category" + GenerateWhereClause(PRelationCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PRelationCategoryTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_relation_category", PRelationCategoryTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_relation_category", PRelationCategoryTable.GetColumnStringList(), PRelationCategoryTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_relation_category", PRelationCategoryTable.GetColumnStringList(), PRelationCategoryTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PRelationCategory", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// List of relationships between partners.  Relations occur in one direction only.   The relation code is used in the p_partner_relationship record. 
    public class PRelationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PRelation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_relation";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_relation_name_c"}) + " FROM PUB_p_relation") 
                            + GenerateOrderByClause(AOrderBy)), PRelationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PRelationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ARelationName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_relation_name_c"}) + " FROM PUB_p_relation WHERE p_relation_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRelationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ARelationName, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ARelationName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ARelationName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationTable AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ARelationName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationTable AData, String ARelationName, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ARelationName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PRelationTable AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ARelationName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_relation_name_c"}) + " FROM PUB_p_relation") 
                            + GenerateWhereClause(PRelationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRelationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRelationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PRelationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationTable AData, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationTable AData, PRelationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationTable AData, PRelationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PRelationTable AData, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_relation", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ARelationName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ARelationName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_relation WHERE p_relation_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PRelationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_relation" + GenerateWhereClause(PRelationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_relation_name_c"}) + " FROM PUB_p_relation WHERE p_relation_category_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PRelationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategory(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategory(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(out PRelationTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPRelationCategory(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(out PRelationTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategory(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategory(out PRelationTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategory(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(DataSet ADataSet, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_relation", AFieldList, new string[] {
                            "p_relation_name_c"}) + " FROM PUB_p_relation, PUB_p_relation_category WHERE p_relation.p_relation_categor" +
                    "y_c = p_relation_category.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_relation_category", PRelationCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PRelationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(DataSet AData, PRelationCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(DataSet AData, PRelationCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(out PRelationTable AData, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PRelationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPRelationCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(out PRelationTable AData, PRelationCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(out PRelationTable AData, PRelationCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationCategoryTemplate(out PRelationTable AData, PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPRelationCategory(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_relation WHERE p_relation_category_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPRelationCategoryTemplate(PRelationCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_relation, PUB_p_relation_category WHERE p_relation.p_r" +
                        "elation_category_c = p_relation_category.p_code_c" + GenerateWhereClauseLong("PUB_p_relation_category", PRelationCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PRelationCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ARelationName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ARelationName));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_relation WHERE p_relation_name_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PRelationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_relation" + GenerateWhereClause(PRelationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PRelationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_relation", PRelationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_relation", PRelationTable.GetColumnStringList(), PRelationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_relation", PRelationTable.GetColumnStringList(), PRelationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PRelation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Relationships between pairs of partners.  Among other relationships, this also relates the FAMILY class partners to the PERSON class partners to indicate members of a family.
    public class PPartnerRelationshipAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerRelationship";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_relationship";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerRelationshipTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerRelationshipTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerRelationshipTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ARelationName));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(ARelationKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship WHERE p_partner_key_n = ? AND p_relation_name_c " +
                    "= ? AND p_relation_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ARelationName, ARelationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ARelationName, ARelationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ARelationName, ARelationKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ARelationName, ARelationKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, String ARelationName, Int64 ARelationKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ARelationName, ARelationKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerRelationshipRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship") 
                            + GenerateWhereClause(PPartnerRelationshipTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerRelationshipRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerRelationshipRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerRelationshipTable AData, PPartnerRelationshipRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerRelationshipTable AData, PPartnerRelationshipRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerRelationshipTable AData, PPartnerRelationshipRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerRelationshipTable AData, PPartnerRelationshipRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_relationship", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, String ARelationName, Int64 ARelationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ARelationName));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(ARelationKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_relationship WHERE p_partner_key_n = ? AND p_r" +
                        "elation_name_c = ? AND p_relation_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerRelationshipRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_relationship" + GenerateWhereClause(PPartnerRelationshipTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_relationship", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship, PUB_p_partner WHERE p_partner_relationship.p_pa" +
                    "rtner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_relationship WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_relationship, PUB_p_partner WHERE p_partner_re" +
                        "lationship.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship WHERE p_relation_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerRelationKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKey(out PPartnerRelationshipTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_relationship", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship, PUB_p_partner WHERE p_partner_relationship.p_re" +
                    "lation_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerRelationKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerRelationKeyTemplate(out PPartnerRelationshipTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerRelationKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerRelationKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_relationship WHERE p_relation_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerRelationKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_relationship, PUB_p_partner WHERE p_partner_re" +
                        "lationship.p_relation_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPRelation(DataSet ADataSet, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ARelationName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship WHERE p_relation_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPRelation(DataSet AData, String ARelationName, TDBTransaction ATransaction)
        {
            LoadViaPRelation(AData, ARelationName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelation(DataSet AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelation(AData, ARelationName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelation(out PPartnerRelationshipTable AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPRelation(FillDataSet, ARelationName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPRelation(out PPartnerRelationshipTable AData, String ARelationName, TDBTransaction ATransaction)
        {
            LoadViaPRelation(out AData, ARelationName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelation(out PPartnerRelationshipTable AData, String ARelationName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelation(out AData, ARelationName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(DataSet ADataSet, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_relationship", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_relation_name_c",
                            "p_relation_key_n"}) + " FROM PUB_p_partner_relationship, PUB_p_relation WHERE p_partner_relationship.p_r" +
                    "elation_name_c = p_relation.p_relation_name_c") 
                            + GenerateWhereClauseLong("PUB_p_relation", PRelationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerRelationshipTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(DataSet AData, PRelationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPRelationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(DataSet AData, PRelationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(out PPartnerRelationshipTable AData, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerRelationshipTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPRelationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(out PPartnerRelationshipTable AData, PRelationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPRelationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(out PPartnerRelationshipTable AData, PRelationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPRelationTemplate(out PPartnerRelationshipTable AData, PRelationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPRelationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPRelation(String ARelationName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ARelationName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_relationship WHERE p_relation_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPRelationTemplate(PRelationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_relationship, PUB_p_relation WHERE p_partner_r" +
                        "elationship.p_relation_name_c = p_relation.p_relation_name_c" + GenerateWhereClauseLong("PUB_p_relation", PRelationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PRelationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, String ARelationName, Int64 ARelationKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[1].Value = ((object)(ARelationName));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(ARelationKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_relationship WHERE p_partner_key_n = ? AND p_relation_n" +
                    "ame_c = ? AND p_relation_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerRelationshipRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_relationship" + GenerateWhereClause(PPartnerRelationshipTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerRelationshipTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_relationship", PPartnerRelationshipTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_relationship", PPartnerRelationshipTable.GetColumnStringList(), PPartnerRelationshipTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_relationship", PPartnerRelationshipTable.GetColumnStringList(), PPartnerRelationshipTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerRelationship", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// For Development.  Associates Progress program files with their Petra Partner report names.
    public class PReportsAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PReports";
        
        /// original table name in database
        public const string DBTABLENAME = "p_reports";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_report_name_c"}) + " FROM PUB_p_reports") 
                            + GenerateOrderByClause(AOrderBy)), PReportsTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PReportsTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReportsTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PReportsTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PReportsTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AReportName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AReportName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_report_name_c"}) + " FROM PUB_p_reports WHERE p_report_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PReportsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AReportName, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AReportName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AReportName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AReportName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReportsTable AData, String AReportName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReportsTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AReportName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReportsTable AData, String AReportName, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AReportName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReportsTable AData, String AReportName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AReportName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PReportsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_report_name_c"}) + " FROM PUB_p_reports") 
                            + GenerateWhereClause(PReportsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PReportsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PReportsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PReportsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReportsTable AData, PReportsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReportsTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReportsTable AData, PReportsRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReportsTable AData, PReportsRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReportsTable AData, PReportsRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_reports", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AReportName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AReportName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_reports WHERE p_report_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PReportsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_reports" + GenerateWhereClause(PReportsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaSFile(DataSet ADataSet, String AFileName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 80);
            ParametersArray[0].Value = ((object)(AFileName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_report_name_c"}) + " FROM PUB_p_reports WHERE p_report_program_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PReportsTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSFile(DataSet AData, String AFileName, TDBTransaction ATransaction)
        {
            LoadViaSFile(AData, AFileName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFile(DataSet AData, String AFileName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSFile(AData, AFileName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFile(out PReportsTable AData, String AFileName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReportsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSFile(FillDataSet, AFileName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSFile(out PReportsTable AData, String AFileName, TDBTransaction ATransaction)
        {
            LoadViaSFile(out AData, AFileName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFile(out PReportsTable AData, String AFileName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSFile(out AData, AFileName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(DataSet ADataSet, SFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_reports", AFieldList, new string[] {
                            "p_report_name_c"}) + " FROM PUB_p_reports, PUB_s_file WHERE p_reports.p_report_program_c = s_file.s_fil" +
                    "e_name_c") 
                            + GenerateWhereClauseLong("PUB_s_file", SFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PReportsTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(DataSet AData, SFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSFileTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(DataSet AData, SFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSFileTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(out PReportsTable AData, SFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReportsTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSFileTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(out PReportsTable AData, SFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSFileTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(out PReportsTable AData, SFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSFileTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSFileTemplate(out PReportsTable AData, SFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSFileTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSFile(String AFileName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 80);
            ParametersArray[0].Value = ((object)(AFileName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_reports WHERE p_report_program_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSFileTemplate(SFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_reports, PUB_s_file WHERE p_reports.p_report_program_c" +
                        " = s_file.s_file_name_c" + GenerateWhereClauseLong("PUB_s_file", SFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SFileTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AReportName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(AReportName));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_reports WHERE p_report_name_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PReportsRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_reports" + GenerateWhereClause(PReportsTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PReportsTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_reports", PReportsTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_reports", PReportsTable.GetColumnStringList(), PReportsTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_reports", PReportsTable.GetColumnStringList(), PReportsTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PReports", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Used to keep track of partner keys
    public class PPartnerLedgerAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerLedger";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_ledger";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner_ledger") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLedgerTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLedgerTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLedgerTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLedgerTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerLedgerTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner_ledger WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLedgerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLedgerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLedgerTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLedgerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerLedgerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerLedgerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner_ledger") 
                            + GenerateWhereClause(PPartnerLedgerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLedgerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerLedgerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerLedgerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLedgerTable AData, PPartnerLedgerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLedgerTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLedgerTable AData, PPartnerLedgerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLedgerTable AData, PPartnerLedgerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerLedgerTable AData, PPartnerLedgerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_ledger", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_ledger WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerLedgerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_ledger" + GenerateWhereClause(PPartnerLedgerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner_ledger WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLedgerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerLedgerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLedgerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerLedgerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerLedgerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_ledger", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_partner_ledger, PUB_p_unit WHERE p_partner_ledger.p_partner_key_n = p" +
                    "_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerLedgerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerLedgerTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerLedgerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerLedgerTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerLedgerTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerLedgerTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_ledger WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_ledger, PUB_p_unit WHERE p_partner_ledger.p_pa" +
                        "rtner_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_ledger WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerLedgerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_ledger" + GenerateWhereClause(PPartnerLedgerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerLedgerTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_ledger", PPartnerLedgerTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_ledger", PPartnerLedgerTable.GetColumnStringList(), PPartnerLedgerTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_ledger", PPartnerLedgerTable.GetColumnStringList(), PPartnerLedgerTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerLedger", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table is used to define data labels for individual use in each office.
    public class PDataLabelAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDataLabel";
        
        /// original table name in database
        public const string DBTABLENAME = "p_data_label";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label WHERE p_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelTable AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label") 
                            + GenerateWhereClause(PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelTable AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelTable AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label WHERE p_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label" + GenerateWhereClause(PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet ADataSet, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label WHERE p_currency_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(DataSet AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PDataLabelTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrency(FillDataSet, ACurrencyCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PDataLabelTable AData, String ACurrencyCode, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrency(out PDataLabelTable AData, String ACurrencyCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrency(out AData, ACurrencyCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet ADataSet, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label, PUB_a_currency WHERE p_data_label.p_currency_code_c = a_c" +
                    "urrency.a_currency_code_c") 
                            + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(DataSet AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PDataLabelTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaACurrencyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PDataLabelTable AData, ACurrencyRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PDataLabelTable AData, ACurrencyRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaACurrencyTemplate(out PDataLabelTable AData, ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaACurrencyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaACurrency(String ACurrencyCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[0].Value = ((object)(ACurrencyCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label WHERE p_currency_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaACurrencyTemplate(ACurrencyRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label, PUB_a_currency WHERE p_data_label.p_curren" +
                        "cy_code_c = a_currency.a_currency_code_c" + GenerateWhereClauseLong("PUB_a_currency", ACurrencyTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, ACurrencyTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet ADataSet, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label WHERE p_lookup_category_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelLookupCategory(FillDataSet, ACategoryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelTable AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(out AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(out AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet ADataSet, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label, PUB_p_data_label_lookup_category WHERE p_data_label.p_loo" +
                    "kup_category_code_c = p_data_label_lookup_category.p_category_code_c") 
                            + GenerateWhereClauseLong("PUB_p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelLookupCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelTable AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPDataLabelLookupCategory(String ACategoryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label WHERE p_lookup_category_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDataLabelLookupCategoryTemplate(PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label, PUB_p_data_label_lookup_category WHERE p_d" +
                        "ata_label.p_lookup_category_code_c = p_data_label_lookup_category.p_category_cod" +
                        "e_c" + GenerateWhereClauseLong("PUB_p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDataLabelLookupCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label, PUB_p_data_label_value_partner WHERE PUB_p_data_label_val" +
                    "ue_partner.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_p_data_label_va" +
                    "lue_partner.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PDataLabelTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PDataLabelTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PDataLabelTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label, PUB_p_data_label_value_partner, PUB_p_partner WHERE PUB_p" +
                    "_data_label_value_partner.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_" +
                    "p_data_label_value_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PDataLabelTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PDataLabelTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PDataLabelTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PDataLabelTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label, PUB_p_data_label_value_partner WHERE PUB_p" +
                        "_data_label_value_partner.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_" +
                        "p_data_label_value_partner.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label, PUB_p_data_label_value_partner, PUB_p_part" +
                        "ner WHERE PUB_p_data_label_value_partner.p_data_label_key_i = PUB_p_data_label.p" +
                        "_key_i AND PUB_p_data_label_value_partner.p_partner_key_n = PUB_p_partner.p_part" +
                        "ner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPmGeneralApplication(DataSet ADataSet, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AApplicationKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(ARegistrationOffice));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + @" FROM PUB_p_data_label, PUB_p_data_label_value_application WHERE PUB_p_data_label_value_application.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_p_data_label_value_application.p_partner_key_n = ? AND PUB_p_data_label_value_application.pm_application_key_i = ? AND PUB_p_data_label_value_application.pm_registration_office_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplication(DataSet AData, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplication(AData, APartnerKey, AApplicationKey, ARegistrationOffice, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplication(DataSet AData, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplication(AData, APartnerKey, AApplicationKey, ARegistrationOffice, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplication(out PDataLabelTable AData, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmGeneralApplication(FillDataSet, APartnerKey, AApplicationKey, ARegistrationOffice, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplication(out PDataLabelTable AData, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplication(out AData, APartnerKey, AApplicationKey, ARegistrationOffice, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplication(out PDataLabelTable AData, Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplication(out AData, APartnerKey, AApplicationKey, ARegistrationOffice, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(DataSet ADataSet, PmGeneralApplicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + @" FROM PUB_p_data_label, PUB_p_data_label_value_application, PUB_pm_general_application WHERE PUB_p_data_label_value_application.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_p_data_label_value_application.p_partner_key_n = PUB_pm_general_application.p_partner_key_n AND PUB_p_data_label_value_application.pm_application_key_i = PUB_pm_general_application.pm_application_key_i AND PUB_p_data_label_value_application.pm_registration_office_n = PUB_pm_general_application.pm_registration_office_n") 
                            + GenerateWhereClauseLong("PUB_pm_general_application", PmGeneralApplicationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(DataSet AData, PmGeneralApplicationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplicationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(DataSet AData, PmGeneralApplicationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplicationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(out PDataLabelTable AData, PmGeneralApplicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmGeneralApplicationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(out PDataLabelTable AData, PmGeneralApplicationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplicationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(out PDataLabelTable AData, PmGeneralApplicationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplicationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmGeneralApplicationTemplate(out PDataLabelTable AData, PmGeneralApplicationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmGeneralApplicationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPmGeneralApplication(Int64 APartnerKey, Int32 AApplicationKey, Int64 ARegistrationOffice, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AApplicationKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(ARegistrationOffice));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_data_label, PUB_p_data_label_value_application WHERE PUB_p_data_label_value_application.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_p_data_label_value_application.p_partner_key_n = ? AND PUB_p_data_label_value_application.pm_application_key_i = ? AND PUB_p_data_label_value_application.pm_registration_office_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPmGeneralApplicationTemplate(PmGeneralApplicationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_data_label, PUB_p_data_label_value_application, PUB_pm_general_application WHERE PUB_p_data_label_value_application.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_p_data_label_value_application.p_partner_key_n = PUB_pm_general_application.p_partner_key_n AND PUB_p_data_label_value_application.pm_application_key_i = PUB_pm_general_application.pm_application_key_i AND PUB_p_data_label_value_application.pm_registration_office_n = PUB_pm_general_application.pm_registration_office_n" + GenerateWhereClauseLong("PUB_pm_general_application", PmGeneralApplicationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PmGeneralApplicationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_data_label, PUB_s_group_data_label WHERE PUB_s_group_data_label.p_dat" +
                    "a_label_key_i = PUB_p_data_label.p_key_i AND PUB_s_group_data_label.s_group_id_c" +
                    " = ? AND PUB_s_group_data_label.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PDataLabelTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PDataLabelTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PDataLabelTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label", AFieldList, new string[] {
                            "p_key_i"}) + @" FROM PUB_p_data_label, PUB_s_group_data_label, PUB_s_group WHERE PUB_s_group_data_label.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_s_group_data_label.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_data_label.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PDataLabelTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PDataLabelTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PDataLabelTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PDataLabelTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label, PUB_s_group_data_label WHERE PUB_s_group_d" +
                        "ata_label.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_s_group_data_lab" +
                        "el.s_group_id_c = ? AND PUB_s_group_data_label.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_data_label, PUB_s_group_data_label, PUB_s_group WHERE PUB_s_group_data_label.p_data_label_key_i = PUB_p_data_label.p_key_i AND PUB_s_group_data_label.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_data_label.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_data_label WHERE p_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_data_label" + GenerateWhereClause(PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDataLabelTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PDataLabelRow)(TheRow)).Key = ((Int32)(DBAccess.GDBAccessObj.GetNextSequenceValue("seq_data_label", ATransaction)));
                        TTypedDataAccess.InsertRow("p_data_label", PDataLabelTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_data_label", PDataLabelTable.GetColumnStringList(), PDataLabelTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_data_label", PDataLabelTable.GetColumnStringList(), PDataLabelTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDataLabel", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table defines where a data label is used and the order the labels appear in.
    public class PDataLabelUseAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDataLabelUse";
        
        /// original table name in database
        public const string DBTABLENAME = "p_data_label_use";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_data_label_key_i",
                            "p_use_c"}) + " FROM PUB_p_data_label_use") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelUseTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelUseTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelUseTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelUseTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelUseTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int32 ADataLabelKey, String AUse, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ADataLabelKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[1].Value = ((object)(AUse));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_data_label_key_i",
                            "p_use_c"}) + " FROM PUB_p_data_label_use WHERE p_data_label_key_i = ? AND p_use_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelUseTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 ADataLabelKey, String AUse, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ADataLabelKey, AUse, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 ADataLabelKey, String AUse, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ADataLabelKey, AUse, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelUseTable AData, Int32 ADataLabelKey, String AUse, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelUseTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ADataLabelKey, AUse, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelUseTable AData, Int32 ADataLabelKey, String AUse, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ADataLabelKey, AUse, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelUseTable AData, Int32 ADataLabelKey, String AUse, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ADataLabelKey, AUse, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDataLabelUseRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_data_label_key_i",
                            "p_use_c"}) + " FROM PUB_p_data_label_use") 
                            + GenerateWhereClause(PDataLabelUseTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelUseTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelUseRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelUseRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelUseTable AData, PDataLabelUseRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelUseTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelUseTable AData, PDataLabelUseRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelUseTable AData, PDataLabelUseRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelUseTable AData, PDataLabelUseRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_use", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int32 ADataLabelKey, String AUse, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ADataLabelKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[1].Value = ((object)(AUse));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_use WHERE p_data_label_key_i = ? AND p_use_" +
                        "c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDataLabelUseRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_use" + GenerateWhereClause(PDataLabelUseTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet ADataSet, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_data_label_key_i",
                            "p_use_c"}) + " FROM PUB_p_data_label_use WHERE p_data_label_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelUseTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelUseTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelUseTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabel(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelUseTable AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelUseTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet ADataSet, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label_use", AFieldList, new string[] {
                            "p_data_label_key_i",
                            "p_use_c"}) + " FROM PUB_p_data_label_use, PUB_p_data_label WHERE p_data_label_use.p_data_label_" +
                    "key_i = p_data_label.p_key_i") 
                            + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelUseTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelUseTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelUseTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelUseTable AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelUseTable AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelUseTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPDataLabel(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_use WHERE p_data_label_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDataLabelTemplate(PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_use, PUB_p_data_label WHERE p_data_label_us" +
                        "e.p_data_label_key_i = p_data_label.p_key_i" + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDataLabelTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int32 ADataLabelKey, String AUse, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ADataLabelKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[1].Value = ((object)(AUse));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_data_label_use WHERE p_data_label_key_i = ? AND p_use_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDataLabelUseRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_data_label_use" + GenerateWhereClause(PDataLabelUseTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDataLabelUseTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_data_label_use", PDataLabelUseTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_data_label_use", PDataLabelUseTable.GetColumnStringList(), PDataLabelUseTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_data_label_use", PDataLabelUseTable.GetColumnStringList(), PDataLabelUseTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDataLabelUse", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table holds the label values for partner related data.
    public class PDataLabelValuePartnerAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDataLabelValuePartner";
        
        /// original table name in database
        public const string DBTABLENAME = "p_data_label_value_partner";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelValuePartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelValuePartnerTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelValuePartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 ADataLabelKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ADataLabelKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner WHERE p_partner_key_n = ? AND p_data_label_k" +
                    "ey_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ADataLabelKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ADataLabelKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 ADataLabelKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ADataLabelKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, Int32 ADataLabelKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ADataLabelKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, Int32 ADataLabelKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ADataLabelKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, Int32 ADataLabelKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ADataLabelKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDataLabelValuePartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner") 
                            + GenerateWhereClause(PDataLabelValuePartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelValuePartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelValuePartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelValuePartnerTable AData, PDataLabelValuePartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelValuePartnerTable AData, PDataLabelValuePartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelValuePartnerTable AData, PDataLabelValuePartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelValuePartnerTable AData, PDataLabelValuePartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_value_partner", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 ADataLabelKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ADataLabelKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_value_partner WHERE p_partner_key_n = ? AND" +
                        " p_data_label_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDataLabelValuePartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_value_partner" + GenerateWhereClause(PDataLabelValuePartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label_value_partner", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner, PUB_p_partner WHERE p_data_label_value_part" +
                    "ner.p_partner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerPartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_value_partner WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerPartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_value_partner, PUB_p_partner WHERE p_data_l" +
                        "abel_value_partner.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet ADataSet, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner WHERE p_data_label_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(DataSet AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelValuePartnerTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabel(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelValuePartnerTable AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabel(out PDataLabelValuePartnerTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabel(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet ADataSet, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label_value_partner", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner, PUB_p_data_label WHERE p_data_label_value_p" +
                    "artner.p_data_label_key_i = p_data_label.p_key_i") 
                            + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(DataSet AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelValuePartnerTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelValuePartnerTable AData, PDataLabelRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelValuePartnerTable AData, PDataLabelRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelTemplate(out PDataLabelValuePartnerTable AData, PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPDataLabel(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_value_partner WHERE p_data_label_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDataLabelTemplate(PDataLabelRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_value_partner, PUB_p_data_label WHERE p_dat" +
                        "a_label_value_partner.p_data_label_key_i = p_data_label.p_key_i" + GenerateWhereClauseLong("PUB_p_data_label", PDataLabelTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDataLabelTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner WHERE p_value_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerValuePartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKey(out PDataLabelValuePartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label_value_partner", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_data_label_key_i"}) + " FROM PUB_p_data_label_value_partner, PUB_p_partner WHERE p_data_label_value_part" +
                    "ner.p_value_partner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelValuePartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelValuePartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerValuePartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerValuePartnerKeyTemplate(out PDataLabelValuePartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerValuePartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerValuePartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_value_partner WHERE p_value_partner_key_n =" +
                        " ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerValuePartnerKeyTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_value_partner, PUB_p_partner WHERE p_data_l" +
                        "abel_value_partner.p_value_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 ADataLabelKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(ADataLabelKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_data_label_value_partner WHERE p_partner_key_n = ? AND p_data_l" +
                    "abel_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDataLabelValuePartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_data_label_value_partner" + GenerateWhereClause(PDataLabelValuePartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDataLabelValuePartnerTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_data_label_value_partner", PDataLabelValuePartnerTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_data_label_value_partner", PDataLabelValuePartnerTable.GetColumnStringList(), PDataLabelValuePartnerTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_data_label_value_partner", PDataLabelValuePartnerTable.GetColumnStringList(), PDataLabelValuePartnerTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDataLabelValuePartner", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table holds the categories that can be used for data label values.
    public class PDataLabelLookupCategoryAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDataLabelLookupCategory";
        
        /// original table name in database
        public const string DBTABLENAME = "p_data_label_lookup_category";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c"}) + " FROM PUB_p_data_label_lookup_category") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupCategoryTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupCategoryTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c"}) + " FROM PUB_p_data_label_lookup_category WHERE p_category_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupCategoryTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupCategoryTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACategoryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupCategoryTable AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupCategoryTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c"}) + " FROM PUB_p_data_label_lookup_category") 
                            + GenerateWhereClause(PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupCategoryTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupCategoryTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupCategoryTable AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupCategoryTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupCategoryTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_lookup_category", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACategoryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_lookup_category WHERE p_category_code_c = ?" +
                        "", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_lookup_category" + GenerateWhereClause(PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACategoryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_data_label_lookup_category WHERE p_category_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_data_label_lookup_category" + GenerateWhereClause(PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDataLabelLookupCategoryTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), PDataLabelLookupCategoryTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), PDataLabelLookupCategoryTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDataLabelLookupCategory", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table holds all lookup values that can be used for data label values.
    public class PDataLabelLookupAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PDataLabelLookup";
        
        /// original table name in database
        public const string DBTABLENAME = "p_data_label_lookup";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c",
                            "p_value_code_c"}) + " FROM PUB_p_data_label_lookup") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PDataLabelLookupTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACategoryCode, String AValueCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 80);
            ParametersArray[1].Value = ((object)(AValueCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c",
                            "p_value_code_c"}) + " FROM PUB_p_data_label_lookup WHERE p_category_code_c = ? AND p_value_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategoryCode, String AValueCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategoryCode, AValueCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategoryCode, String AValueCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategoryCode, AValueCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupTable AData, String ACategoryCode, String AValueCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACategoryCode, AValueCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupTable AData, String ACategoryCode, String AValueCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategoryCode, AValueCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PDataLabelLookupTable AData, String ACategoryCode, String AValueCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategoryCode, AValueCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PDataLabelLookupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c",
                            "p_value_code_c"}) + " FROM PUB_p_data_label_lookup") 
                            + GenerateWhereClause(PDataLabelLookupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelLookupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PDataLabelLookupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupTable AData, PDataLabelLookupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupTable AData, PDataLabelLookupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupTable AData, PDataLabelLookupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PDataLabelLookupTable AData, PDataLabelLookupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_lookup", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACategoryCode, String AValueCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 80);
            ParametersArray[1].Value = ((object)(AValueCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_lookup WHERE p_category_code_c = ? AND p_va" +
                        "lue_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PDataLabelLookupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_lookup" + GenerateWhereClause(PDataLabelLookupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet ADataSet, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_code_c",
                            "p_value_code_c"}) + " FROM PUB_p_data_label_lookup WHERE p_category_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(DataSet AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelLookupTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelLookupCategory(FillDataSet, ACategoryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelLookupTable AData, String ACategoryCode, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(out AData, ACategoryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategory(out PDataLabelLookupTable AData, String ACategoryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategory(out AData, ACategoryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet ADataSet, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_data_label_lookup", AFieldList, new string[] {
                            "p_category_code_c",
                            "p_value_code_c"}) + " FROM PUB_p_data_label_lookup, PUB_p_data_label_lookup_category WHERE p_data_labe" +
                    "l_lookup.p_category_code_c = p_data_label_lookup_category.p_category_code_c") 
                            + GenerateWhereClauseLong("PUB_p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PDataLabelLookupTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(DataSet AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelLookupTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PDataLabelLookupTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPDataLabelLookupCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelLookupTable AData, PDataLabelLookupCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelLookupTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPDataLabelLookupCategoryTemplate(out PDataLabelLookupTable AData, PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPDataLabelLookupCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPDataLabelLookupCategory(String ACategoryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_data_label_lookup WHERE p_category_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPDataLabelLookupCategoryTemplate(PDataLabelLookupCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_data_label_lookup, PUB_p_data_label_lookup_category WH" +
                        "ERE p_data_label_lookup.p_category_code_c = p_data_label_lookup_category.p_categ" +
                        "ory_code_c" + GenerateWhereClauseLong("PUB_p_data_label_lookup_category", PDataLabelLookupCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PDataLabelLookupCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACategoryCode, String AValueCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(ACategoryCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 80);
            ParametersArray[1].Value = ((object)(AValueCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_data_label_lookup WHERE p_category_code_c = ? AND p_value_code_" +
                    "c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PDataLabelLookupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_data_label_lookup" + GenerateWhereClause(PDataLabelLookupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PDataLabelLookupTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_data_label_lookup", PDataLabelLookupTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_data_label_lookup", PDataLabelLookupTable.GetColumnStringList(), PDataLabelLookupTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_data_label_lookup", PDataLabelLookupTable.GetColumnStringList(), PDataLabelLookupTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PDataLabelLookup", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Tax reference numbers
    public class PTaxAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PTax";
        
        /// original table name in database
        public const string DBTABLENAME = "p_tax";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_tax_type_c",
                            "p_tax_ref_c"}) + " FROM PUB_p_tax") 
                            + GenerateOrderByClause(AOrderBy)), PTaxTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTaxTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTaxTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PTaxTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PTaxTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, String ATaxType, String ATaxRef, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[1].Value = ((object)(ATaxType));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 100);
            ParametersArray[2].Value = ((object)(ATaxRef));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_tax_type_c",
                            "p_tax_ref_c"}) + " FROM PUB_p_tax WHERE p_partner_key_n = ? AND p_tax_type_c = ? AND p_tax_ref_c = " +
                    "?") 
                            + GenerateOrderByClause(AOrderBy)), PTaxTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ATaxType, String ATaxRef, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ATaxType, ATaxRef, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String ATaxType, String ATaxRef, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, ATaxType, ATaxRef, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTaxTable AData, Int64 APartnerKey, String ATaxType, String ATaxRef, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTaxTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, ATaxType, ATaxRef, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTaxTable AData, Int64 APartnerKey, String ATaxType, String ATaxRef, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ATaxType, ATaxRef, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PTaxTable AData, Int64 APartnerKey, String ATaxType, String ATaxRef, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, ATaxType, ATaxRef, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PTaxRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_tax_type_c",
                            "p_tax_ref_c"}) + " FROM PUB_p_tax") 
                            + GenerateWhereClause(PTaxTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTaxTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTaxRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PTaxRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTaxTable AData, PTaxRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTaxTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTaxTable AData, PTaxRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTaxTable AData, PTaxRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PTaxTable AData, PTaxRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_tax", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, String ATaxType, String ATaxRef, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[1].Value = ((object)(ATaxType));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 100);
            ParametersArray[2].Value = ((object)(ATaxRef));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_tax WHERE p_partner_key_n = ? AND p_tax_type_c = ? AND" +
                        " p_tax_ref_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PTaxRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_tax" + GenerateWhereClause(PTaxTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_tax_type_c",
                            "p_tax_ref_c"}) + " FROM PUB_p_tax WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PTaxTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTaxTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTaxTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTaxTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PTaxTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_tax", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_tax_type_c",
                            "p_tax_ref_c"}) + " FROM PUB_p_tax, PUB_p_partner WHERE p_tax.p_partner_key_n = p_partner.p_partner_" +
                    "key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PTaxTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTaxTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PTaxTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTaxTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTaxTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PTaxTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_tax WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_tax, PUB_p_partner WHERE p_tax.p_partner_key_n = p_par" +
                        "tner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, String ATaxType, String ATaxRef, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[1].Value = ((object)(ATaxType));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 100);
            ParametersArray[2].Value = ((object)(ATaxRef));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_tax WHERE p_partner_key_n = ? AND p_tax_type_c = ? AND p_tax_re" +
                    "f_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PTaxRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_tax" + GenerateWhereClause(PTaxTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PTaxTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_tax", PTaxTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_tax", PTaxTable.GetColumnStringList(), PTaxTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_tax", PTaxTable.GetColumnStringList(), PTaxTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PTax", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Categories for Area of Interest
    public class PInterestCategoryAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PInterestCategory";
        
        /// original table name in database
        public const string DBTABLENAME = "p_interest_category";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_c"}) + " FROM PUB_p_interest_category") 
                            + GenerateOrderByClause(AOrderBy)), PInterestCategoryTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestCategoryTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ACategory));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_c"}) + " FROM PUB_p_interest_category WHERE p_category_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PInterestCategoryTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategory, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategory, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACategory, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestCategoryTable AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACategory, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestCategoryTable AData, String ACategory, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategory, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestCategoryTable AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACategory, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_category_c"}) + " FROM PUB_p_interest_category") 
                            + GenerateWhereClause(PInterestCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PInterestCategoryTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PInterestCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PInterestCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestCategoryTable AData, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestCategoryTable AData, PInterestCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestCategoryTable AData, PInterestCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestCategoryTable AData, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_interest_category", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACategory, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ACategory));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_interest_category WHERE p_category_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_interest_category" + GenerateWhereClause(PInterestCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACategory, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ACategory));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_interest_category WHERE p_category_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_interest_category" + GenerateWhereClause(PInterestCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PInterestCategoryTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_interest_category", PInterestCategoryTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_interest_category", PInterestCategoryTable.GetColumnStringList(), PInterestCategoryTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_interest_category", PInterestCategoryTable.GetColumnStringList(), PInterestCategoryTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PInterestCategory", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Area of Interest
    public class PInterestAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PInterest";
        
        /// original table name in database
        public const string DBTABLENAME = "p_interest";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_interest_c"}) + " FROM PUB_p_interest") 
                            + GenerateOrderByClause(AOrderBy)), PInterestTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PInterestTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AInterest));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_interest_c"}) + " FROM PUB_p_interest WHERE p_interest_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AInterest, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AInterest, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AInterest, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestTable AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AInterest, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestTable AData, String AInterest, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AInterest, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PInterestTable AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AInterest, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_interest_c"}) + " FROM PUB_p_interest") 
                            + GenerateWhereClause(PInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestTable AData, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestTable AData, PInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestTable AData, PInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PInterestTable AData, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_interest", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AInterest, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AInterest));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_interest WHERE p_interest_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PInterestRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_interest" + GenerateWhereClause(PInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(DataSet ADataSet, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ACategory));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_interest_c"}) + " FROM PUB_p_interest WHERE p_category_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(DataSet AData, String ACategory, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategory(AData, ACategory, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(DataSet AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategory(AData, ACategory, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(out PInterestTable AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPInterestCategory(FillDataSet, ACategory, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(out PInterestTable AData, String ACategory, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategory(out AData, ACategory, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategory(out PInterestTable AData, String ACategory, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategory(out AData, ACategory, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(DataSet ADataSet, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_interest", AFieldList, new string[] {
                            "p_interest_c"}) + " FROM PUB_p_interest, PUB_p_interest_category WHERE p_interest.p_category_c = p_i" +
                    "nterest_category.p_category_c") 
                            + GenerateWhereClauseLong("PUB_p_interest_category", PInterestCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(DataSet AData, PInterestCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(DataSet AData, PInterestCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(out PInterestTable AData, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPInterestCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(out PInterestTable AData, PInterestCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(out PInterestTable AData, PInterestCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestCategoryTemplate(out PInterestTable AData, PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPInterestCategory(String ACategory, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(ACategory));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_interest WHERE p_category_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPInterestCategoryTemplate(PInterestCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_interest, PUB_p_interest_category WHERE p_interest.p_c" +
                        "ategory_c = p_interest_category.p_category_c" + GenerateWhereClauseLong("PUB_p_interest_category", PInterestCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PInterestCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AInterest, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AInterest));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_interest WHERE p_interest_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PInterestRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_interest" + GenerateWhereClause(PInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PInterestTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_interest", PInterestTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_interest", PInterestTable.GetColumnStringList(), PInterestTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_interest", PInterestTable.GetColumnStringList(), PInterestTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PInterest", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Partner Area of Interest
    public class PPartnerInterestAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerInterest";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_interest";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerInterestTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerInterestTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerInterestTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 AInterestNumber, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AInterestNumber));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest WHERE p_partner_key_n = ? AND p_interest_number_i = " +
                    "?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AInterestNumber, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AInterestNumber, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AInterestNumber, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AInterestNumber, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerInterestTable AData, Int64 APartnerKey, Int32 AInterestNumber, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AInterestNumber, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerInterestTable AData, Int64 APartnerKey, Int32 AInterestNumber, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AInterestNumber, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerInterestTable AData, Int64 APartnerKey, Int32 AInterestNumber, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AInterestNumber, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest") 
                            + GenerateWhereClause(PPartnerInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerInterestTable AData, PPartnerInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerInterestTable AData, PPartnerInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerInterestTable AData, PPartnerInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerInterestTable AData, PPartnerInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 AInterestNumber, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AInterestNumber));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest WHERE p_partner_key_n = ? AND p_inter" +
                        "est_number_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerInterestRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_interest" + GenerateWhereClause(PPartnerInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerInterestTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerInterestTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerInterestTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_interest", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest, PUB_p_partner WHERE p_partner_interest.p_partner_ke" +
                    "y_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerInterestTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerInterestTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerInterestTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerInterestTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_interest, PUB_p_partner WHERE p_partner_intere" +
                        "st.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest WHERE p_field_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerInterestTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerInterestTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerInterestTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_interest", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest, PUB_p_unit WHERE p_partner_interest.p_field_key_n =" +
                    " p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerInterestTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerInterestTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerInterestTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerInterestTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest WHERE p_field_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_interest, PUB_p_unit WHERE p_partner_interest." +
                        "p_field_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet ADataSet, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest WHERE p_country_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(DataSet AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PPartnerInterestTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountry(FillDataSet, ACountryCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PPartnerInterestTable AData, String ACountryCode, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountry(out PPartnerInterestTable AData, String ACountryCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountry(out AData, ACountryCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet ADataSet, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_interest", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest, PUB_p_country WHERE p_partner_interest.p_country_c " +
                    "= p_country.p_country_code_c") 
                            + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(DataSet AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PPartnerInterestTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPCountryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PPartnerInterestTable AData, PCountryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PPartnerInterestTable AData, PCountryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPCountryTemplate(out PPartnerInterestTable AData, PCountryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPCountryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPCountry(String ACountryCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 8);
            ParametersArray[0].Value = ((object)(ACountryCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest WHERE p_country_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPCountryTemplate(PCountryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_interest, PUB_p_country WHERE p_partner_intere" +
                        "st.p_country_c = p_country.p_country_code_c" + GenerateWhereClauseLong("PUB_p_country", PCountryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PCountryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPInterest(DataSet ADataSet, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AInterest));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest WHERE p_interest_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPInterest(DataSet AData, String AInterest, TDBTransaction ATransaction)
        {
            LoadViaPInterest(AData, AInterest, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterest(DataSet AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterest(AData, AInterest, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterest(out PPartnerInterestTable AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPInterest(FillDataSet, AInterest, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPInterest(out PPartnerInterestTable AData, String AInterest, TDBTransaction ATransaction)
        {
            LoadViaPInterest(out AData, AInterest, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterest(out PPartnerInterestTable AData, String AInterest, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterest(out AData, AInterest, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(DataSet ADataSet, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_interest", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_interest_number_i"}) + " FROM PUB_p_partner_interest, PUB_p_interest WHERE p_partner_interest.p_interest_" +
                    "c = p_interest.p_interest_c") 
                            + GenerateWhereClauseLong("PUB_p_interest", PInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerInterestTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(DataSet AData, PInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPInterestTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(DataSet AData, PInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(out PPartnerInterestTable AData, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerInterestTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPInterestTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(out PPartnerInterestTable AData, PInterestRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPInterestTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(out PPartnerInterestTable AData, PInterestRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPInterestTemplate(out PPartnerInterestTable AData, PInterestRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPInterestTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPInterest(String AInterest, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AInterest));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_interest WHERE p_interest_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPInterestTemplate(PInterestRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_interest, PUB_p_interest WHERE p_partner_inter" +
                        "est.p_interest_c = p_interest.p_interest_c" + GenerateWhereClauseLong("PUB_p_interest", PInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PInterestTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 AInterestNumber, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AInterestNumber));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_interest WHERE p_partner_key_n = ? AND p_interest_numbe" +
                    "r_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerInterestRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_interest" + GenerateWhereClause(PPartnerInterestTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerInterestTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_interest", PPartnerInterestTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_interest", PPartnerInterestTable.GetColumnStringList(), PPartnerInterestTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_interest", PPartnerInterestTable.GetColumnStringList(), PPartnerInterestTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerInterest", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Partner merge history
    public class PPartnerMergeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerMerge";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_merge";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerMergeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerMergeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerMergeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AMergeFrom, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AMergeFrom));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge WHERE p_merge_from_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AMergeFrom, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AMergeFrom, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AMergeFrom, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AMergeFrom, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerMergeTable AData, Int64 AMergeFrom, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AMergeFrom, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerMergeTable AData, Int64 AMergeFrom, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AMergeFrom, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerMergeTable AData, Int64 AMergeFrom, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AMergeFrom, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerMergeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge") 
                            + GenerateWhereClause(PPartnerMergeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerMergeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerMergeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerMergeTable AData, PPartnerMergeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerMergeTable AData, PPartnerMergeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerMergeTable AData, PPartnerMergeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerMergeTable AData, PPartnerMergeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_merge", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AMergeFrom, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AMergeFrom));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_merge WHERE p_merge_from_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerMergeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_merge" + GenerateWhereClause(PPartnerMergeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge WHERE p_merge_from_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFrom(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFrom(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(out PPartnerMergeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerMergeFrom(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(out PPartnerMergeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFrom(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFrom(out PPartnerMergeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFrom(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_merge", AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge, PUB_p_partner WHERE p_partner_merge.p_merge_from_n = p" +
                    "_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFromTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFromTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerMergeFromTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFromTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFromTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeFromTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeFromTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerMergeFrom(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_merge WHERE p_merge_from_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerMergeFromTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_merge, PUB_p_partner WHERE p_partner_merge.p_m" +
                        "erge_from_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge WHERE p_merge_to_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeTo(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeTo(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(out PPartnerMergeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerMergeTo(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(out PPartnerMergeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeTo(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeTo(out PPartnerMergeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeTo(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_merge", AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge, PUB_p_partner WHERE p_partner_merge.p_merge_to_n = p_p" +
                    "artner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeToTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeToTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerMergeToTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeToTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeToTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerMergeToTemplate(out PPartnerMergeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerMergeToTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerMergeTo(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_merge WHERE p_merge_to_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerMergeToTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_merge, PUB_p_partner WHERE p_partner_merge.p_m" +
                        "erge_to_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge WHERE s_merged_by_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUser(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUser(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PPartnerMergeTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUser(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PPartnerMergeTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUser(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUser(out PPartnerMergeTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUser(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_merge", AFieldList, new string[] {
                            "p_merge_from_n"}) + " FROM PUB_p_partner_merge, PUB_s_user WHERE p_partner_merge.s_merged_by_c = s_use" +
                    "r.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerMergeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PPartnerMergeTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerMergeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PPartnerMergeTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PPartnerMergeTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserTemplate(out PPartnerMergeTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUser(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_merge WHERE s_merged_by_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_merge, PUB_s_user WHERE p_partner_merge.s_merg" +
                        "ed_by_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AMergeFrom, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AMergeFrom));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_merge WHERE p_merge_from_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerMergeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_merge" + GenerateWhereClause(PPartnerMergeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerMergeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_merge", PPartnerMergeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_merge", PPartnerMergeTable.GetColumnStringList(), PPartnerMergeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_merge", PPartnerMergeTable.GetColumnStringList(), PPartnerMergeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerMerge", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// This table contains the codes that indicate the categories of reminders
    public class PReminderCategoryAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PReminderCategory";
        
        /// original table name in database
        public const string DBTABLENAME = "p_reminder_category";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_reminder_category") 
                            + GenerateOrderByClause(AOrderBy)), PReminderCategoryTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PReminderCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReminderCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PReminderCategoryTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PReminderCategoryTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_reminder_category WHERE p_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PReminderCategoryTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReminderCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReminderCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReminderCategoryTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PReminderCategoryTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_code_c"}) + " FROM PUB_p_reminder_category") 
                            + GenerateWhereClause(PReminderCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PReminderCategoryTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PReminderCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PReminderCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReminderCategoryTable AData, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PReminderCategoryTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReminderCategoryTable AData, PReminderCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReminderCategoryTable AData, PReminderCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PReminderCategoryTable AData, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_reminder_category", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_reminder_category WHERE p_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_reminder_category" + GenerateWhereClause(PReminderCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_reminder_category WHERE p_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_reminder_category" + GenerateWhereClause(PReminderCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PReminderCategoryTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_reminder_category", PReminderCategoryTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_reminder_category", PReminderCategoryTable.GetColumnStringList(), PReminderCategoryTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_reminder_category", PReminderCategoryTable.GetColumnStringList(), PReminderCategoryTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PReminderCategory", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A reminder that can be linked to a Partner or Partner contact
    public class PPartnerReminderAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerReminder";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_reminder";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerReminderTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerReminderTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerReminderTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AContactId));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AReminderId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE p_partner_key_n = ? AND p_contact_id_i = ? AND" +
                    " p_reminder_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AContactId, AReminderId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerReminderTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerReminderTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AContactId, AReminderId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerReminderTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder") 
                            + GenerateWhereClause(PPartnerReminderTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerReminderRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerReminderRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerReminderTable AData, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerReminderTable AData, PPartnerReminderRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerReminderTable AData, PPartnerReminderRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerReminderTable AData, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AContactId));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AReminderId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE p_partner_key_n = ? AND p_conta" +
                        "ct_id_i = ? AND p_reminder_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder" + GenerateWhereClause(PPartnerReminderTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerReminderTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerReminderTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerReminderTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_p_partner WHERE p_partner_reminder.p_partner_ke" +
                    "y_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerReminderTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerReminderTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerReminderTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerReminderTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_p_partner WHERE p_partner_remind" +
                        "er.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet ADataSet, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE p_contact_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerReminderTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContact(FillDataSet, AContactId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerReminderTable AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerReminderTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet ADataSet, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_p_partner_contact WHERE p_partner_reminder.p_co" +
                    "ntact_id_i = p_partner_contact.p_contact_id_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerReminderTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerReminderTable AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerReminderTable AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerReminderTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContact(Int32 AContactId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE p_contact_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactTemplate(PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_p_partner_contact WHERE p_partne" +
                        "r_reminder.p_contact_id_i = p_partner_contact.p_contact_id_i" + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerContactTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE s_user_id_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserId(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserId(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(out PPartnerReminderTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserId(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(out PPartnerReminderTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserId(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserId(out PPartnerReminderTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserId(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_s_user WHERE p_partner_reminder.s_user_id_c = s" +
                    "_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserIdTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserIdTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserIdTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserIdTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserIdTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserIdTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserIdTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUserUserId(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE s_user_id_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserUserIdTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_s_user WHERE p_partner_reminder." +
                        "s_user_id_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSModule(DataSet ADataSet, String AModuleId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AModuleId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE s_module_id_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSModule(DataSet AData, String AModuleId, TDBTransaction ATransaction)
        {
            LoadViaSModule(AData, AModuleId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModule(DataSet AData, String AModuleId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSModule(AData, AModuleId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModule(out PPartnerReminderTable AData, String AModuleId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSModule(FillDataSet, AModuleId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSModule(out PPartnerReminderTable AData, String AModuleId, TDBTransaction ATransaction)
        {
            LoadViaSModule(out AData, AModuleId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModule(out PPartnerReminderTable AData, String AModuleId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSModule(out AData, AModuleId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(DataSet ADataSet, SModuleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_s_module WHERE p_partner_reminder.s_module_id_c" +
                    " = s_module.s_module_id_c") 
                            + GenerateWhereClauseLong("PUB_s_module", SModuleTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(DataSet AData, SModuleRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSModuleTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(DataSet AData, SModuleRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSModuleTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(out PPartnerReminderTable AData, SModuleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSModuleTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(out PPartnerReminderTable AData, SModuleRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSModuleTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(out PPartnerReminderTable AData, SModuleRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSModuleTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSModuleTemplate(out PPartnerReminderTable AData, SModuleRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSModuleTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSModule(String AModuleId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AModuleId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE s_module_id_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSModuleTemplate(SModuleRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_s_module WHERE p_partner_reminde" +
                        "r.s_module_id_c = s_module.s_module_id_c" + GenerateWhereClauseLong("PUB_s_module", SModuleTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SModuleTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE s_user_restriction_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestriction(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestriction(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(out PPartnerReminderTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserRestriction(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(out PPartnerReminderTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestriction(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestriction(out PPartnerReminderTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestriction(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_s_user WHERE p_partner_reminder.s_user_restrict" +
                    "ion_c = s_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestrictionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestrictionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserRestrictionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestrictionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestrictionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserRestrictionTemplate(out PPartnerReminderTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserRestrictionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUserUserRestriction(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE s_user_restriction_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserUserRestrictionTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_s_user WHERE p_partner_reminder." +
                        "s_user_restriction_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(DataSet ADataSet, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder WHERE p_category_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(DataSet AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategory(AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(DataSet AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategory(AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(out PPartnerReminderTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPReminderCategory(FillDataSet, ACode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(out PPartnerReminderTable AData, String ACode, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategory(out AData, ACode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategory(out PPartnerReminderTable AData, String ACode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategory(out AData, ACode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(DataSet ADataSet, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + " FROM PUB_p_partner_reminder, PUB_p_reminder_category WHERE p_partner_reminder.p_" +
                    "category_code_c = p_reminder_category.p_code_c") 
                            + GenerateWhereClauseLong("PUB_p_reminder_category", PReminderCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(DataSet AData, PReminderCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategoryTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(DataSet AData, PReminderCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategoryTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(out PPartnerReminderTable AData, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPReminderCategoryTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(out PPartnerReminderTable AData, PReminderCategoryRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategoryTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(out PPartnerReminderTable AData, PReminderCategoryRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategoryTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPReminderCategoryTemplate(out PPartnerReminderTable AData, PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPReminderCategoryTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPReminderCategory(String ACode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(ACode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_reminder WHERE p_category_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPReminderCategoryTemplate(PReminderCategoryRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_p_reminder_category WHERE p_part" +
                        "ner_reminder.p_category_code_c = p_reminder_category.p_code_c" + GenerateWhereClauseLong("PUB_p_reminder_category", PReminderCategoryTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PReminderCategoryTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + @" FROM PUB_p_partner_reminder, PUB_s_group_partner_reminder WHERE PUB_s_group_partner_reminder.p_partner_key_n = PUB_p_partner_reminder.p_partner_key_n AND PUB_s_group_partner_reminder.p_contact_id_i = PUB_p_partner_reminder.p_contact_id_i AND PUB_s_group_partner_reminder.p_reminder_id_i = PUB_p_partner_reminder.p_reminder_id_i AND PUB_s_group_partner_reminder.s_group_id_c = ? AND PUB_s_group_partner_reminder.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerReminderTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerReminderTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerReminderTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_reminder", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_contact_id_i",
                            "p_reminder_id_i"}) + @" FROM PUB_p_partner_reminder, PUB_s_group_partner_reminder, PUB_s_group WHERE PUB_s_group_partner_reminder.p_partner_key_n = PUB_p_partner_reminder.p_partner_key_n AND PUB_s_group_partner_reminder.p_contact_id_i = PUB_p_partner_reminder.p_contact_id_i AND PUB_s_group_partner_reminder.p_reminder_id_i = PUB_p_partner_reminder.p_reminder_id_i AND PUB_s_group_partner_reminder.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_reminder.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerReminderTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerReminderTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerReminderTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerReminderTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerReminderTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerReminderTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_s_group_partner_reminder WHERE PUB_s_group_partner_reminder.p_partner_key_n = PUB_p_partner_reminder.p_partner_key_n AND PUB_s_group_partner_reminder.p_contact_id_i = PUB_p_partner_reminder.p_contact_id_i AND PUB_s_group_partner_reminder.p_reminder_id_i = PUB_p_partner_reminder.p_reminder_id_i AND PUB_s_group_partner_reminder.s_group_id_c = ? AND PUB_s_group_partner_reminder.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_reminder, PUB_s_group_partner_reminder, PUB_s_group WHERE PUB_s_group_partner_reminder.p_partner_key_n = PUB_p_partner_reminder.p_partner_key_n AND PUB_s_group_partner_reminder.p_contact_id_i = PUB_p_partner_reminder.p_contact_id_i AND PUB_s_group_partner_reminder.p_reminder_id_i = PUB_p_partner_reminder.p_reminder_id_i AND PUB_s_group_partner_reminder.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_reminder.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AContactId));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AReminderId));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_reminder WHERE p_partner_key_n = ? AND p_contact_id_i =" +
                    " ? AND p_reminder_id_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_reminder" + GenerateWhereClause(PPartnerReminderTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerReminderTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_reminder", PPartnerReminderTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_reminder", PPartnerReminderTable.GetColumnStringList(), PPartnerReminderTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_reminder", PPartnerReminderTable.GetColumnStringList(), PPartnerReminderTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerReminder", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Tracks the current field of service for the Partner and maintains a history
    public class PPartnerFieldOfServiceAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerFieldOfService";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_field_of_service";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFieldOfServiceTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFieldOfServiceTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFieldOfServiceTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service WHERE p_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFieldOfServiceTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFieldOfServiceTable AData, Int32 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFieldOfServiceTable AData, Int32 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerFieldOfServiceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service") 
                            + GenerateWhereClause(PPartnerFieldOfServiceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerFieldOfServiceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerFieldOfServiceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFieldOfServiceTable AData, PPartnerFieldOfServiceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFieldOfServiceTable AData, PPartnerFieldOfServiceRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFieldOfServiceTable AData, PPartnerFieldOfServiceRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFieldOfServiceTable AData, PPartnerFieldOfServiceRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service WHERE p_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerFieldOfServiceRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_field_of_service" + GenerateWhereClause(PPartnerFieldOfServiceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_field_of_service", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service, PUB_p_partner WHERE p_partner_field_of_serv" +
                    "ice.p_partner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFieldOfServiceTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFieldOfServiceTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFieldOfServiceTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFieldOfServiceTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_field_of_service, PUB_p_partner WHERE p_partne" +
                        "r_field_of_service.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service WHERE p_field_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerFieldOfServiceTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_field_of_service", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service, PUB_p_unit WHERE p_partner_field_of_service" +
                    ".p_field_key_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerFieldOfServiceTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerFieldOfServiceTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerFieldOfServiceTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerFieldOfServiceTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service WHERE p_field_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_field_of_service, PUB_p_unit WHERE p_partner_f" +
                        "ield_of_service.p_field_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet ADataSet, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service WHERE p_partner_class_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(DataSet AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerFieldOfServiceTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerClasses(FillDataSet, APartnerClass, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerFieldOfServiceTable AData, String APartnerClass, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(out AData, APartnerClass, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClasses(out PPartnerFieldOfServiceTable AData, String APartnerClass, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClasses(out AData, APartnerClass, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet ADataSet, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_field_of_service", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service, PUB_p_partner_classes WHERE p_partner_field" +
                    "_of_service.p_partner_class_c = p_partner_classes.p_partner_class_c") 
                            + GenerateWhereClauseLong("PUB_p_partner_classes", PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(DataSet AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerFieldOfServiceTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerClassesTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerFieldOfServiceTable AData, PPartnerClassesRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerFieldOfServiceTable AData, PPartnerClassesRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerClassesTemplate(out PPartnerFieldOfServiceTable AData, PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerClassesTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerClasses(String APartnerClass, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 24);
            ParametersArray[0].Value = ((object)(APartnerClass));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service WHERE p_partner_class_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerClassesTemplate(PPartnerClassesRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_field_of_service, PUB_p_partner_classes WHERE " +
                        "p_partner_field_of_service.p_partner_class_c = p_partner_classes.p_partner_class" +
                        "_c" + GenerateWhereClauseLong("PUB_p_partner_classes", PPartnerClassesTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerClassesTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(DataSet ADataSet, Int64 ASiteKey, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service WHERE p_commitment_site_key_n = ? AND p_comm" +
                    "itment_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(DataSet AData, Int64 ASiteKey, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPmStaffData(AData, ASiteKey, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(DataSet AData, Int64 ASiteKey, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmStaffData(AData, ASiteKey, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(out PPartnerFieldOfServiceTable AData, Int64 ASiteKey, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmStaffData(FillDataSet, ASiteKey, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(out PPartnerFieldOfServiceTable AData, Int64 ASiteKey, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPmStaffData(out AData, ASiteKey, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffData(out PPartnerFieldOfServiceTable AData, Int64 ASiteKey, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmStaffData(out AData, ASiteKey, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(DataSet ADataSet, PmStaffDataRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_field_of_service", AFieldList, new string[] {
                            "p_key_i"}) + " FROM PUB_p_partner_field_of_service, PUB_pm_staff_data WHERE p_partner_field_of_" +
                    "service.p_commitment_site_key_n = pm_staff_data.p_site_key_n AND p_partner_field" +
                    "_of_service.p_commitment_key_n = pm_staff_data.pm_key_n") 
                            + GenerateWhereClauseLong("PUB_pm_staff_data", PmStaffDataTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFieldOfServiceTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(DataSet AData, PmStaffDataRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmStaffDataTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(DataSet AData, PmStaffDataRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmStaffDataTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(out PPartnerFieldOfServiceTable AData, PmStaffDataRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFieldOfServiceTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPmStaffDataTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(out PPartnerFieldOfServiceTable AData, PmStaffDataRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPmStaffDataTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(out PPartnerFieldOfServiceTable AData, PmStaffDataRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmStaffDataTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPmStaffDataTemplate(out PPartnerFieldOfServiceTable AData, PmStaffDataRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPmStaffDataTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPmStaffData(Int64 ASiteKey, Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(ASiteKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_field_of_service WHERE p_commitment_site_key_n" +
                        " = ? AND p_commitment_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPmStaffDataTemplate(PmStaffDataRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_field_of_service, PUB_pm_staff_data WHERE p_pa" +
                        "rtner_field_of_service.p_commitment_site_key_n = pm_staff_data.p_site_key_n AND " +
                        "p_partner_field_of_service.p_commitment_key_n = pm_staff_data.pm_key_n" + GenerateWhereClauseLong("PUB_pm_staff_data", PmStaffDataTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PmStaffDataTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int32 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_field_of_service WHERE p_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerFieldOfServiceRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_field_of_service" + GenerateWhereClause(PPartnerFieldOfServiceTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerFieldOfServiceTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_field_of_service", PPartnerFieldOfServiceTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_field_of_service", PPartnerFieldOfServiceTable.GetColumnStringList(), PPartnerFieldOfServiceTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_field_of_service", PPartnerFieldOfServiceTable.GetColumnStringList(), PPartnerFieldOfServiceTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerFieldOfService", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Stores one or more short codes for a Partner (eg. a donor or recipient code for online giving system)
    public class PPartnerShortCodeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerShortCode";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_short_code";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_partner_short_code_c"}) + " FROM PUB_p_partner_short_code") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerShortCodeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerShortCodeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerShortCodeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerShortCodeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerShortCodeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, String APartnerShortCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[1].Value = ((object)(APartnerShortCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_partner_short_code_c"}) + " FROM PUB_p_partner_short_code WHERE p_partner_key_n = ? AND p_partner_short_code" +
                    "_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerShortCodeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String APartnerShortCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, APartnerShortCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, String APartnerShortCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, APartnerShortCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerShortCodeTable AData, Int64 APartnerKey, String APartnerShortCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerShortCodeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, APartnerShortCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerShortCodeTable AData, Int64 APartnerKey, String APartnerShortCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, APartnerShortCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerShortCodeTable AData, Int64 APartnerKey, String APartnerShortCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, APartnerShortCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerShortCodeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_partner_short_code_c"}) + " FROM PUB_p_partner_short_code") 
                            + GenerateWhereClause(PPartnerShortCodeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerShortCodeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerShortCodeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerShortCodeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerShortCodeTable AData, PPartnerShortCodeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerShortCodeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerShortCodeTable AData, PPartnerShortCodeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerShortCodeTable AData, PPartnerShortCodeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerShortCodeTable AData, PPartnerShortCodeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_short_code", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, String APartnerShortCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[1].Value = ((object)(APartnerShortCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_short_code WHERE p_partner_key_n = ? AND p_par" +
                        "tner_short_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerShortCodeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_short_code" + GenerateWhereClause(PPartnerShortCodeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_partner_short_code_c"}) + " FROM PUB_p_partner_short_code WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerShortCodeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerShortCodeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerShortCodeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerShortCodeTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerShortCodeTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_short_code", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_partner_short_code_c"}) + " FROM PUB_p_partner_short_code, PUB_p_partner WHERE p_partner_short_code.p_partne" +
                    "r_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerShortCodeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerShortCodeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerShortCodeTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerShortCodeTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerShortCodeTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerShortCodeTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_short_code WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_short_code, PUB_p_partner WHERE p_partner_shor" +
                        "t_code.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, String APartnerShortCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[1].Value = ((object)(APartnerShortCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_short_code WHERE p_partner_key_n = ? AND p_partner_shor" +
                    "t_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerShortCodeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_short_code" + GenerateWhereClause(PPartnerShortCodeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerShortCodeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_short_code", PPartnerShortCodeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_short_code", PPartnerShortCodeTable.GetColumnStringList(), PPartnerShortCodeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_short_code", PPartnerShortCodeTable.GetColumnStringList(), PPartnerShortCodeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerShortCode", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Refers to a process through which a Partner may go (eg. application, different status of donor - small->medium->big, etc)
    public class PProcessAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PProcess";
        
        /// original table name in database
        public const string DBTABLENAME = "p_process";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c"}) + " FROM PUB_p_process") 
                            + GenerateOrderByClause(AOrderBy)), PProcessTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PProcessTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProcessTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PProcessTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PProcessTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c"}) + " FROM PUB_p_process WHERE p_process_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PProcessTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProcessTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProcessTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AProcessCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProcessTable AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProcessTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c"}) + " FROM PUB_p_process") 
                            + GenerateWhereClause(PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PProcessTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProcessTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProcessTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProcessTable AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProcessTable AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProcessTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_process", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AProcessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_process WHERE p_process_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PProcessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_process" + GenerateWhereClause(PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AProcessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_process WHERE p_process_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PProcessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_process" + GenerateWhereClause(PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PProcessTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_process", PProcessTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_process", PProcessTable.GetColumnStringList(), PProcessTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_process", PProcessTable.GetColumnStringList(), PProcessTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PProcess", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A particular state within a process which can apply to a Partner. Each state will probably need to have an Idle state to indicate when no state applies.
    public class PStateAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PState";
        
        /// original table name in database
        public const string DBTABLENAME = "p_state";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_state_code_c"}) + " FROM PUB_p_state") 
                            + GenerateOrderByClause(AOrderBy)), PStateTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PStateTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PStateTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PStateTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PStateTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AStateCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_state_code_c"}) + " FROM PUB_p_state WHERE p_process_code_c = ? AND p_state_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PStateTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, AStateCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, AStateCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PStateTable AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PStateTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AProcessCode, AStateCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PStateTable AData, String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, AStateCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PStateTable AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, AStateCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_state_code_c"}) + " FROM PUB_p_state") 
                            + GenerateWhereClause(PStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PStateTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PStateTable AData, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PStateTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PStateTable AData, PStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PStateTable AData, PStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PStateTable AData, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_state", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AStateCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_state WHERE p_process_code_c = ? AND p_state_code_c = " +
                        "?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PStateRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_state" + GenerateWhereClause(PStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet ADataSet, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_state_code_c"}) + " FROM PUB_p_state WHERE p_process_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PStateTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadViaPProcess(AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcess(AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PStateTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProcess(FillDataSet, AProcessCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PStateTable AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadViaPProcess(out AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PStateTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcess(out AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet ADataSet, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_state", AFieldList, new string[] {
                            "p_process_code_c",
                            "p_state_code_c"}) + " FROM PUB_p_state, PUB_p_process WHERE p_state.p_process_code_c = p_process.p_pro" +
                    "cess_code_c") 
                            + GenerateWhereClauseLong("PUB_p_process", PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PStateTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PStateTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProcessTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PStateTable AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PStateTable AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PStateTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPProcess(String AProcessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_state WHERE p_process_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPProcessTemplate(PProcessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_state, PUB_p_process WHERE p_state.p_process_code_c = " +
                        "p_process.p_process_code_c" + GenerateWhereClauseLong("PUB_p_process", PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PProcessTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AStateCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_state WHERE p_process_code_c = ? AND p_state_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PStateRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_state" + GenerateWhereClause(PStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PStateTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_state", PStateTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_state", PStateTable.GetColumnStringList(), PStateTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_state", PStateTable.GetColumnStringList(), PStateTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PState", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A particular action within a process which can be performed on a Partner
    public class PActionAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PAction";
        
        /// original table name in database
        public const string DBTABLENAME = "p_action";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_action_code_c"}) + " FROM PUB_p_action") 
                            + GenerateOrderByClause(AOrderBy)), PActionTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PActionTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PActionTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PActionTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PActionTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AActionCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_action_code_c"}) + " FROM PUB_p_action WHERE p_process_code_c = ? AND p_action_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, AActionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AProcessCode, AActionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PActionTable AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PActionTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AProcessCode, AActionCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PActionTable AData, String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, AActionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PActionTable AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AProcessCode, AActionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_action_code_c"}) + " FROM PUB_p_action") 
                            + GenerateWhereClause(PActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PActionTable AData, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PActionTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PActionTable AData, PActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PActionTable AData, PActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PActionTable AData, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_action", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AActionCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_action WHERE p_process_code_c = ? AND p_action_code_c " +
                        "= ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PActionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_action" + GenerateWhereClause(PActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet ADataSet, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_process_code_c",
                            "p_action_code_c"}) + " FROM PUB_p_action WHERE p_process_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadViaPProcess(AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(DataSet AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcess(AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PActionTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProcess(FillDataSet, AProcessCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PActionTable AData, String AProcessCode, TDBTransaction ATransaction)
        {
            LoadViaPProcess(out AData, AProcessCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcess(out PActionTable AData, String AProcessCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcess(out AData, AProcessCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet ADataSet, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_action", AFieldList, new string[] {
                            "p_process_code_c",
                            "p_action_code_c"}) + " FROM PUB_p_action, PUB_p_process WHERE p_action.p_process_code_c = p_process.p_p" +
                    "rocess_code_c") 
                            + GenerateWhereClauseLong("PUB_p_process", PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(DataSet AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PActionTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProcessTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PActionTable AData, PProcessRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PActionTable AData, PProcessRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProcessTemplate(out PActionTable AData, PProcessRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProcessTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPProcess(String AProcessCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_action WHERE p_process_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPProcessTemplate(PProcessRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_action, PUB_p_process WHERE p_action.p_process_code_c " +
                        "= p_process.p_process_code_c" + GenerateWhereClauseLong("PUB_p_process", PProcessTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PProcessTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AActionCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_action WHERE p_process_code_c = ? AND p_action_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PActionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_action" + GenerateWhereClause(PActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PActionTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_action", PActionTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_action", PActionTable.GetColumnStringList(), PActionTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_action", PActionTable.GetColumnStringList(), PActionTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PAction", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A particular state in which the Partner is or has been. The Partner may be in more than one state at one time if there are two different processes relating to them.
    public class PPartnerStateAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerState";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_state";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStateTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStateTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerStateTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 AStateIndex, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AStateIndex));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state WHERE p_partner_key_n = ? AND p_state_index_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AStateIndex, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AStateIndex, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AStateIndex, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AStateIndex, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStateTable AData, Int64 APartnerKey, Int32 AStateIndex, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AStateIndex, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStateTable AData, Int64 APartnerKey, Int32 AStateIndex, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AStateIndex, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerStateTable AData, Int64 APartnerKey, Int32 AStateIndex, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AStateIndex, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state") 
                            + GenerateWhereClause(PPartnerStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStateTable AData, PPartnerStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStateTable AData, PPartnerStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStateTable AData, PPartnerStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerStateTable AData, PPartnerStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_state", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 AStateIndex, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AStateIndex));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_state WHERE p_partner_key_n = ? AND p_state_in" +
                        "dex_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerStateRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_state" + GenerateWhereClause(PPartnerStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerStateTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerStateTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerStateTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_state", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state, PUB_p_partner WHERE p_partner_state.p_partner_key_n = " +
                    "p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerStateTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerStateTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerStateTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerStateTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_state WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_state, PUB_p_partner WHERE p_partner_state.p_p" +
                        "artner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPState(DataSet ADataSet, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AStateCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state WHERE p_process_code_c = ? AND p_state_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPState(DataSet AData, String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            LoadViaPState(AData, AProcessCode, AStateCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPState(DataSet AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPState(AData, AProcessCode, AStateCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPState(out PPartnerStateTable AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPState(FillDataSet, AProcessCode, AStateCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPState(out PPartnerStateTable AData, String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            LoadViaPState(out AData, AProcessCode, AStateCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPState(out PPartnerStateTable AData, String AProcessCode, String AStateCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPState(out AData, AProcessCode, AStateCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(DataSet ADataSet, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_state", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_state_index_i"}) + " FROM PUB_p_partner_state, PUB_p_state WHERE p_partner_state.p_process_code_c = p" +
                    "_state.p_process_code_c AND p_partner_state.p_state_code_c = p_state.p_state_cod" +
                    "e_c") 
                            + GenerateWhereClauseLong("PUB_p_state", PStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerStateTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(DataSet AData, PStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPStateTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(DataSet AData, PStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPStateTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(out PPartnerStateTable AData, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerStateTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPStateTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(out PPartnerStateTable AData, PStateRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPStateTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(out PPartnerStateTable AData, PStateRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPStateTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPStateTemplate(out PPartnerStateTable AData, PStateRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPStateTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPState(String AProcessCode, String AStateCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AStateCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_state WHERE p_process_code_c = ? AND p_state_c" +
                        "ode_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPStateTemplate(PStateRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_state, PUB_p_state WHERE p_partner_state.p_pro" +
                        "cess_code_c = p_state.p_process_code_c AND p_partner_state.p_state_code_c = p_st" +
                        "ate.p_state_code_c" + GenerateWhereClauseLong("PUB_p_state", PStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PStateTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 AStateIndex, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AStateIndex));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_state WHERE p_partner_key_n = ? AND p_state_index_i = ?" +
                    "", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerStateRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_state" + GenerateWhereClause(PPartnerStateTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerStateTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_state", PPartnerStateTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_state", PPartnerStateTable.GetColumnStringList(), PPartnerStateTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_state", PPartnerStateTable.GetColumnStringList(), PPartnerStateTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerState", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A particular action which has been or needs to be applied to a Partner
    public class PPartnerActionAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerAction";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_action";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerActionTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerActionTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerActionTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 AActionNumber, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AActionNumber));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_partner_key_n = ? AND p_action_number_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AActionNumber, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AActionNumber, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AActionNumber, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AActionNumber, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AActionNumber, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AActionNumber, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AActionNumber, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AActionNumber, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AActionNumber, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AActionNumber, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action") 
                            + GenerateWhereClause(PPartnerActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerActionTable AData, PPartnerActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerActionTable AData, PPartnerActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerActionTable AData, PPartnerActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerActionTable AData, PPartnerActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 AActionNumber, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AActionNumber));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_partner_key_n = ? AND p_action_" +
                        "number_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerActionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action" + GenerateWhereClause(PPartnerActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerActionTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerActionTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerActionTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action, PUB_p_partner WHERE p_partner_action.p_partner_key_n " +
                    "= p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerActionTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerActionTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerActionTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerActionTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action, PUB_p_partner WHERE p_partner_action.p" +
                        "_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPAction(DataSet ADataSet, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AActionCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_process_code_c = ? AND p_action_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPAction(DataSet AData, String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            LoadViaPAction(AData, AProcessCode, AActionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAction(DataSet AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAction(AData, AProcessCode, AActionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAction(out PPartnerActionTable AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPAction(FillDataSet, AProcessCode, AActionCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPAction(out PPartnerActionTable AData, String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            LoadViaPAction(out AData, AProcessCode, AActionCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPAction(out PPartnerActionTable AData, String AProcessCode, String AActionCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPAction(out AData, AProcessCode, AActionCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(DataSet ADataSet, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action, PUB_p_action WHERE p_partner_action.p_process_code_c " +
                    "= p_action.p_process_code_c AND p_partner_action.p_action_code_c = p_action.p_ac" +
                    "tion_code_c") 
                            + GenerateWhereClauseLong("PUB_p_action", PActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(DataSet AData, PActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPActionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(DataSet AData, PActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPActionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(out PPartnerActionTable AData, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPActionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(out PPartnerActionTable AData, PActionRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPActionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(out PPartnerActionTable AData, PActionRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPActionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPActionTemplate(out PPartnerActionTable AData, PActionRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPActionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPAction(String AProcessCode, String AActionCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AProcessCode));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[1].Value = ((object)(AActionCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_process_code_c = ? AND p_action" +
                        "_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPActionTemplate(PActionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action, PUB_p_action WHERE p_partner_action.p_" +
                        "process_code_c = p_action.p_process_code_c AND p_partner_action.p_action_code_c " +
                        "= p_action.p_action_code_c" + GenerateWhereClauseLong("PUB_p_action", PActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PActionTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_user_to_perform_action_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformAction(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformAction(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(out PPartnerActionTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserToPerformAction(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(out PPartnerActionTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformAction(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformAction(out PPartnerActionTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformAction(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action, PUB_s_user WHERE p_partner_action.p_user_to_perform_a" +
                    "ction_c = s_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformActionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformActionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserToPerformActionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformActionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformActionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserToPerformActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserToPerformActionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUserUserToPerformAction(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_user_to_perform_action_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserUserToPerformActionTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action, PUB_s_user WHERE p_partner_action.p_us" +
                        "er_to_perform_action_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_group_to_perform_action_c = ? AND s_group_unit" +
                    "_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerActionTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerActionTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerActionTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action, PUB_s_group WHERE p_partner_action.p_group_to_perform" +
                    "_action_c = s_group.s_group_id_c AND p_partner_action.s_group_unit_key_n = s_gro" +
                    "up.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerActionTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerActionTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerActionTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerActionTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_group_to_perform_action_c = ? A" +
                        "ND s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action, PUB_s_group WHERE p_partner_action.p_g" +
                        "roup_to_perform_action_c = s_group.s_group_id_c AND p_partner_action.s_group_uni" +
                        "t_key_n = s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(DataSet ADataSet, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_user_that_performed_action_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(DataSet AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedAction(AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(DataSet AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedAction(AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(out PPartnerActionTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserThatPerformedAction(FillDataSet, AUserId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(out PPartnerActionTable AData, String AUserId, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedAction(out AData, AUserId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedAction(out PPartnerActionTable AData, String AUserId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedAction(out AData, AUserId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(DataSet ADataSet, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action, PUB_s_user WHERE p_partner_action.p_user_that_perform" +
                    "ed_action_c = s_user.s_user_id_c") 
                            + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(DataSet AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedActionTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(DataSet AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedActionTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSUserUserThatPerformedActionTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedActionTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedActionTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSUserUserThatPerformedActionTemplate(out PPartnerActionTable AData, SUserRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSUserUserThatPerformedActionTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSUserUserThatPerformedAction(String AUserId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AUserId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_user_that_performed_action_c = " +
                        "?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSUserUserThatPerformedActionTemplate(SUserRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_action, PUB_s_user WHERE p_partner_action.p_us" +
                        "er_that_performed_action_c = s_user.s_user_id_c" + GenerateWhereClauseLong("PUB_s_user", SUserTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SUserTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(DataSet ADataSet, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AContactId));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AReminderId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + " FROM PUB_p_partner_action WHERE p_partner_key_n = ? AND p_contact_id_i = ? AND p" +
                    "_reminder_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(DataSet AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminder(AData, APartnerKey, AContactId, AReminderId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(DataSet AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminder(AData, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerReminder(FillDataSet, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminder(out AData, APartnerKey, AContactId, AReminderId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminder(out PPartnerActionTable AData, Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminder(out AData, APartnerKey, AContactId, AReminderId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(DataSet ADataSet, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_action", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_action_number_i"}) + @" FROM PUB_p_partner_action, PUB_p_partner_reminder WHERE p_partner_action.p_partner_key_n = p_partner_reminder.p_partner_key_n AND p_partner_action.p_contact_id_i = p_partner_reminder.p_contact_id_i AND p_partner_action.p_reminder_id_i = p_partner_reminder.p_reminder_id_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_reminder", PPartnerReminderTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerActionTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(DataSet AData, PPartnerReminderRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminderTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(DataSet AData, PPartnerReminderRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminderTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(out PPartnerActionTable AData, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerActionTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerReminderTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(out PPartnerActionTable AData, PPartnerReminderRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminderTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(out PPartnerActionTable AData, PPartnerReminderRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminderTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerReminderTemplate(out PPartnerActionTable AData, PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerReminderTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerReminder(Int64 APartnerKey, Int32 AContactId, Int32 AReminderId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AContactId));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AReminderId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_action WHERE p_partner_key_n = ? AND p_contact" +
                        "_id_i = ? AND p_reminder_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerReminderTemplate(PPartnerReminderRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_action, PUB_p_partner_reminder WHERE p_partner_action.p_partner_key_n = p_partner_reminder.p_partner_key_n AND p_partner_action.p_contact_id_i = p_partner_reminder.p_contact_id_i AND p_partner_action.p_reminder_id_i = p_partner_reminder.p_reminder_id_i" + GenerateWhereClauseLong("PUB_p_partner_reminder", PPartnerReminderTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerReminderTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 AActionNumber, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AActionNumber));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_action WHERE p_partner_key_n = ? AND p_action_number_i " +
                    "= ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerActionRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_action" + GenerateWhereClause(PPartnerActionTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerActionTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_action", PPartnerActionTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_action", PPartnerActionTable.GetColumnStringList(), PPartnerActionTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_action", PPartnerActionTable.GetColumnStringList(), PPartnerActionTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerAction", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Lookup table for First Contact Codes (ie. how did person first hear about us)
    public class PFirstContactAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFirstContact";
        
        /// original table name in database
        public const string DBTABLENAME = "p_first_contact";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_first_contact_code_c"}) + " FROM PUB_p_first_contact") 
                            + GenerateOrderByClause(AOrderBy)), PFirstContactTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFirstContactTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFirstContactTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFirstContactTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFirstContactTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AFirstContactCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_first_contact_code_c"}) + " FROM PUB_p_first_contact WHERE p_first_contact_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFirstContactTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AFirstContactCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFirstContactCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFirstContactCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFirstContactTable AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFirstContactTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFirstContactCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFirstContactTable AData, String AFirstContactCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFirstContactCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFirstContactTable AData, String AFirstContactCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFirstContactCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_first_contact_code_c"}) + " FROM PUB_p_first_contact") 
                            + GenerateWhereClause(PFirstContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFirstContactTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFirstContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFirstContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFirstContactTable AData, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFirstContactTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFirstContactTable AData, PFirstContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFirstContactTable AData, PFirstContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFirstContactTable AData, PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_first_contact", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AFirstContactCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AFirstContactCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_first_contact WHERE p_first_contact_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_first_contact" + GenerateWhereClause(PFirstContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AFirstContactCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 60);
            ParametersArray[0].Value = ((object)(AFirstContactCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_first_contact WHERE p_first_contact_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFirstContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_first_contact" + GenerateWhereClause(PFirstContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFirstContactTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_first_contact", PFirstContactTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_first_contact", PFirstContactTable.GetColumnStringList(), PFirstContactTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_first_contact", PFirstContactTable.GetColumnStringList(), PFirstContactTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFirstContact", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Defines a Partner set
    public class PPartnerSetAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerSet";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_set";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + " FROM PUB_p_partner_set") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + " FROM PUB_p_partner_set WHERE p_partner_set_id_c = ? AND p_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerSetId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetTable AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + " FROM PUB_p_partner_set") 
                            + GenerateWhereClause(PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetTable AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetTable AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set WHERE p_partner_set_id_c = ? AND p_unit_ke" +
                        "y_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_set" + GenerateWhereClause(PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + " FROM PUB_p_partner_set WHERE p_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerSetTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnit(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerSetTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnit(out PPartnerSetTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnit(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_set", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + " FROM PUB_p_partner_set, PUB_p_unit WHERE p_partner_set.p_unit_key_n = p_unit.p_p" +
                    "artner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerSetTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerSetTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerSetTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitTemplate(out PPartnerSetTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnit(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set WHERE p_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_set, PUB_p_unit WHERE p_partner_set.p_unit_key" +
                        "_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_set", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + @" FROM PUB_p_partner_set, PUB_s_group_partner_set WHERE PUB_s_group_partner_set.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_s_group_partner_set.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_s_group_partner_set.s_group_id_c = ? AND PUB_s_group_partner_set.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerSetTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerSetTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PPartnerSetTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_set", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + @" FROM PUB_p_partner_set, PUB_s_group_partner_set, PUB_s_group WHERE PUB_s_group_partner_set.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_s_group_partner_set.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_s_group_partner_set.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_set.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerSetTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerSetTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerSetTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PPartnerSetTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner_set, PUB_s_group_partner_set WHERE PUB_s_group_partner_set.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_s_group_partner_set.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_s_group_partner_set.s_group_id_c = ? AND PUB_s_group_partner_set.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_set, PUB_s_group_partner_set, PUB_s_group WHERE PUB_s_group_partner_set.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_s_group_partner_set.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_s_group_partner_set.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_partner_set.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_partner_set", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + @" FROM PUB_p_partner_set, PUB_p_partner_set_partner WHERE PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_p_partner_set_partner.p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_set", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_unit_key_n"}) + @" FROM PUB_p_partner_set, PUB_p_partner_set_partner, PUB_p_partner WHERE PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_p_partner_set_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_partner_set, PUB_p_partner_set_partner WHERE PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_p_partner_set_partner.p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_partner_set, PUB_p_partner_set_partner, PUB_p_partner WHERE PUB_p_partner_set_partner.p_partner_set_id_c = PUB_p_partner_set.p_partner_set_id_c AND PUB_p_partner_set_partner.p_partner_set_unit_key_n = PUB_p_partner_set.p_unit_key_n AND PUB_p_partner_set_partner.p_partner_key_n = PUB_p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_set WHERE p_partner_set_id_c = ? AND p_unit_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_set" + GenerateWhereClause(PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerSetTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_set", PPartnerSetTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_set", PPartnerSetTable.GetColumnStringList(), PPartnerSetTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_set", PPartnerSetTable.GetColumnStringList(), PPartnerSetTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerSet", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Places Partners in a Partner set
    public class PPartnerSetPartnerAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerSetPartner";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_set_partner";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetPartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetPartnerTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerSetPartnerTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerSetUnitKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner WHERE p_partner_set_id_c = ? AND p_partner_set_un" +
                    "it_key_n = ? AND p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerSetId, APartnerSetUnitKey, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerSetId, APartnerSetUnitKey, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerSetId, APartnerSetUnitKey, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerSetId, APartnerSetUnitKey, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerSetId, APartnerSetUnitKey, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerSetPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner") 
                            + GenerateWhereClause(PPartnerSetPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerSetPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerSetPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetPartnerTable AData, PPartnerSetPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetPartnerTable AData, PPartnerSetPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetPartnerTable AData, PPartnerSetPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerSetPartnerTable AData, PPartnerSetPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set_partner", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerSetUnitKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set_partner WHERE p_partner_set_id_c = ? AND p" +
                        "_partner_set_unit_key_n = ? AND p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerSetPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_set_partner" + GenerateWhereClause(PPartnerSetPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(DataSet ADataSet, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner WHERE p_partner_set_id_c = ? AND p_partner_set_un" +
                    "it_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(DataSet AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(DataSet AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerSet(FillDataSet, APartnerSetId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(out AData, APartnerSetId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSet(out PPartnerSetPartnerTable AData, String APartnerSetId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSet(out AData, APartnerSetId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet ADataSet, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_set_partner", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner, PUB_p_partner_set WHERE p_partner_set_partner.p_" +
                    "partner_set_id_c = p_partner_set.p_partner_set_id_c AND p_partner_set_partner.p_" +
                    "partner_set_unit_key_n = p_partner_set.p_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner_set", PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(DataSet AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerSetPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerSetTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerSetPartnerTable AData, PPartnerSetRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerSetPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerSetTemplate(out PPartnerSetPartnerTable AData, PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerSetTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerSet(String APartnerSetId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set_partner WHERE p_partner_set_id_c = ? AND p" +
                        "_partner_set_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerSetTemplate(PPartnerSetRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_set_partner, PUB_p_partner_set WHERE p_partner" +
                        "_set_partner.p_partner_set_id_c = p_partner_set.p_partner_set_id_c AND p_partner" +
                        "_set_partner.p_partner_set_unit_key_n = p_partner_set.p_unit_key_n" + GenerateWhereClauseLong("PUB_p_partner_set", PPartnerSetTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerSetTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetPartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetPartnerTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerSetPartnerTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_set_partner", AFieldList, new string[] {
                            "p_partner_set_id_c",
                            "p_partner_set_unit_key_n",
                            "p_partner_key_n"}) + " FROM PUB_p_partner_set_partner, PUB_p_partner WHERE p_partner_set_partner.p_part" +
                    "ner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerSetPartnerTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetPartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerSetPartnerTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetPartnerTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetPartnerTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerSetPartnerTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_set_partner WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_set_partner, PUB_p_partner WHERE p_partner_set" +
                        "_partner.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String APartnerSetId, Int64 APartnerSetUnitKey, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 40);
            ParametersArray[0].Value = ((object)(APartnerSetId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(APartnerSetUnitKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[2].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_set_partner WHERE p_partner_set_id_c = ? AND p_partner_" +
                    "set_unit_key_n = ? AND p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerSetPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_set_partner" + GenerateWhereClause(PPartnerSetPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerSetPartnerTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_set_partner", PPartnerSetPartnerTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_set_partner", PPartnerSetPartnerTable.GetColumnStringList(), PPartnerSetPartnerTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_set_partner", PPartnerSetPartnerTable.GetColumnStringList(), PPartnerSetPartnerTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerSetPartner", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Allows multiple as well as arbitrary-length partner comments.
    public class PPartnerCommentAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerComment";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_comment";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_index_i",
                            "p_sequence_i"}) + " FROM PUB_p_partner_comment") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerCommentTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerCommentTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerCommentTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerCommentTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerCommentTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AIndex));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_index_i",
                            "p_sequence_i"}) + " FROM PUB_p_partner_comment WHERE p_partner_key_n = ? AND p_index_i = ? AND p_seq" +
                    "uence_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerCommentTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AIndex, ASequence, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AIndex, ASequence, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerCommentTable AData, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerCommentTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AIndex, ASequence, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerCommentTable AData, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AIndex, ASequence, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerCommentTable AData, Int64 APartnerKey, Int32 AIndex, Int32 ASequence, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AIndex, ASequence, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerCommentRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_index_i",
                            "p_sequence_i"}) + " FROM PUB_p_partner_comment") 
                            + GenerateWhereClause(PPartnerCommentTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerCommentTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerCommentRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerCommentRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerCommentTable AData, PPartnerCommentRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerCommentTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerCommentTable AData, PPartnerCommentRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerCommentTable AData, PPartnerCommentRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerCommentTable AData, PPartnerCommentRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_comment", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, Int32 AIndex, Int32 ASequence, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AIndex));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_comment WHERE p_partner_key_n = ? AND p_index_" +
                        "i = ? AND p_sequence_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerCommentRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_comment" + GenerateWhereClause(PPartnerCommentTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_index_i",
                            "p_sequence_i"}) + " FROM PUB_p_partner_comment WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerCommentTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerCommentTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerCommentTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerCommentTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerCommentTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_comment", AFieldList, new string[] {
                            "p_partner_key_n",
                            "p_index_i",
                            "p_sequence_i"}) + " FROM PUB_p_partner_comment, PUB_p_partner WHERE p_partner_comment.p_partner_key_" +
                    "n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerCommentTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerCommentTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerCommentTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerCommentTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerCommentTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerCommentTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_comment WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_comment, PUB_p_partner WHERE p_partner_comment" +
                        ".p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, Int32 AIndex, Int32 ASequence, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AIndex));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(ASequence));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_comment WHERE p_partner_key_n = ? AND p_index_i = ? AND" +
                    " p_sequence_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerCommentRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_comment" + GenerateWhereClause(PPartnerCommentTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerCommentTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_comment", PPartnerCommentTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_comment", PPartnerCommentTable.GetColumnStringList(), PPartnerCommentTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_comment", PPartnerCommentTable.GetColumnStringList(), PPartnerCommentTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerComment", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Submission type for foundation proposals e.g. EMAIL, LETTER.
    public class PProposalSubmissionTypeAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PProposalSubmissionType";
        
        /// original table name in database
        public const string DBTABLENAME = "p_proposal_submission_type";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_submission_type_code_c"}) + " FROM PUB_p_proposal_submission_type") 
                            + GenerateOrderByClause(AOrderBy)), PProposalSubmissionTypeTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PProposalSubmissionTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProposalSubmissionTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PProposalSubmissionTypeTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PProposalSubmissionTypeTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(ASubmissionTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_submission_type_code_c"}) + " FROM PUB_p_proposal_submission_type WHERE p_submission_type_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PProposalSubmissionTypeTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ASubmissionTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, ASubmissionTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProposalSubmissionTypeTable AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProposalSubmissionTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, ASubmissionTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProposalSubmissionTypeTable AData, String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ASubmissionTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PProposalSubmissionTypeTable AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, ASubmissionTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_submission_type_code_c"}) + " FROM PUB_p_proposal_submission_type") 
                            + GenerateWhereClause(PProposalSubmissionTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PProposalSubmissionTypeTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PProposalSubmissionTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProposalSubmissionTypeTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PProposalSubmissionTypeTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProposalSubmissionTypeTable AData, PProposalSubmissionTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProposalSubmissionTypeTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PProposalSubmissionTypeTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_proposal_submission_type", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(ASubmissionTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_proposal_submission_type WHERE p_submission_type_code_" +
                        "c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_proposal_submission_type" + GenerateWhereClause(PProposalSubmissionTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(ASubmissionTypeCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_proposal_submission_type WHERE p_submission_type_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_proposal_submission_type" + GenerateWhereClause(PProposalSubmissionTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PProposalSubmissionTypeTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_proposal_submission_type", PProposalSubmissionTypeTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_proposal_submission_type", PProposalSubmissionTypeTable.GetColumnStringList(), PProposalSubmissionTypeTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_proposal_submission_type", PProposalSubmissionTypeTable.GetColumnStringList(), PProposalSubmissionTypeTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PProposalSubmissionType", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Foundations - a type of ORGANISATION for fundraising proposals.
    public class PFoundationAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFoundation";
        
        /// original table name in database
        public const string DBTABLENAME = "p_foundation";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation") 
                            + GenerateWhereClause(PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationTable AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationTable AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation" + GenerateWhereClause(PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation WHERE p_contact_partner_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation, PUB_p_partner WHERE p_foundation.p_contact_partner_n = p_" +
                    "partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation WHERE p_contact_partner_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation, PUB_p_partner WHERE p_foundation.p_contact" +
                        "_partner_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPOrganisation(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOrganisation(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPOrganisation(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(out PFoundationTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPOrganisation(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisation(out PFoundationTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOrganisation(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(DataSet ADataSet, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation, PUB_p_organisation WHERE p_foundation.p_partner_key_n = p" +
                    "_organisation.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_organisation", POrganisationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(DataSet AData, POrganisationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPOrganisationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(DataSet AData, POrganisationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOrganisationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(out PFoundationTable AData, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPOrganisationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(out PFoundationTable AData, POrganisationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPOrganisationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(out PFoundationTable AData, POrganisationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOrganisationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPOrganisationTemplate(out PFoundationTable AData, POrganisationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPOrganisationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPOrganisation(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPOrganisationTemplate(POrganisationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation, PUB_p_organisation WHERE p_foundation.p_pa" +
                        "rtner_key_n = p_organisation.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_organisation", POrganisationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, POrganisationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(DataSet ADataSet, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(ASubmissionTypeCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation WHERE p_proposal_submission_type_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(DataSet AData, String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionType(AData, ASubmissionTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(DataSet AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionType(AData, ASubmissionTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(out PFoundationTable AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProposalSubmissionType(FillDataSet, ASubmissionTypeCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(out PFoundationTable AData, String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionType(out AData, ASubmissionTypeCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionType(out PFoundationTable AData, String ASubmissionTypeCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionType(out AData, ASubmissionTypeCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(DataSet ADataSet, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation", AFieldList, new string[] {
                            "p_partner_key_n"}) + " FROM PUB_p_foundation, PUB_p_proposal_submission_type WHERE p_foundation.p_propo" +
                    "sal_submission_type_c = p_proposal_submission_type.p_submission_type_code_c") 
                            + GenerateWhereClauseLong("PUB_p_proposal_submission_type", PProposalSubmissionTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(DataSet AData, PProposalSubmissionTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionTypeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(DataSet AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionTypeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(out PFoundationTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPProposalSubmissionTypeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(out PFoundationTable AData, PProposalSubmissionTypeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionTypeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(out PFoundationTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionTypeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPProposalSubmissionTypeTemplate(out PFoundationTable AData, PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPProposalSubmissionTypeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPProposalSubmissionType(String ASubmissionTypeCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(ASubmissionTypeCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation WHERE p_proposal_submission_type_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPProposalSubmissionTypeTemplate(PProposalSubmissionTypeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation, PUB_p_proposal_submission_type WHERE p_fou" +
                        "ndation.p_proposal_submission_type_c = p_proposal_submission_type.p_submission_t" +
                        "ype_code_c" + GenerateWhereClauseLong("PUB_p_proposal_submission_type", PProposalSubmissionTypeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PProposalSubmissionTypeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPFoundationProposal(DataSet ADataSet, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_foundation", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_foundation, PUB_p_foundation_proposal_detail WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = ? AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposal(FillDataSet, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(out AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(out AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet ADataSet, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation", AFieldList, new string[] {
                            "p_partner_key_n"}) + @" FROM PUB_p_foundation, PUB_p_foundation_proposal_detail, PUB_p_foundation_proposal WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i") 
                            + GenerateWhereClauseLong("PUB_p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposalTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationTable AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationTable AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPFoundationProposal(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_foundation, PUB_p_foundation_proposal_detail WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = ? AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationProposalTemplate(PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_foundation, PUB_p_foundation_proposal_detail, PUB_p_foundation_proposal WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i" + GenerateWhereClauseLong("PUB_p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationProposalTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_foundation WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_foundation" + GenerateWhereClause(PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFoundationTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_foundation", PFoundationTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_foundation", PFoundationTable.GetColumnStringList(), PFoundationTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_foundation", PFoundationTable.GetColumnStringList(), PFoundationTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFoundation", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Foundation proposal status codes and descriptions
    public class PFoundationProposalStatusAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFoundationProposalStatus";
        
        /// original table name in database
        public const string DBTABLENAME = "p_foundation_proposal_status";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_foundation_proposal_status") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalStatusTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalStatusTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalStatusTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(AStatusCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_foundation_proposal_status WHERE p_status_code_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalStatusTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalStatusTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AStatusCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalStatusTable AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalStatusTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_status_code_c"}) + " FROM PUB_p_foundation_proposal_status") 
                            + GenerateWhereClause(PFoundationProposalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalStatusTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalStatusTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalStatusTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalStatusTable AData, PFoundationProposalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalStatusTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalStatusTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_status", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(AStatusCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_status WHERE p_status_code_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_status" + GenerateWhereClause(PFoundationProposalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(AStatusCode));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_foundation_proposal_status WHERE p_status_code_c = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_foundation_proposal_status" + GenerateWhereClause(PFoundationProposalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFoundationProposalStatusTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_foundation_proposal_status", PFoundationProposalStatusTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_foundation_proposal_status", PFoundationProposalStatusTable.GetColumnStringList(), PFoundationProposalStatusTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_foundation_proposal_status", PFoundationProposalStatusTable.GetColumnStringList(), PFoundationProposalStatusTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFoundationProposalStatus", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Proposals submitted to a Foundation
    public class PFoundationProposalAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFoundationProposal";
        
        /// original table name in database
        public const string DBTABLENAME = "p_foundation_proposal";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal WHERE p_foundation_partner_key_n = ? AND p_founda" +
                    "tion_proposal_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal") 
                            + GenerateWhereClause(PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalTable AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalTable AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal WHERE p_foundation_partner_key_n =" +
                        " ? AND p_foundation_proposal_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal" + GenerateWhereClause(PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal WHERE p_foundation_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundation(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet ADataSet, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal, PUB_p_foundation WHERE p_foundation_proposal.p_f" +
                    "oundation_partner_key_n = p_foundation.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFoundation(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal WHERE p_foundation_partner_key_n =" +
                        " ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal, PUB_p_foundation WHERE p_foundati" +
                        "on_proposal.p_foundation_partner_key_n = p_foundation.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(DataSet ADataSet, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(AStatusCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal WHERE p_proposal_status_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(DataSet AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatus(AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(DataSet AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatus(AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(out PFoundationProposalTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposalStatus(FillDataSet, AStatusCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(out PFoundationProposalTable AData, String AStatusCode, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatus(out AData, AStatusCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatus(out PFoundationProposalTable AData, String AStatusCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatus(out AData, AStatusCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(DataSet ADataSet, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_status WHERE p_foundat" +
                    "ion_proposal.p_proposal_status_c = p_foundation_proposal_status.p_status_code_c") 
                            + GenerateWhereClauseLong("PUB_p_foundation_proposal_status", PFoundationProposalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(DataSet AData, PFoundationProposalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatusTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(DataSet AData, PFoundationProposalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatusTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(out PFoundationProposalTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposalStatusTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(out PFoundationProposalTable AData, PFoundationProposalStatusRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatusTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(out PFoundationProposalTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatusTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalStatusTemplate(out PFoundationProposalTable AData, PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalStatusTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFoundationProposalStatus(String AStatusCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 30);
            ParametersArray[0].Value = ((object)(AStatusCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal WHERE p_proposal_status_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationProposalStatusTemplate(PFoundationProposalStatusRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_status " +
                        "WHERE p_foundation_proposal.p_proposal_status_c = p_foundation_proposal_status.p" +
                        "_status_code_c" + GenerateWhereClauseLong("PUB_p_foundation_proposal_status", PFoundationProposalStatusTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationProposalStatusTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal WHERE p_partner_submitted_by_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationProposalTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + " FROM PUB_p_foundation_proposal, PUB_p_partner WHERE p_foundation_proposal.p_part" +
                    "ner_submitted_by_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationProposalTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationProposalTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationProposalTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFoundationProposalTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal WHERE p_partner_submitted_by_n = ?" +
                        "", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal, PUB_p_partner WHERE p_foundation_" +
                        "proposal.p_partner_submitted_by_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaPFoundationPFoundationProposalDetail(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_foundation_proposal", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + @" FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_detail WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetail(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetail(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetail(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetail(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetail(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationPFoundationProposalDetail(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetail(out PFoundationProposalTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetail(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetail(out PFoundationProposalTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetail(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(DataSet ADataSet, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i"}) + @" FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_detail, PUB_p_foundation WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(DataSet AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetailTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(DataSet AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetailTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationPFoundationProposalDetailTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetailTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetailTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationPFoundationProposalDetailTemplate(out PFoundationProposalTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationPFoundationProposalDetailTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaPFoundationPFoundationProposalDetail(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(@"SELECT COUNT(*) FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_detail WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationPFoundationProposalDetailTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_foundation_proposal, PUB_p_foundation_proposal_detail, PUB_p_foundation WHERE PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation_proposal.p_foundation_partner_key_n AND PUB_p_foundation_proposal_detail.p_foundation_proposal_key_i = PUB_p_foundation_proposal.p_foundation_proposal_key_i AND PUB_p_foundation_proposal_detail.p_foundation_partner_key_n = PUB_p_foundation.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_foundation_proposal WHERE p_foundation_partner_key_n = ? AND p_" +
                    "foundation_proposal_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_foundation_proposal" + GenerateWhereClause(PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFoundationProposalTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PFoundationProposalRow)(TheRow)).FoundationProposalKey = ((Int32)(DBAccess.GDBAccessObj.GetNextSequenceValue("seq_foundation_proposal", ATransaction)));
                        TTypedDataAccess.InsertRow("p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), PFoundationProposalTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), PFoundationProposalTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFoundationProposal", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// A proposal may be for more than one project or key ministry.
    public class PFoundationProposalDetailAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFoundationProposalDetail";
        
        /// original table name in database
        public const string DBTABLENAME = "p_foundation_proposal_detail";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalDetailTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalDetailTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationProposalDetailTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AProposalDetailId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_key_n = ? AND p" +
                    "_foundation_proposal_key_i = ? AND p_proposal_detail_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationProposalKey, AProposalDetailId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationProposalKey, AProposalDetailId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFoundationPartnerKey, AFoundationProposalKey, AProposalDetailId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationProposalKey, AProposalDetailId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationProposalKey, AProposalDetailId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFoundationProposalDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail") 
                            + GenerateWhereClause(PFoundationProposalDetailTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalDetailRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationProposalDetailRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalDetailRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalDetailRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AProposalDetailId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_" +
                        "key_n = ? AND p_foundation_proposal_key_i = ? AND p_proposal_detail_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFoundationProposalDetailRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail" + GenerateWhereClause(PFoundationProposalDetailTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_area_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitAreaPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundation_proposal_de" +
                    "tail.p_area_partner_key_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitAreaPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitAreaPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitAreaPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnitAreaPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_area_partner_key_n " +
                        "= ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitAreaPartnerKeyTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundat" +
                        "ion_proposal_detail.p_area_partner_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(DataSet ADataSet, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_key_n = ? AND p" +
                    "_foundation_proposal_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposal(FillDataSet, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(out AData, AFoundationPartnerKey, AFoundationProposalKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposal(out PFoundationProposalDetailTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposal(out AData, AFoundationPartnerKey, AFoundationProposalKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet ADataSet, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + @" FROM PUB_p_foundation_proposal_detail, PUB_p_foundation_proposal WHERE p_foundation_proposal_detail.p_foundation_partner_key_n = p_foundation_proposal.p_foundation_partner_key_n AND p_foundation_proposal_detail.p_foundation_proposal_key_i = p_foundation_proposal.p_foundation_proposal_key_i") 
                            + GenerateWhereClauseLong("PUB_p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(DataSet AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationProposalTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationProposalTemplate(out PFoundationProposalDetailTable AData, PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationProposalTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFoundationProposal(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_" +
                        "key_n = ? AND p_foundation_proposal_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationProposalTemplate(PFoundationProposalRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_p_foundation_proposal WHERE p_foundation_proposal_detail.p_foundation_partner_key_n = p_foundation_proposal.p_foundation_partner_key_n AND p_foundation_proposal_detail.p_foundation_proposal_key_i = p_foundation_proposal.p_foundation_proposal_key_i" + GenerateWhereClauseLong("PUB_p_foundation_proposal", PFoundationProposalTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationProposalTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_field_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitFieldPartnerKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundation_proposal_de" +
                    "tail.p_field_partner_key_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitFieldPartnerKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitFieldPartnerKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitFieldPartnerKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnitFieldPartnerKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_field_partner_key_n" +
                        " = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitFieldPartnerKeyTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundat" +
                        "ion_proposal_detail.p_field_partner_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundation(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalDetailTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet ADataSet, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail, PUB_p_foundation WHERE p_foundation_propo" +
                    "sal_detail.p_foundation_partner_key_n = p_foundation.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalDetailTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalDetailTable AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalDetailTable AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationProposalDetailTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFoundation(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_" +
                        "key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_p_foundation WHERE p_f" +
                        "oundation_proposal_detail.p_foundation_partner_key_n = p_foundation.p_partner_ke" +
                        "y_n" + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_key_ministry_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKey(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKey(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitKeyMinistryKey(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKey(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKey(out PFoundationProposalDetailTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKey(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(DataSet ADataSet, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundation_proposal_de" +
                    "tail.p_key_ministry_key_n = p_unit.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(DataSet AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKeyTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(DataSet AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKeyTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPUnitKeyMinistryKeyTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKeyTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKeyTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPUnitKeyMinistryKeyTemplate(out PFoundationProposalDetailTable AData, PUnitRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPUnitKeyMinistryKeyTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPUnitKeyMinistryKey(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_key_ministry_key_n " +
                        "= ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPUnitKeyMinistryKeyTemplate(PUnitRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_p_unit WHERE p_foundat" +
                        "ion_proposal_detail.p_key_ministry_key_n = p_unit.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_unit", PUnitTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PUnitTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(DataSet ADataSet, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ALedgerNumber));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[1].Value = ((object)(AMotivationGroupCode));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[2].Value = ((object)(AMotivationDetailCode));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + " FROM PUB_p_foundation_proposal_detail WHERE p_project_ledger_number_i = ? AND p_" +
                    "project_motivation_group_c = ? AND p_project_motivation_detail_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(DataSet AData, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetail(AData, ALedgerNumber, AMotivationGroupCode, AMotivationDetailCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(DataSet AData, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetail(AData, ALedgerNumber, AMotivationGroupCode, AMotivationDetailCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(out PFoundationProposalDetailTable AData, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaAMotivationDetail(FillDataSet, ALedgerNumber, AMotivationGroupCode, AMotivationDetailCode, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(out PFoundationProposalDetailTable AData, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetail(out AData, ALedgerNumber, AMotivationGroupCode, AMotivationDetailCode, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetail(out PFoundationProposalDetailTable AData, Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetail(out AData, ALedgerNumber, AMotivationGroupCode, AMotivationDetailCode, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(DataSet ADataSet, AMotivationDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_proposal_detail", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_proposal_key_i",
                            "p_proposal_detail_id_i"}) + @" FROM PUB_p_foundation_proposal_detail, PUB_a_motivation_detail WHERE p_foundation_proposal_detail.p_project_ledger_number_i = a_motivation_detail.a_ledger_number_i AND p_foundation_proposal_detail.p_project_motivation_group_c = a_motivation_detail.a_motivation_group_code_c AND p_foundation_proposal_detail.p_project_motivation_detail_c = a_motivation_detail.a_motivation_detail_code_c") 
                            + GenerateWhereClauseLong("PUB_a_motivation_detail", AMotivationDetailTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationProposalDetailTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(DataSet AData, AMotivationDetailRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetailTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(DataSet AData, AMotivationDetailRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetailTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(out PFoundationProposalDetailTable AData, AMotivationDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationProposalDetailTable();
            FillDataSet.Tables.Add(AData);
            LoadViaAMotivationDetailTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(out PFoundationProposalDetailTable AData, AMotivationDetailRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetailTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(out PFoundationProposalDetailTable AData, AMotivationDetailRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetailTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaAMotivationDetailTemplate(out PFoundationProposalDetailTable AData, AMotivationDetailRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaAMotivationDetailTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaAMotivationDetail(Int32 ALedgerNumber, String AMotivationGroupCode, String AMotivationDetailCode, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(ALedgerNumber));
            ParametersArray[1] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[1].Value = ((object)(AMotivationGroupCode));
            ParametersArray[2] = new OdbcParameter("", OdbcType.VarChar, 16);
            ParametersArray[2].Value = ((object)(AMotivationDetailCode));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail WHERE p_project_ledger_numb" +
                        "er_i = ? AND p_project_motivation_group_c = ? AND p_project_motivation_detail_c " +
                        "= ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaAMotivationDetailTemplate(AMotivationDetailRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_foundation_proposal_detail, PUB_a_motivation_detail WHERE p_foundation_proposal_detail.p_project_ledger_number_i = a_motivation_detail.a_ledger_number_i AND p_foundation_proposal_detail.p_project_motivation_group_c = a_motivation_detail.a_motivation_group_code_c AND p_foundation_proposal_detail.p_project_motivation_detail_c = a_motivation_detail.a_motivation_detail_code_c" + GenerateWhereClauseLong("PUB_a_motivation_detail", AMotivationDetailTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, AMotivationDetailTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationProposalKey, Int32 AProposalDetailId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[3];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationProposalKey));
            ParametersArray[2] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[2].Value = ((object)(AProposalDetailId));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_foundation_proposal_detail WHERE p_foundation_partner_key_n = ?" +
                    " AND p_foundation_proposal_key_i = ? AND p_proposal_detail_id_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFoundationProposalDetailRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_foundation_proposal_detail" + GenerateWhereClause(PFoundationProposalDetailTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFoundationProposalDetailTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PFoundationProposalDetailRow)(TheRow)).ProposalDetailId = ((Int32)(DBAccess.GDBAccessObj.GetNextSequenceValue("seq_proposal_detail", ATransaction)));
                        TTypedDataAccess.InsertRow("p_foundation_proposal_detail", PFoundationProposalDetailTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_foundation_proposal_detail", PFoundationProposalDetailTable.GetColumnStringList(), PFoundationProposalDetailTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_foundation_proposal_detail", PFoundationProposalDetailTable.GetColumnStringList(), PFoundationProposalDetailTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFoundationProposalDetail", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// The month and day of reviews so that proposals can be sent in time
    public class PFoundationDeadlineAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFoundationDeadline";
        
        /// original table name in database
        public const string DBTABLENAME = "p_foundation_deadline";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_deadline_key_i"}) + " FROM PUB_p_foundation_deadline") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationDeadlineTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationDeadlineTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationDeadlineTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationDeadlineTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFoundationDeadlineTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationDeadlineKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_deadline_key_i"}) + " FROM PUB_p_foundation_deadline WHERE p_foundation_partner_key_n = ? AND p_founda" +
                    "tion_deadline_key_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationDeadlineTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationDeadlineKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFoundationPartnerKey, AFoundationDeadlineKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationDeadlineTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationDeadlineTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFoundationPartnerKey, AFoundationDeadlineKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationDeadlineTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationDeadlineKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFoundationDeadlineTable AData, Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFoundationPartnerKey, AFoundationDeadlineKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFoundationDeadlineRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_deadline_key_i"}) + " FROM PUB_p_foundation_deadline") 
                            + GenerateWhereClause(PFoundationDeadlineTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationDeadlineTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationDeadlineRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFoundationDeadlineRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationDeadlineTable AData, PFoundationDeadlineRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationDeadlineTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationDeadlineTable AData, PFoundationDeadlineRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationDeadlineTable AData, PFoundationDeadlineRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFoundationDeadlineTable AData, PFoundationDeadlineRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_deadline", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationDeadlineKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_deadline WHERE p_foundation_partner_key_n =" +
                        " ? AND p_foundation_deadline_key_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFoundationDeadlineRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_deadline" + GenerateWhereClause(PFoundationDeadlineTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_deadline_key_i"}) + " FROM PUB_p_foundation_deadline WHERE p_foundation_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFoundationDeadlineTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationDeadlineTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationDeadlineTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundation(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationDeadlineTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundation(out PFoundationDeadlineTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundation(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet ADataSet, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_foundation_deadline", AFieldList, new string[] {
                            "p_foundation_partner_key_n",
                            "p_foundation_deadline_key_i"}) + " FROM PUB_p_foundation_deadline, PUB_p_foundation WHERE p_foundation_deadline.p_f" +
                    "oundation_partner_key_n = p_foundation.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFoundationDeadlineTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(DataSet AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationDeadlineTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFoundationDeadlineTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFoundationTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationDeadlineTable AData, PFoundationRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationDeadlineTable AData, PFoundationRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFoundationTemplate(out PFoundationDeadlineTable AData, PFoundationRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFoundationTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFoundation(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_foundation_deadline WHERE p_foundation_partner_key_n =" +
                        " ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFoundationTemplate(PFoundationRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_foundation_deadline, PUB_p_foundation WHERE p_foundati" +
                        "on_deadline.p_foundation_partner_key_n = p_foundation.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_foundation", PFoundationTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFoundationTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFoundationPartnerKey, Int32 AFoundationDeadlineKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFoundationPartnerKey));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[1].Value = ((object)(AFoundationDeadlineKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_foundation_deadline WHERE p_foundation_partner_key_n = ? AND p_" +
                    "foundation_deadline_key_i = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFoundationDeadlineRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_foundation_deadline" + GenerateWhereClause(PFoundationDeadlineTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFoundationDeadlineTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_foundation_deadline", PFoundationDeadlineTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_foundation_deadline", PFoundationDeadlineTable.GetColumnStringList(), PFoundationDeadlineTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_foundation_deadline", PFoundationDeadlineTable.GetColumnStringList(), PFoundationDeadlineTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFoundationDeadline", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Store information about the physical location of a file linked into Petra
    public class PFileInfoAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PFileInfo";
        
        /// original table name in database
        public const string DBTABLENAME = "p_file_info";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info") 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFileInfoTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PFileInfoTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PFileInfoTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info WHERE p_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFileInfoTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFileInfoTable AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PFileInfoTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info") 
                            + GenerateWhereClause(PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFileInfoTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFileInfoTable AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFileInfoTable AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PFileInfoTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_file_info", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_file_info WHERE p_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_file_info" + GenerateWhereClause(PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFileInfoTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFileInfoTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PFileInfoTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_file_info", AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info, PUB_p_partner WHERE p_file_info.p_partner_key_n = p_partne" +
                    "r.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFileInfoTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFileInfoTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFileInfoTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PFileInfoTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_file_info WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_file_info, PUB_p_partner WHERE p_file_info.p_partner_k" +
                        "ey_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaSVolume(DataSet ADataSet, String AName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 160);
            ParametersArray[0].Value = ((object)(AName));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info WHERE s_volume_name_c = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSVolume(DataSet AData, String AName, TDBTransaction ATransaction)
        {
            LoadViaSVolume(AData, AName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolume(DataSet AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolume(AData, AName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolume(out PFileInfoTable AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSVolume(FillDataSet, AName, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSVolume(out PFileInfoTable AData, String AName, TDBTransaction ATransaction)
        {
            LoadViaSVolume(out AData, AName, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolume(out PFileInfoTable AData, String AName, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolume(out AData, AName, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(DataSet ADataSet, SVolumeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_file_info", AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info, PUB_s_volume WHERE p_file_info.s_volume_name_c = s_volume." +
                    "s_name_c") 
                            + GenerateWhereClauseLong("PUB_s_volume", SVolumeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(DataSet AData, SVolumeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSVolumeTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(DataSet AData, SVolumeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumeTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(out PFileInfoTable AData, SVolumeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSVolumeTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(out PFileInfoTable AData, SVolumeRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSVolumeTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(out PFileInfoTable AData, SVolumeRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumeTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSVolumeTemplate(out PFileInfoTable AData, SVolumeRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSVolumeTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaSVolume(String AName, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 160);
            ParametersArray[0].Value = ((object)(AName));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_file_info WHERE s_volume_name_c = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSVolumeTemplate(SVolumeRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_file_info, PUB_s_volume WHERE p_file_info.s_volume_nam" +
                        "e_c = s_volume.s_name_c" + GenerateWhereClauseLong("PUB_s_volume", SVolumeTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SVolumeTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated LoadViaLinkTable
        public static void LoadViaSGroup(DataSet ADataSet, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClauseLong("PUB_p_file_info", AFieldList, new string[] {
                            "p_key_n"}) + " FROM PUB_p_file_info, PUB_s_group_file_info WHERE PUB_s_group_file_info.p_file_i" +
                    "nfo_key_n = PUB_p_file_info.p_key_n AND PUB_s_group_file_info.s_group_id_c = ? A" +
                    "ND PUB_s_group_file_info.s_group_unit_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(DataSet AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PFileInfoTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroup(FillDataSet, AGroupId, AUnitKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PFileInfoTable AData, String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroup(out PFileInfoTable AData, String AGroupId, Int64 AUnitKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroup(out AData, AGroupId, AUnitKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet ADataSet, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_file_info", AFieldList, new string[] {
                            "p_key_n"}) + @" FROM PUB_p_file_info, PUB_s_group_file_info, PUB_s_group WHERE PUB_s_group_file_info.p_file_info_key_n = PUB_p_file_info.p_key_n AND PUB_s_group_file_info.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_file_info.s_group_unit_key_n = PUB_s_group.s_unit_key_n") 
                            + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PFileInfoTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(DataSet AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PFileInfoTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PFileInfoTable();
            FillDataSet.Tables.Add(AData);
            LoadViaSGroupTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PFileInfoTable AData, SGroupRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PFileInfoTable AData, SGroupRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaSGroupTemplate(out PFileInfoTable AData, SGroupRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaSGroupTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated CountViaLinkTable
        public static int CountViaSGroup(String AGroupId, Int64 AUnitKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[2];
            ParametersArray[0] = new OdbcParameter("", OdbcType.VarChar, 20);
            ParametersArray[0].Value = ((object)(AGroupId));
            ParametersArray[1] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[1].Value = ((object)(AUnitKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_file_info, PUB_s_group_file_info WHERE PUB_s_group_fil" +
                        "e_info.p_file_info_key_n = PUB_p_file_info.p_key_n AND PUB_s_group_file_info.s_g" +
                        "roup_id_c = ? AND PUB_s_group_file_info.s_group_unit_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaSGroupTemplate(SGroupRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar((@"SELECT COUNT(*) FROM PUB_p_file_info, PUB_s_group_file_info, PUB_s_group WHERE PUB_s_group_file_info.p_file_info_key_n = PUB_p_file_info.p_key_n AND PUB_s_group_file_info.s_group_id_c = PUB_s_group.s_group_id_c AND PUB_s_group_file_info.s_group_unit_key_n = PUB_s_group.s_unit_key_n" + GenerateWhereClauseLong("PUB_s_group", SGroupTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, SGroupTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_file_info WHERE p_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_file_info" + GenerateWhereClause(PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PFileInfoTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        ((PFileInfoRow)(TheRow)).Key = DBAccess.GDBAccessObj.GetNextSequenceValue("seq_file_info", ATransaction);
                        TTypedDataAccess.InsertRow("p_file_info", PFileInfoTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_file_info", PFileInfoTable.GetColumnStringList(), PFileInfoTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_file_info", PFileInfoTable.GetColumnStringList(), PFileInfoTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PFileInfo", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Link file with a partner
    public class PPartnerFileAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerFile";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_file";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFileTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFileInfoKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFileTable AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file") 
                            + GenerateWhereClause(PPartnerFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFileTable AData, PPartnerFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFileTable AData, PPartnerFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFileTable AData, PPartnerFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerFileTable AData, PPartnerFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_file", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_file" + GenerateWhereClause(PPartnerFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFileTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file, PUB_p_partner WHERE p_partner_file.p_partner_key_n = p_" +
                    "partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFileTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFileTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFileTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerFileTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_file WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_file, PUB_p_partner WHERE p_partner_file.p_par" +
                        "tner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet ADataSet, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfo(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerFileTable AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet ADataSet, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_file, PUB_p_file_info WHERE p_partner_file.p_file_info_key_n " +
                    "= p_file_info.p_key_n") 
                            + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfoTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerFileTable AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerFileTable AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFileInfo(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFileInfoTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_file, PUB_p_file_info WHERE p_partner_file.p_f" +
                        "ile_info_key_n = p_file_info.p_key_n" + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFileInfoTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_file" + GenerateWhereClause(PPartnerFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerFileTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_file", PPartnerFileTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_file", PPartnerFileTable.GetColumnStringList(), PPartnerFileTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_file", PPartnerFileTable.GetColumnStringList(), PPartnerFileTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerFile", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Link file with a person
    public class PmPersonFileAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PmPersonFile";
        
        /// original table name in database
        public const string DBTABLENAME = "pm_person_file";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file") 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PmPersonFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PmPersonFileTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PmPersonFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PmPersonFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFileInfoKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PmPersonFileTable AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PmPersonFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PmPersonFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file") 
                            + GenerateWhereClause(PmPersonFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PmPersonFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PmPersonFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PmPersonFileTable AData, PmPersonFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PmPersonFileTable AData, PmPersonFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PmPersonFileTable AData, PmPersonFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PmPersonFileTable AData, PmPersonFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pm_person_file", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pm_person_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PmPersonFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_pm_person_file" + GenerateWhereClause(PmPersonFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPerson(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPerson(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPerson(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPerson(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PmPersonFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPerson(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PmPersonFileTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPerson(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPerson(out PmPersonFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPerson(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet ADataSet, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_pm_person_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file, PUB_p_person WHERE pm_person_file.p_partner_key_n = p_p" +
                    "erson.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_person", PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(DataSet AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PmPersonFileTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPersonTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PmPersonFileTable AData, PPersonRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PmPersonFileTable AData, PPersonRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPersonTemplate(out PmPersonFileTable AData, PPersonRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPersonTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPerson(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pm_person_file WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPersonTemplate(PPersonRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_pm_person_file, PUB_p_person WHERE pm_person_file.p_part" +
                        "ner_key_n = p_person.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_person", PPersonTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPersonTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet ADataSet, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PmPersonFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfo(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PmPersonFileTable AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PmPersonFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet ADataSet, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_pm_person_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_pm_person_file, PUB_p_file_info WHERE pm_person_file.p_file_info_key_n " +
                    "= p_file_info.p_key_n") 
                            + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PmPersonFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PmPersonFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PmPersonFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfoTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PmPersonFileTable AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PmPersonFileTable AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PmPersonFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFileInfo(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_pm_person_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFileInfoTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_pm_person_file, PUB_p_file_info WHERE pm_person_file.p_f" +
                        "ile_info_key_n = p_file_info.p_key_n" + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFileInfoTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_pm_person_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PmPersonFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_pm_person_file" + GenerateWhereClause(PmPersonFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PmPersonFileTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("pm_person_file", PmPersonFileTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("pm_person_file", PmPersonFileTable.GetColumnStringList(), PmPersonFileTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("pm_person_file", PmPersonFileTable.GetColumnStringList(), PmPersonFileTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PmPersonFile", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
    
    /// Link file with a partner contact
    public class PPartnerContactFileAccess : TTypedDataAccess
    {
        
        /// CamelCase version of table name
        public const string DATATABLENAME = "PPartnerContactFile";
        
        /// original table name in database
        public const string DBTABLENAME = "p_partner_contact_file";
        
        /// this method is called by all overloads
        public static void LoadAll(DataSet ADataSet, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, TDBTransaction ATransaction)
        {
            LoadAll(AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(DataSet AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerContactFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadAll(FillDataSet, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerContactFileTable AData, TDBTransaction ATransaction)
        {
            LoadAll(out AData, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadAll(out PPartnerContactFileTable AData, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadAll(out AData, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadByPrimaryKey(DataSet ADataSet, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(DataSet AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerContactFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadByPrimaryKey(FillDataSet, AFileInfoKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerContactFileTable AData, Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadByPrimaryKey(out PPartnerContactFileTable AData, Int64 AFileInfoKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadByPrimaryKey(out AData, AFileInfoKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static void LoadUsingTemplate(DataSet ADataSet, PPartnerContactFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file") 
                            + GenerateWhereClause(PPartnerContactFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerContactFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(DataSet AData, PPartnerContactFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerContactFileTable AData, PPartnerContactFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadUsingTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerContactFileTable AData, PPartnerContactFileRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerContactFileTable AData, PPartnerContactFileRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadUsingTemplate(out PPartnerContactFileTable AData, PPartnerContactFileRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadUsingTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// this method is called by all overloads
        public static int CountAll(TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_contact_file", ATransaction, false));
        }
        
        /// this method is called by all overloads
        public static int CountByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_contact_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// this method is called by all overloads
        public static int CountUsingTemplate(PPartnerContactFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_contact_file" + GenerateWhereClause(PPartnerContactFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow)));
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet ADataSet, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file WHERE p_partner_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(DataSet AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerContactFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartner(FillDataSet, APartnerKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerContactFileTable AData, Int64 APartnerKey, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartner(out PPartnerContactFileTable AData, Int64 APartnerKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartner(out AData, APartnerKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet ADataSet, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_contact_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file, PUB_p_partner WHERE p_partner_contact_file.p_pa" +
                    "rtner_key_n = p_partner.p_partner_key_n") 
                            + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(DataSet AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerContactFileTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerContactFileTable AData, PPartnerRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerContactFileTable AData, PPartnerRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerTemplate(out PPartnerContactFileTable AData, PPartnerRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartner(Int64 APartnerKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(APartnerKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_contact_file WHERE p_partner_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerTemplate(PPartnerRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_contact_file, PUB_p_partner WHERE p_partner_co" +
                        "ntact_file.p_partner_key_n = p_partner.p_partner_key_n" + GenerateWhereClauseLong("PUB_p_partner", PPartnerTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet ADataSet, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file WHERE p_file_info_key_n = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(DataSet AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerContactFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfo(FillDataSet, AKey, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerContactFileTable AData, Int64 AKey, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfo(out PPartnerContactFileTable AData, Int64 AKey, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfo(out AData, AKey, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet ADataSet, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_contact_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file, PUB_p_file_info WHERE p_partner_contact_file.p_" +
                    "file_info_key_n = p_file_info.p_key_n") 
                            + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(DataSet AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerContactFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPFileInfoTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerContactFileTable AData, PFileInfoRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerContactFileTable AData, PFileInfoRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPFileInfoTemplate(out PPartnerContactFileTable AData, PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPFileInfoTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPFileInfo(Int64 AKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AKey));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_contact_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPFileInfoTemplate(PFileInfoRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_contact_file, PUB_p_file_info WHERE p_partner_" +
                        "contact_file.p_file_info_key_n = p_file_info.p_key_n" + GenerateWhereClauseLong("PUB_p_file_info", PFileInfoTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PFileInfoTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet ADataSet, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, ((GenerateSelectClause(AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file WHERE p_contact_id_i = ?") 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, ParametersArray, AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(DataSet AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerContactFileTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContact(FillDataSet, AContactId, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerContactFileTable AData, Int32 AContactId, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContact(out PPartnerContactFileTable AData, Int32 AContactId, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContact(out AData, AContactId, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet ADataSet, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            ADataSet = DBAccess.GDBAccessObj.Select(ADataSet, (((GenerateSelectClauseLong("PUB_p_partner_contact_file", AFieldList, new string[] {
                            "p_file_info_key_n"}) + " FROM PUB_p_partner_contact_file, PUB_p_partner_contact WHERE p_partner_contact_f" +
                    "ile.p_contact_id_i = p_partner_contact.p_contact_id_i") 
                            + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)) 
                            + GenerateOrderByClause(AOrderBy)), PPartnerContactFileTable.GetTableName(), ATransaction, GetParametersForWhereClause(ATemplateRow), AStartRecord, AMaxRecords);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(DataSet AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerContactFileTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction, StringCollection AOrderBy, int AStartRecord, int AMaxRecords)
        {
            DataSet FillDataSet = new DataSet();
            AData = new PPartnerContactFileTable();
            FillDataSet.Tables.Add(AData);
            LoadViaPPartnerContactTemplate(FillDataSet, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, AOrderBy, AStartRecord, AMaxRecords);
            FillDataSet.Tables.Remove(AData);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerContactFileTable AData, PPartnerContactRow ATemplateRow, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, null, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerContactFileTable AData, PPartnerContactRow ATemplateRow, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, null, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static void LoadViaPPartnerContactTemplate(out PPartnerContactFileTable AData, PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, StringCollection AFieldList, TDBTransaction ATransaction)
        {
            LoadViaPPartnerContactTemplate(out AData, ATemplateRow, ATemplateOperators, AFieldList, ATransaction, null, 0, 0);
        }
        
        /// auto generated
        public static int CountViaPPartnerContact(Int32 AContactId, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Int);
            ParametersArray[0].Value = ((object)(AContactId));
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar("SELECT COUNT(*) FROM PUB_p_partner_contact_file WHERE p_contact_id_i = ?", ATransaction, false, ParametersArray));
        }
        
        /// auto generated
        public static int CountViaPPartnerContactTemplate(PPartnerContactRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            return Convert.ToInt32(DBAccess.GDBAccessObj.ExecuteScalar(("SELECT COUNT(*) FROM PUB_p_partner_contact_file, PUB_p_partner_contact WHERE p_pa" +
                        "rtner_contact_file.p_contact_id_i = p_partner_contact.p_contact_id_i" + GenerateWhereClauseLong("PUB_p_partner_contact", PPartnerContactTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow, PPartnerContactTable.GetPrimKeyColumnOrdList())));
        }
        
        /// auto generated
        public static void DeleteByPrimaryKey(Int64 AFileInfoKey, TDBTransaction ATransaction)
        {
            OdbcParameter[] ParametersArray = new OdbcParameter[1];
            ParametersArray[0] = new OdbcParameter("", OdbcType.Decimal, 10);
            ParametersArray[0].Value = ((object)(AFileInfoKey));
            DBAccess.GDBAccessObj.ExecuteNonQuery("DELETE FROM PUB_p_partner_contact_file WHERE p_file_info_key_n = ?", ATransaction, false, ParametersArray);
        }
        
        /// auto generated
        public static void DeleteUsingTemplate(PPartnerContactFileRow ATemplateRow, StringCollection ATemplateOperators, TDBTransaction ATransaction)
        {
            DBAccess.GDBAccessObj.ExecuteNonQuery(("DELETE FROM PUB_p_partner_contact_file" + GenerateWhereClause(PPartnerContactFileTable.GetColumnStringList(), ATemplateRow, ATemplateOperators)), ATransaction, false, GetParametersForWhereClause(ATemplateRow));
        }
        
        /// auto generated
        public static bool SubmitChanges(PPartnerContactFileTable ATable, TDBTransaction ATransaction, out TVerificationResultCollection AVerificationResult)
        {
            bool ResultValue = true;
            bool ExceptionReported = false;
            DataRow TheRow = null;
            AVerificationResult = new TVerificationResultCollection();
            for (RowCount = 0; (RowCount != ATable.Rows.Count); RowCount = (RowCount + 1))
            {
                TheRow = ATable[RowCount];
                try
                {
                    if ((TheRow.RowState == DataRowState.Added))
                    {
                        TTypedDataAccess.InsertRow("p_partner_contact_file", PPartnerContactFileTable.GetColumnStringList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Modified))
                    {
                        TTypedDataAccess.UpdateRow("p_partner_contact_file", PPartnerContactFileTable.GetColumnStringList(), PPartnerContactFileTable.GetPrimKeyColumnOrdList(), ref TheRow, ATransaction, UserInfo.GUserInfo.UserID);
                    }
                    if ((TheRow.RowState == DataRowState.Deleted))
                    {
                        TTypedDataAccess.DeleteRow("p_partner_contact_file", PPartnerContactFileTable.GetColumnStringList(), PPartnerContactFileTable.GetPrimKeyColumnOrdList(), TheRow, ATransaction);
                    }
                }
                catch (OdbcException ex)
                {
                    ResultValue = false;
                    ExceptionReported = false;
                    if ((ExceptionReported == false))
                    {
                        AVerificationResult.Add(new TVerificationResult("[ODBC]", ex.Errors[0].Message, "ODBC error for table PPartnerContactFile", ex.Errors[0].NativeError.ToString(), TResultSeverity.Resv_Critical));
                    }
                }
            }
            return ResultValue;
        }
    }
}
