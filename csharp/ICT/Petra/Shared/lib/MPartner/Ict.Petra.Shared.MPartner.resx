<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="partner.png" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ucy5xuWTfAAAAABJRU5ErkJggg==
</value>
  </data>
</root>