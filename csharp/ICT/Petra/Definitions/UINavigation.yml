OpenPetra:
    SearchBoxes:
        Partner:
            Label: Search Partner
        Transaction:
            Label: Search Transaction
            Comment: Search by Reference, or Narrative
        Batch:
            Label: Search Batch
            Comment: Search by Reference, or Batch Number
        Report:
            Label: Search Report
            Comment: Search for Report name, or saved report settings
        Donor:
            Label: Search Donor
            Comment: Search for donor by name, bank account, or partner key
        Recipient:
            Label: Search Recipient
            Comment: Search for recipient (Worker or Project) by name, country, or partner key
        Task:
            Label: Search for Task
    MainMenu:
        # Department
        Partner: {Label=Pa&rtner, PermissionsRequired=PTNRUSER;PERSONNEL;FINANCE-1, Icon=partner.ico}  #Permissions are OR'ed
            # Module
            PartnerMain: {SkipThisLevel=true}
                # Sub Module
                PartnerCreateEdit: {Label=Create/Edit, Namespace=Ict.Petra.Client.MPartner.Gui, PermissionsRequired=PTNRUSER, DontShowNestedTasksAsLinks=true}
                    SearchBoxes: [Partner]
                    MaintainExistingPartners: {Label=Maintain Existing Partners}
                        #ChangeAddress:
                        #MergePartners:
                        FindPartner: {Label=Find a Partner, ActionClick=TPartnerMain.FindPartner, Description=Search for and work with Partners, Singleton=true}
                        WorkWithLastPartner: {Label=Work with Last Partner, Description=Open last Partner worked with, ActionClick=TPartnerMain.OpenLastUsedPartnerEditScreen}
                        DeletePartner: {Label=Delete Partner, Description=Delete a selected Partner, ActionClick=TPartnerMain.DeletePartnerRecord}
                    CreateNewPartner:
                        AddNewFamily: {ActionClick=TPartnerMain.NewPartner_Family, Label=Add New Family, Description=Create a new Partner of Class FAMILY}
                        AddNewPerson: {ActionClick=TPartnerMain.NewPartner_Person, Label=Add New Person, Description=Create a new Partner of Class PERSON}
                        AddNewOrganisation: {ActionClick=TPartnerMain.NewPartner_Organisation, Label=Add New Organisation, Description=Create a new Partner of Class ORGANISATION}
                        AddNewChurch: {ActionClick=TPartnerMain.NewPartner_Church, Label=Add New Church, Description=Create a new Partner of Class CHURCH}
                        AddNewBank: {ActionClick=TPartnerMain.NewPartner_Bank, Label=Add New Bank, Description=Create a new Partner of Class BANK}
                        AddNewVenue: {ActionClick=TPartnerMain.NewPartner_Venue, Label=Add New Venue, Description=Create a new Partner of Class VENUE}
                        AddNewUnit: {ActionClick=TPartnerMain.NewPartner_Unit, Label=Add New Unit, Description=Create a new Partner of Class UNIT}
                        ImportPartners: {Label=Import Partners, Description=Import Partners from a file, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionOpenScreen=TFrmPartnerImport}
#                        AddNewFamilyShepherd: {ActionOpenScreen=TShepherdFamilyForm}
#                        AddNewChurchShepherd: {ActionOpenScreen=TShepherdChurchForm}
                PartnerExtracts: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, PermissionsRequired=PTNRUSER, DontShowNestedTasksAsLinks=true, Label=Extracts}
                    MaintainAndUpdateExtracts: {Label=Maintain and Update Extracts}
                        ExtractMasterList: {Label=Extract Master List, Description=Access and Maintain/Update Extracts here, ActionOpenScreen=TFrmExtractMaster, Singleton=true}
                    GeneratePartnerExtracts: {Label=Generate Partner Extract}
                        GeneralExtract: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=General Extract, Description=Create Extract of Partners using selected criteria, ActionClick=TPartnerExtractsMain.PartnerByGeneralCriteriaExtract}
                        ManualExtract: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Manual Extract, Description=Create Extract of manually selected Partners, ActionClick=TPartnerExtractsMain.PartnerNewManualExtract}
                        #Partner by City extract commented out here and can probably completely be removed as it is in cluded in the General Extract
                        #PartnerByCity: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Partner by City, Description=Create Extract of Partners in a selected City, ActionClick=TPartnerExtractsMain.PartnerByCityExtract}
                        PartnerBySubscription: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Partner by Subscription, Description=Create Extract of Partners with selected Subscriptions, ActionClick=TPartnerExtractsMain.PartnerBySubscriptionExtract}
                        PartnerBySpecialType: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Partner by Special Type, Description=Create Extract of Partners with selected Special Types, ActionClick=TPartnerExtractsMain.PartnerBySpecialTypeExtract}
                        PartnerByRelationship: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Partner by Relationship, Description=Create Extract of Partners with selected Relationships, ActionClick=TPartnerExtractsMain.PartnerByRelationshipExtract}
                        FamilyMembersExtract: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Person Extract from Families, Description=Create Extract of Persons for selected Families, ActionClick=TPartnerExtractsMain.FamilyMembersExtract}
                        FamilyExtractForPersons: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Family Extract from Persons, Description=Create Extract of Families for selected Persons, ActionClick=TPartnerExtractsMain.FamilyExtractForPersons}
                        PartnerByContactLog: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, Label=Partner by Contact Log, Description=Create Extract of Partners with selected Contact Log details, ActionClick=TPartnerExtractsMain.PartnerByContactLogExtract}
                        GenerateExtractFromExternalSource: {Label=Extract from External Source, Description=Create Extract from the clipboard or a file, ActionOpenScreen=TFrmImportExtractDialog, Singleton=true}
                    GeneratePersonnelExtracts: {Label=Generate Personnel Extract}
                        PartnerByEvent: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Event, Description=Create Extract of Partners with specific application status at selected event, ActionClick=TPersonnelMain.PartnerByEventExtract}
                        PartnerByEventRole: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Event Role, Description=Create Extract of Partners with specific role at selected event, ActionClick=TPersonnelMain.PartnerByEventRoleExtract}
                        PartnerByCommitment: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Commitment, Description=Create Extract of Partners with selected Commitment Status, ActionClick=TPersonnelMain.PartnerByCommitmentExtract}
                        PartnerByField: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Field, Description=Create Extract of Partners received/sent by selected Fields, ActionClick=TPersonnelMain.PartnerByFieldExtract}
                    GenerateFinanceExtracts: {Label=Generate Finance Extract}
                        RecipientByField: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Recipient by Field, Description=Create Extract of Recipients in selected Fields, ActionClick=TFinanceMain.RecipientByFieldExtractCrossLedger}
                        DonorByField: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Field, Description=Create Extract of Donors to selected Fields, ActionClick=TFinanceMain.DonorByFieldExtractCrossLedger}
                        DonorByMotivation: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Motivation, Description=Create Extract of Donors with selected Motivation Groups/Details, ActionClick=TFinanceMain.DonorByMotivationExtractCrossLedger}
                        DonorByAmount: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Amount, Description=Create Extract of Donors of specified amounts, ActionClick=TFinanceMain.DonorByAmountExtractCrossLedger}
                        DonorByMiscellaneous: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Miscellaneous, Description=Create Extract of Donors according to selected criterea, ActionClick=TFinanceMain.DonorByMiscellaneousExtractCrossLedger}
#                    Import: {Label=Import}
                PartnerReports: {Namespace=Ict.Petra.Client.MReporting.Gui.MPartner, PermissionsRequired=PTNRUSER, DontShowNestedTasksAsLinks=true, Label=Reports}  # Icon=Print.ico
                    PartnerReports:
                        PrintPartner: {Description=Create Report of specific Partner Information for selected Partners, ActionOpenScreen=TFrmPrintPartner}
                        PartnerByCity: {Description=Create Report of Partners in a selected City, ActionOpenScreen=TFrmPartnerByCity}
                        RelationshipReport: {Description=Create Report of Partners with selected Relationships, ActionOpenScreen=TFrmPartnerByRelationship}
                        PartnerBySpecialType: {Description=Create Report of Partners with selected Special Types, ActionOpenScreen=TFrmPartnerBySpecialType}
                        PartnerBySubscription: {Description=Create Report of Partners with selected Subscriptions, ActionOpenScreen=TFrmPartnerBySubscription}
                        PartnerAddress: {Label=Brief Address Report, Description=Create Report of selected Partners and their addresses, ActionOpenScreen=TFrmBriefAddressReport}
                        BriefFoundation: {Label=Brief Foundation Report, Description=Create Report of Contact Info for selected Foundations, ActionOpenScreen=TFrmBriefFoundationReport}
                        SupportingChurches: {Label=Supporting Churches Report, Description=Create Report of selected Partners and their Supporting Churches, ActionOpenScreen=TFrmSupportingChurchesReport}
                        ValidBankAccount: {Label=Valid Bank Account Report, Description=Create Report of selected Partners and their Bank Account details, ActionOpenScreen=TFrmValidBankAccountReport}
                        PublicationStatisticalReport: {Label=Publication Statistical Report, Description=Create Report of Statistical Data for selected Publications, ActionOpenScreen=TFrmPublicationStatisticalReport}
                        BulkAddressReport: {Label=Bulk Address Report, Description=Create Report of selected Partners who have Bulk Subscriptions, ActionOpenScreen=TFrmBulkAddressReport}
                        ContactLogsReport: {Label=Contact Logs Report, Description=Create Report of Contact Logs for selected Partners, ActionOpenScreen=TFrmPartnerContactReport}
                        SubscriptionReport: {Label=Subscription Report, Description=Create Report of selected Partners and their Subscriptions, ActionOpenScreen=TFrmSubscriptionReport}
                        LocalPartnerDataReport: {Label=Local Partner Data, Description=Create Report of Local Partner Data for selected Partners, ActionOpenScreen=TFrmLocalPartnerDataReport}
           
                PartnerImportExport: {Label=Import/Export, PermissionsRequired=PTNRUSER;PERSONNEL;FINANCE-1, DontShowNestedTasksAsLinks=true}  #Permissions are OR'ed
                    PartnerImport: {Label=Import}
                        ImportPartners: {Label=Import Partners, Description=Import Partners from a file, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionOpenScreen=TFrmPartnerImport}  
                        #The item below is only displayed when System Setting GovIdEnabled is TRUE.  In that case the --- is replaced by GovIdLabel value
                        ImportPartnerTaxGovIds: {Label=Import Partner Tax Code, Description=Import Partner --- codes from a file, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionOpenScreen=TFrmImportPartnerTaxCodesDialog}  
                    PartnerExport: {Label=Export}
                         ExportSinglePartnerToPetra: {Label=Export Single Partner to Petra, Description=Export a single Partner for import into a Petra system, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionClick=TPartnerMain.ExportSinglePartnerToPetra}
                         ExportSinglePartnerToOpenpetra: {Label=Export Single Partner to OpenPetra, Description=Export a single Partner for import into an OpenPetra system, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionClick=TPartnerMain.ExportSinglePartnerToOpenPetra}
                         ExportPartnersFromExtractToPetra: {Label=Export from Extract to Petra, Description=Export Partners from an extract for import into a Petra system, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionClick=TPartnerMain.ExportPartnersInExtractToPetra}
                         ExportPartnersFromExtractToOpenpetra: {Label=Export from Extract to OpenPetra, Description=Export Partners from an extract for import into an OpenPetra system, PermissionsRequired=PTNRUSER, Namespace=Ict.Petra.Client.MPartner.Gui, ActionClick=TPartnerMain.ExportPartnersInExtractToOpenPetra}
#                        ExportPartners: {ActionClick=TPartnerMain.ExportPartners, Description=Create a file for importing into another OpenPetra database}
                #MailingSubscriptions: {Label=Mailing&&Subscriptions, Icon=mail.ico}
                PartnerAdministration: {Label=Administration, Namespace=Ict.Petra.Client.MPartner.Gui, PermissionsRequired=PTNRUSER, DontShowNestedTasksAsLinks=true}
                    PartnerAddresses: {Label=Addresses}
                        DuplicateAddressCheck: {ActionOpenScreen=TFrmDuplicateAddressCheck, Label=Duplicate Address Check, Description=Search addresses for possible duplicates}
                    PartnerContactLogs: {Label=Contact Logs}
                        FindAndDeleteContactLogs: {Label=Find and Delete Contact Logs, ActionOpenScreen=TFrmPartnerContacts, Description=Maintain Contact Logs of Partners}
                    MergePartners: {Label=Merge Partners}
                        MergePartners: {Label=Merge Partners, Description=Merge two partner records together, ActionOpenScreen=TFrmMergePartnersDialog}
                    Subscriptions: {Label=Subscriptions}
                        CancelSubscriptions: {ActionClick=TPartnerMain.CancelExpiredSubscriptions, Label=Cancel Subscriptions, Description=Cancel all expired Subscriptions}
                PartnerSetup: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, PermissionsRequired=PTNRUSER, DontShowNestedTasksAsLinks=true, Label=Setup}
                    Address:  
                        AddresseeTypes: {Label=Addressee Types, Description=Maintain Addressee Types, ActionOpenScreen=TFrmAddresseeTypeSetup}
                        LocationTypes: {Label=Location Types, Description=Maintain Location Types, ActionOpenScreen=TFrmLocationTypeSetup}
                        InternationalPostalTypes: {Namespace=Ict.Petra.Client.MCommon.Gui.Setup, Label=International Postal Types, Description=Maintain International Postal Types, ActionOpenScreen=TFrmInternationalPostalTypeSetup}
                        PostcodeRanges: {Label=Postcode Ranges, Description=Maintain Postcode Ranges, ActionOpenScreen=TFrmPostcodeRangeSetup}
                        PostcodeRegions: {Label=Postcode Regions, Description=Maintain Postcode Regions, ActionOpenScreen=TFrmPostcodeRegionSetup}
                    ContactLogs: {Label=Contact Logs}
                        ContactLogMethods: {Label=Contact Log Methods, Description=Maintain Contact Log Methods, ActionOpenScreen=TFrmContactMethodSetup}   
                        ContactLogAttributesAndDetails: {Label=Contact Log Attributes and Details, Description=Maintain Contact Log Attributes and Details, ActionOpenScreen=TFrmContactAttributeSetup}     
                    PartnerFormLetterSetup: {Label=Form Letter Setup}
                        AddressLayoutCodes: {Label=Address Layout Codes, Description=Maintain Address Layout Codes, Namespace=Ict.Petra.Client.MPartner.Gui.Setup, ActionOpenScreen=TFrmAddressLayoutCodeSetup, Context=Partner}
                        AddressLayouts: {Label=Address Layouts, Description=Maintain Address Layouts, Namespace=Ict.Petra.Client.MPartner.Gui.Setup, ActionOpenScreen=TFrmAddressLayoutSetup, Context=Partner}
                        LetterFormalities: {Label=Letter Formalities, Description=Maintain Letter Formalities, Namespace=Ict.Petra.Client.MPartner.Gui.Setup, ActionOpenScreen=TFrmFormalitySetup, Context=Partner}
                    PartnerGeneral: {Label=General}
                        Country:       {Namespace=Ict.Petra.Client.MCommon.Gui.Setup, Label=Countries, Description=Maintain Countries, ActionOpenScreen=TFrmCountrySetup}              
                        Language:      {Namespace=Ict.Petra.Client.MCommon.Gui.Setup, Label=Language Codes, Description=Maintain Language Codes, ActionOpenScreen=TFrmLanguageCodeSetup}              
                        Frequency:     {Namespace=Ict.Petra.Client.MCommon.Gui.Setup, Label=Frequencies, Description=Maintain Receipting/Publication Frequencies, ActionOpenScreen=TFrmFrequencySetup}              
                        PartnerStatus: {Label=Partner Statuses, Description=Maintain Partner Statuses, ActionOpenScreen=TFrmPartnerStatusSetup}
                        Acquisition:   {Label=Acquisition Codes, Description=Maintain Acquisition Codes, ActionOpenScreen=TFrmAcquisitionCodeSetup}                  
                        SpecialTypes:  {Label=Special Types, Description=Maintain Special Types, ActionOpenScreen=TFrmPartnerTypeSetup}
                        Denomination:  {Label=Denomination Codes, Description=Maintain Denomination Codes, ActionOpenScreen=TFrmDenominationCodeSetup} 
                        Business:      {Label=Business Codes, Description=Maintain Business Codes, ActionOpenScreen=TFrmBusinessCodeSetup}
                        Occupation:    {Label=Occupation Codes, Description=Maintain Occupation Codes, ActionOpenScreen=TFrmOccupationCodeSetup}   
                        MaritalStatus: {Label=Marital Statuses, Description=Maintain Marital Statuses, ActionOpenScreen=TFrmMaritalStatusSetup}   
                        RelationshipCategory: {Label=Relationship Categories, Description=Maintain Relationship Categories, ActionOpenScreen=TFrmRelationCategorySetup}   
                        Relationship:  {Label=Relationships, Description=Maintain Relationships, ActionOpenScreen=TFrmRelationshipSetup} 
                        PartnerContactCategoriesAndTypes: {Label=Partner Contact Categories and Types, Description=Maintain Partner Contact Categories and Types, ActionOpenScreen=TFrmContactCategoriesAndTypesSetup}   
                        InterestCategory: {Label=Interest Categories, Description=Maintain Interest Categories, ActionOpenScreen=TFrmInterestCategorySetup}   
                        Interest: {Label=Partner Interests, Description=Maintain Partner Interests, ActionOpenScreen=TFrmInterestSetup} 
                    PartnerLocalData: {Label=Local Data}
                        LocalDataOptionListNames: {Label=Local Data Option List Names, Description=Maintain Local Data Option List names, ActionOpenScreen=TFrmLocalDataOptionListNameSetup, Context=Partner}
                        LocalDataOptions: {Label=Local Data Options, Description=Maintain Local Data Options, ActionOpenScreen=TFrmLocalDataOptionsSetup, Context=Partner}
                        LocalDataFields: {Label=Local Partner Data Fields, Description=Maintain Local Partner Data Fields, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalPartnerDataFieldSetup}
                        LocalDataFieldOrderBank: {Label=Field Order for Bank, Description=Maintain Field Order for Bank, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Bank}
                        LocalDataFieldOrderChurch: {Label=Field Order for Church, Description=Maintain Field Order for Church, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Church}
                        LocalDataFieldOrderFamily: {Label=Field Order for Family, Description=Maintain Field Order for Family, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Family}
                        LocalDataFieldOrderPerson: {Label=Field Order for Person, Description=Maintain Field Order for Person, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Person}
                        LocalDataFieldOrderOrganisation: {Label=Field Order for Organisation, Description=Maintain Field Order for Organisation, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Organisation}
                        LocalDataFieldOrderUnit: {Label=Field Order for Unit, Description=Maintain Field Order for Unit, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Unit}
                        LocalDataFieldOrderVenue: {Label=Field Order for Venue, Description=Maintain Field Order for Venue, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Venue}
                    PartnerMailing: {Label=Mailing}
                        PartnerMailings: {Label=Mailings, Description=Maintain Mailings, ActionOpenScreen=TFrmMailingSetup, RunAsModalDialog=false}   
                    Subscription: 
                        Publications: {Label=Publications, Description=Maintain Publications, ActionOpenScreen=TFrmPublicationSetup}
                        PublicationCosts: {Label=Publication Costs, Description=Maintain Publication Costs, ActionOpenScreen=TFrmPublicationCostSetup}
                        ReasonSubscriptionGiven: {Label=Reason Subscription Given List, Description=Maintain Reason Subscription Given List, ActionOpenScreen=TFrmReasonSubscriptionGivenSetup}   
                        ReasonSubscriptionCancelled: {Label=Reason Subscription Cancelled List, Description=Maintain Reason Subscription Cancelled List, ActionOpenScreen=TFrmReasonSubscriptionCancelledSetup} 
            #MoreFunctions:
                #SetupPartnerModule:
        # DependsOnLedger means that this department will be displayed for each available ledger, with the appropriate LedgerNumber
        Finance: {Icon=accounts.ico, Label=Finance, DependsOnLedger=true, Namespace=Ict.Petra.Client.MFinance.Gui, PermissionsRequired=FINANCE-1}
            Finance:
                GeneralLedger: {Namespace=Ict.Petra.Client.MFinance.Gui.GL, DontShowNestedTasksAsLinks=true}
                    SearchBoxes: [Transaction, Batch]
                    GLBatchMaintenance:
                        GLBatches: {Description:Enter and post General Ledger batches, ActionOpenScreen=TFrmGLBatch}
                        RecurringGLBatches: {Label=Recurring GL Batches, Description:Enter and submit recurring General Ledger batches, ActionOpenScreen=TFrmRecurringGLBatch}
                        ImportBatches: {Description: Import batch data from CSV file, Namespace=Ict.Petra.Client.MFinance.Gui, ActionClick=TFinanceMain.LoadGLBatchesFormForImport}
                        ExportBatches: {Description:Export to CSV file for use with Excel, ActionOpenScreen=TFrmGLBatchExport}
                        GLTransactionFind: {Description:Search for GL Transactions across all batches and journals, ActionOpenScreen=TFrmGLTransactionFindScreen}
                    General:
                        LedgerInfo: {Description: View general information about this ledger, Namespace=Ict.Petra.Client.MFinance.Gui.GL, ActionOpenScreen=TFrmGLInfo}
                        ForeignCurrencyAccountBalances: {Description:Display Foreign Currency Account Balances, Namespace=Ict.Petra.Client.MFinance.Gui.GL, ActionOpenScreen=TFrmForeignCurrencyAccountBalance}
                        #EnterTransactions:
                        #ImportTransactions:
                        #EditExistingTransactions:
                        #EditTransactionsInPreviouslyUsedBatch:
                        #PostBatch:
                        #FindTransaction:
                    ICHProcessing: {Namespace=Ict.Petra.Client.MFinance.Gui.ICH}
                        StewardshipCalculation: {Description=Calculate Income/Expenses/Fees for Period, ActionOpenScreen=TFrmStewardshipCalculation}
                        StewardshipReports: {Description=Email/Print HOSAs and ICH Reports for Period, ActionOpenScreen=TFrmStewardshipReports}
                        StewardshipForPeriodReport: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinance, Description=Reprint ICH Reports for selected Periods, ActionOpenScreen=TFrmStewardshipForPeriod}
                    PeriodEnd: {Namespace=Ict.Petra.Client.MFinance.Gui.GL}
                        MonthEnd: {Description:Close a month, Namespace=Ict.Petra.Client.MFinance.Gui.GL, ActionOpenScreen=TPeriodEndMonth}
                        YearEnd: {Description:Close a year, Namespace=Ict.Petra.Client.MFinance.Gui.GL, ActionOpenScreen=TPeriodEndYear}
                        ForeignCurrencyRevaluation: {Description:Runs a Foreign Currency Revaluation, Namespace=Ict.Petra.Client.MFinance.Gui.GL, ActionOpenScreen=TGLRevaluation}
                    Reports: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinance}  # Icon=Print.ico
                        AccountDetailReport: {Description=Create a Detailed Report of selected Accounts/Cost Centres, ActionOpenScreen=TFrmAccountDetail}
#                       AccountDetailWithAnalysisAttribute: {ActionOpenScreen=TFrmAnalysisAttribute}
                        TrialBalance: {Description=Create Report with Balances of selected Accounts/Cost Centres, ActionOpenScreen=TFrmTrialBalance}
                        HOSA: {Description=Home Office Statement of Accounts, ActionOpenScreen=TFrmHOSA}
                        SurplusDeficit: {Description=Create Report with Balances of selected Cost Centres, ActionOpenScreen=TFrmSurplusDeficit}
                        BalanceSheetStandard: {Label=Standard Balance Sheet, ActionOpenScreen=TFrmBalanceSheetStandard}
                        #BalanceSheetMultiLedger: {Label=Multi Ledger Balance Sheet, ActionOpenScreen=TFrmBalanceSheetMultiLedger}
                            #CurrentPeriod:
                            #EndOfLastYear:
                            #SpecifyParameters:
                            #RepeatLastReport:
                            #MyFancyBalanceSheetWithCoolGraph:
                        IncomeExpenseStatement: {Description=Create Report using selected Template, ActionOpenScreen=TFrmIncomeExpenseStmt}
                      # IncomeExpenseStatementMultiPeriod: {Label=Multi Period Statement, ActionOpenScreen=TFrmIncomeExpenseMultiPeriod}
                        #IncomeExpenseStatementMultiLedger: {Label=Multi Ledger Statement, ActionOpenScreen=TFrmIncomeExpenseMultiLedger}
                        AFO: {Description=Monthly report to be sent to Area Finance Officer, ActionOpenScreen=TFrmAFO}
                        ExecutiveSummary: {Description=Key financial information for the YTD, ActionOpenScreen=TFrmExecutiveSummary}
                GiftProcessing: {Namespace=Ict.Petra.Client.MFinance.Gui.Gift, DontShowNestedTasksAsLinks=true}
                    SearchBoxes: [Donor, Recipient]
                    GiftEntry:
                        GiftBatches: {Description=Manually enter and post Gift batches, ActionOpenScreen=TFrmGiftBatch}
                        RecurringGiftBatches: {Description=Manually enter Recurring Gift batches, ActionOpenScreen=TFrmRecurringGiftBatch}
                        #AddGifts:
                        #ImportGifts:
                        #EditExistingGifts:
                        #EditLastUnpostedGiftBatch:
                        #PostGiftBatch:
                        ExportGiftBatches: {Description=Export to CSV file for use with Excel,ActionOpenScreen= TFrmGiftBatchExport}
                        GiftDetailFind: {Description=Search for gifts across all batches, ActionOpenScreen=TGiftDetailFindScreen}
                    GiftReceipting:
                        PrintAnnualReceipts: {Description:Print the annual gift receipts, ActionOpenScreen=TFrmGiftReceiptPrinting}
                        DonorRecipientHistory: {Label=Donor/Recipient History, Description=Gift history for a Donor and/or Recipient, ActionOpenScreen=TFrmDonorRecipientHistory}
                        #PrintSingleReceipt:
                        ReceiptControl:{ActionOpenScreen=TFrmReceiptControl}
                    FinanceReports: {Label=Reports, Namespace=Ict.Petra.Client.MReporting.Gui.MFinance}  # Icon=Print.ico
                        RecipientGiftStatement: {Description=Create RGS using selected Report Type, ActionOpenScreen=TFrmRecipientGiftStatement}
                        DonorGiftStatement: {Description=Create DGS using specified criteria, ActionOpenScreen=TFrmDonorGiftStatement}
                        DonorGiftsToFieldsReport: {Description=Create Report of Donor Giving to selected Fields, ActionOpenScreen=TFrmDonorGiftsToFieldsReport}
                        FieldGiftTotalsReport: {Description=Monthly Totals of Gifts Processed for selected Fields, ActionOpenScreen=TFrmFieldGiftTotalsReport}
                        FieldLeaderGiftSummary: {Description=Summary of Donor Giving to selected Fields, ActionOpenScreen=TFrmFieldLeaderGiftSummary}
                        #FieldLeaderGiftSummary-2: {ActionOpenScreen=TFrmFieldLeaderGiftSummary_2}
                        TotalGiftsThroughField: {Description=Detailed/Summary Report of Total Gifts Processed for selected Years, ActionOpenScreen=TFrmTotalGiftsThroughField}
                        OneYearMonthlyGiving: {Description=Summary by month of Donor giving to selected Recipients, ActionOpenScreen=TFrmOneYearMonthlyGiving}
                        GiftBatchDetail: {Description=Reprint a Gift Batch Detail Report, ActionOpenScreen=TFrmGiftBatchDetail}
                        RecipientTaxDeductiblePercentages: {Description=Check Tax Deductible Percentages for selected Recipients, ActionOpenScreen=TFrmRecipientTaxDeductiblePercentages}
                        EsrInpaymentSlip: {Label=ESR Inpayment Slip, ActionOpenScreen=TFrmEsrInpaymentSlip}
                        MotivationResponse: {Description=Create Report based upon selected criteria, ActionOpenScreen=TFrmMotivationResponse}
                        RecipientGiftDestination: {Description=Check Recipient Field/Gift Destination Settings, ActionOpenScreen=TFrmGiftDestination}
                        TotalGivingForRecipients: {Label=Historic Donors per Recipient, Description=Detailed Report of Annual Giving to selected Recipients, ActionOpenScreen=TFrmTotalGivingForRecipients}
                        TotalForRecipients: {Label=Historic Totals per Recipient, Description=Summary Report of Annual Giving to selected Recipients, ActionOpenScreen=TFrmTotalForRecipients}
                    #Extracts: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts}
                        #ExtractMasterList: {Label=Extract Master List, ActionOpenScreen=TFrmExtractMaster}
                        #RecipientByField: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Recipient by Field, ActionClick=TFinanceMain.RecipientByFieldExtract}
                        #DonorByField: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Field, ActionClick=TFinanceMain.DonorByFieldExtract}
                        #DonorByMotivation: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Motivation, ActionClick=TFinanceMain.DonorByMotivationExtract}
                        #DonorByAmount: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Amount, ActionClick=TFinanceMain.DonorByAmountExtract}
                        #DonorByMiscellaneous: {Namespace=Ict.Petra.Client.MFinance.Gui, Label=Donor by Miscellaneous, ActionClick=TFinanceMain.DonorByMiscellaneousExtract}
                AccountsPayable: {Namespace=Ict.Petra.Client.MFinance.Gui.AP, DontShowNestedTasksAsLinks=true}
                    AccountsPayable: {Description=Manage suppliers and invoices, ActionOpenScreen=TFrmAPMain}
                        Suppliers: {Description=Manage suppliers and invoices, ActionOpenScreen=TFrmAPMain, InitialTab=Suppliers}
                        OutstandingInvoices: {Description=Manage payments, ActionOpenScreen=TFrmAPMain, InitialTab=Invoices}
                    APReports: {Label=Reports, Namespace=Ict.Petra.Client.MReporting.Gui.MFinance}  # Icon=Print.ico
                        DetailReport: {ActionOpenScreen=TFrmAP_AccountDetailReport}
                        AgedSupplierList: {ActionOpenScreen=TFrmAP_AgedSupplierList}
                        CurrentAccountsPayable: {Description="Invoices payable today, or on a specified date", ActionOpenScreen=TFrmAP_CurrentPayable}
                        PaymentReport: {Description=Report for a Payment or group of payments, ActionOpenScreen=TFrmAP_PaymentReport}
                        RemittanceAdvice: {Description=Reprint Payment advice sent to supplier, ActionOpenScreen=TFrmAP_RemittanceAdvice}
                Budgets: {Namespace=Ict.Petra.Client.MFinance.Gui.Budget, DontShowNestedTasksAsLinks=true}
                    General:
                        MaintainBudget: {Description=Enter/Import and maintain budgets, ActionOpenScreen=TFrmMaintainBudget}
                        AutoGenerateBudget: {Description=Auto-generate budgets, ActionOpenScreen=TFrmAutoGenerateBudgetDialog}
                        ConsolidateBudgets: {Description=Consolidate budgets, ActionClick=TConsolidateBudgets.ConsolidateBudgets}
                        ExportBudget: {Description=Export to CSV for use with Excel, ActionOpenScreen=TFrmExportBudget}
                    Reports: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinance}  # Icon=Print.ico
                        IncomeExpenseStatement: {ActionOpenScreen=TFrmIncomeExpenseStmt}
                      # IncomeExpenseStatementMultiPeriod: {Label=Multi Period Statement, ActionOpenScreen=TFrmIncomeExpenseMultiPeriod}
                        #IncomeExpenseStatementMultiLedger: {Label=Multi Ledger Statement, ActionOpenScreen=TFrmIncomeExpenseMultiLedger}
                #Reports:
                CalebExport: {Label=Caleb Export, PermissionsRequired=PTNRUSER;PERSONNEL;FINANCE-3, DontShowNestedTasksAsLinks=true} #Permissions are OR'ed
                        CalebExport: {Label=Caleb Export, Description=Export Partner/Personnel/Finance Data to Caleb, Namespace=Ict.Petra.Client.MSysMan.Gui, ActionOpenScreen=TFrmIntranetExportDialog}
                LedgerSetup:  {Namespace=Ict.Petra.Client.MFinance.Gui.Setup, DontShowNestedTasksAsLinks=true, Label=Ledger Setup}
                    AccountsPayable:
                        APSettings: {Description="Maintain Accounts Payable Settings", ActionOpenScreen=TFrmLedgerSettingsDialog, InitialTab=AP}
                    GeneralLedgerSetup:
                        LedgerSettings: {Description="Maintain General Ledger Settings", ActionOpenScreen=TFrmLedgerSettingsDialog}
                        ManageCostCentres: {Description=Maintain Cost Centres and modify their hierarchy, ActionOpenScreen=TFrmGLCostCentreHierarchy}
                        ManageAccounts: {Description=Maintain Accounts and modify their hierarchy, ActionOpenScreen=TFrmGLAccountHierarchy}
                        LinkCostCentresToPartners: {Description=Link or unlink Partners and Cost Centres, ActionOpenScreen=TFrmLinkPartnerCostCentreDialog}
                      # We shouldn't allow users to edit Cost Centre Types, but a non-OM application might want to...
                      # CostCentreTypes: {Description=Maintain Cost Centres Types, ActionOpenScreen=TFrmSetupCostCentreTypes}
                        AnalysisTypesAndValues: {Label=Analysis Types and Values, Description=Maintain Analysis Types and Values, ActionOpenScreen=TFrmSetupAnalysisTypes}
                    GiftReceipting: {Namespace=Ict.Petra.Client.MFinance.Gui.Setup}
                        MotivationGroup: {Description=Maintain Motivation Groups, ActionOpenScreen=Gift.TFrmMotivationGroupSetup}
                        MotivationDetails: {Description="Maintain Motivation Details to which donations can be assigned", ActionOpenScreen=Gift.TFrmGiftMotivationSetup}                        
                        AdminGrantsPayable: {Description=Maintain payable Administration Grants, ActionOpenScreen=TFrmSetupAdminGrantsPayable}
                        AdminGrantsReceivable: {Description=Maintain receivable Administration Grants, ActionOpenScreen=TFrmSetupAdminGrantsReceivable}
                        EsrDefaults: {Label=ESR Defaults, Description=Maintain Motivation Types for ESR Partner Keys, ActionOpenScreen=Gift.TFrmEsrDefaultsSetup}
                    Other:
                        Calendar: {Description="Maintain Accounting Periods", ActionOpenScreen=TFrmSetupAccountingPeriod}
                        FinanceModuleSubsystems: {Description="Enable/Disable Finance Module Subsystems", ActionOpenScreen=TFrmGLEnableSubsystems}
                        #ChangeNumberOfForwardingPeriods:
        FinanceSystem: {Icon=finance_setup.ico, Namespace=Ict.Petra.Client.MFinance.Gui.Setup, Label="Finance System Administration", PermissionsRequired="FINANCE-1"}
            General: {SkipThisLevel=true}
                CLSetup: {Label="Finance Setup (Cross-Ledger)", DontShowNestedTasksAsLinks=true}
                    Currencies:
                        CurrencyList: {Description=Maintain Currency List, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmCurrencySetup}
                        CurrencyLanguages: {Description=Maintain Currency Languages, ActionOpenScreen=TFrmCurrencyLanguageSetup}
                    ExchangeRates:
                        CorporateExchangeRates: {Description=Maintain Corporate Exchange Rates, ActionOpenScreen=TFrmSetupCorporateExchangeRate}
                        DailyExchangeRates: {Description=Maintain Daily Exchange Rates, ActionOpenScreen=TFrmSetupDailyExchangeRate}
                    FinanceFormLetterSetup: {Label=Form Letter / Receipt Setup}
                        AddressLayoutCodes: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Address Layout Codes, Description=Maintain Address Layout Codes, ActionOpenScreen=TFrmAddressLayoutCodeSetup, Context=Finance}
                        AddressLayouts: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Address Layouts, Description=Maintain Address Layouts, ActionOpenScreen=TFrmAddressLayoutSetup, Context=Finance}
                        LetterFormalities: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Letter Formalities, Description=Maintain Letter Formalities, ActionOpenScreen=TFrmFormalitySetup, Context=Finance}
                    Other:
                        MethodsOfGiving: {Description=Maintain Methods of Giving,ActionOpenScreen=TFrmSetupMethodOfGiving}
                        MethodsOfPayment: {Description=Maintain Methods of Payment, ActionOpenScreen=TFrmSetupMethodOfPayment}
                        EmailDestinations: {Description=Maintain Email Destinations, ActionOpenScreen=TFrmEmailDestinationSetup}
                CreateDeleteLedger: {DontShowNestedTasksAsLinks=true, Label=Create/Delete Ledger}
                    CreateNewLedger: {Label=Create New Ledger}
                        #LedgerSetupShepherd:
                        CreateLedger: {Description=Create a new Ledger, ActionOpenScreen=TFrmGLCreateLedgerDialog, PermissionsRequired="FINANCE-3", Singleton=true}
                    DeleteExistingLedger: {Label=Delete Existing Ledger}
                        DeleteLedger: {Description="Careful: Deletes the ledger with all finance data", ActionClick=TDeleteLedger.DeleteLedger, PermissionsRequired=FINANCE-3}
        Personnel: {Icon=personel.ico, PermissionsRequired=PERSONNEL}
            # Module
            Main: {SkipThisLevel=true}
                # Sub Module
                PersonnelCreateEdit: {DontShowNestedTasksAsLinks=true, Namespace=Ict.Petra.Client.MPartner.Gui, Label=Create/Edit} 
                    SearchBoxes: [Partner]
                    MaintainExistingPersonnel:
                        FindPERSONPartner: {Label=Find a Person, ActionClick=TPartnerMain.FindPartnerOfClassPERSON, Description=Search for and work with a Person}
                        WorkWithLastPERSON: {Label=Work with Last Person, ActionClick=TPartnerMain.OpenLastUsedPartnerEditScreenPersonnelModule, Description=Open last Person worked with}
                    PersonnelCreateNewPerson: {Label=Create New Person}
                        PersonnelAddNewPerson: {Label=Add New Person, ActionClick=TPartnerMain.NewPartner_Person, Description=Create a new Partner of Class PERSON}
                PersonnelApplications: {Label=Applications, Namespace=Ict.Petra.Client.MPersonnel.Gui, DontShowNestedTasksAsLinks=true}
                    BrowseApplications: {Label=Browse Applications}
                        BrowseShortTerm: {Label: Short-Term Applications, ActionOpenScreen=TFrmShortTermApplications, Description=Browse Short-Term Applications by Event}
                        BrowseLongTerm: {Label: Long-Term Applications, ActionOpenScreen=TFrmLongTermApplications, Description=Browse Long-Term Applications}
                PersonnelExtracts: {Namespace=Ict.Petra.Client.MPartner.Gui.Extracts, DontShowNestedTasksAsLinks=true, Label=Extracts}
                    PersonnelMaintainAndUpdateExtracts: {Label=Maintain and Update Extracts}
                        PersonnelExtractMasterList: {Label=Extract Master List, Description=Access and Maintain/Update Extracts here, ActionOpenScreen=TFrmExtractMaster}
                    GeneratePersonnelExtracts: {Label=Generate Personnel Extracts}
                        PartnerByEvent: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Event, Description=Create Extract of Partners with specific application status for selected event, ActionClick=TPersonnelMain.PartnerByEventExtract}
                        PartnerByEventRole: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Event Role, Description=Create Extract of Partners with specific role at selected event, ActionClick=TPersonnelMain.PartnerByEventRoleExtract}
                        PartnerByCommitment: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Commitment, Description=Create Extract of Partners with selected Commitment Status, ActionClick=TPersonnelMain.PartnerByCommitmentExtract}
                        PartnerByField: {Namespace=Ict.Petra.Client.MPersonnel.Gui, Label=Partner by Field, Description=Create Extract of Partners received/sent by selected Fields, ActionClick=TPersonnelMain.PartnerByFieldExtract}
                PersonnelReports: {Namespace=Ict.Petra.Client.MReporting.Gui.MPersonnel, DontShowNestedTasksAsLinks=true, Label=Reports}  # Icon=Print.ico
                    PersonnelReports: {Label=Reports}
                        ProgressReport: {Description=Create a Progress Report for selected Personnel, ActionOpenScreen=TFrmProgressReport}
                        PreviousExperienceReport: {Description=Create Report of Previous Experience for selected Personnel, ActionOpenScreen=TFrmPreviousExperienceReport}
                        StartOfCommitmentReport: {Label=Start of Commitment Report, Description=Create Report with Start of Commitment dates for selected Personnel, ActionOpenScreen=TFrmStartOfCommitmentReport}
                        EndOfCommitmentReport: {Label=End of Commitment Report, Description=Create Report with End of Commitment dates for selected Personnel, ActionOpenScreen=TFrmEndOfCommitmentReport}
                        JobAssignmentReport: {Description=Create Report of Job Assignments for selected Personnel, ActionOpenScreen=TFrmJobAssignmentReport}
                        LengthOfCommitmentReport: {Label=Length of Commitment Report, Description=Create Report of Staff Service Anniversaries, ActionOpenScreen=TFrmLengthOfCommitmentReport}
                        BirthdayList: {Description=Create Report of Birthdays for selected Personnel, ActionOpenScreen=TFrmBirthdayListReport}
                        EmergencyContactReport: {Description=Create Report with Emergency Contact Details for selected Personnel, ActionOpenScreen=TFrmEmergencyContactReportStaff}
                        PassportExpiryReport: {Description=Create Report with Passport Expiry Dates for selected Personnel, ActionOpenScreen=TFrmPassportExpiryReport}
                        PersonalDocumentExpiryReport: {Description=Create Report with Expiry Dates of selected Personal Documents, ActionOpenScreen=TFrmPersonalDocumentExpiryReport}
                        EmergencyDataReport: {Description=Create Report with selected Emergency Data for selected Personnel, ActionOpenScreen=TFrmEmergencyDataReport}
                        PersonalDataReport: {Description=Create Report with selected Personal Data for selected Personnel, ActionOpenScreen=TFrmPersonalDataReport}
                        OutreachOptions: {Description=Create Report of Events for selected Year/Code, ActionOpenScreen=TFrmOutreachOptions}
                        UnitHierarchyReport: {Description=View Hierarchy for selected Units, ActionOpenScreen=TFrmUnitHierarchy}
                        LocalPersonnelDataReport: {Description=Create Report with Local Data for selected Personnel, ActionOpenScreen=TFrmLocalPersonnelDataReport}
                    PersonnelShortTermerReports: {Label=Short Termer Reports, Namespace=Ict.Petra.Client.MReporting.Gui.MPersonnel.ShortTerm}
                        FurtherShortTermerReports: {Description=Select a Report from the list of options, Namespace=Ict.Petra.Client.MPersonnel.Gui, ActionClick=TPersonnelMain.ShortTermerReports}
                        AbilitiesReport: {Description=Create Report of Skills of participants in a selected Event, ActionOpenScreen=TFrmAbilitiesReport}
                        EventEmergencyContactReport: {Description=Create Report with Emergency Contact Details for participants in a selected Event, ActionOpenScreen=TFrmEmergContInfReport}
                        LanguagesReport: {Description=Create Report of Languages spoken by participants in a selected Event, ActionOpenScreen=TFrmLanguagesReport}
                PersonnelCalebExport: {Label=Caleb Export, DontShowNestedTasksAsLinks=true}
                        CalebExport: {Label=Caleb Export, Description=Export Partner/Personnel/Finance Data to Caleb, Namespace=Ict.Petra.Client.MSysMan.Gui, ActionOpenScreen=TFrmIntranetExportDialog}
                PersonnelAdministration: {Label=Administration, DontShowNestedTasksAsLinks=true, Namespace=Ict.Petra.Client.MPersonnel.Gui}
                    ConvertApplications: {Label=Convert Applications}
                        ConvertApplicationsToPreviousExperience: {Label: Convert/Remove Previous Experience, ActionOpenScreen=TFrmConvertApplicationsToPreviousExperience, Description=Convert/remove Applications to/from Previous Experience}
                PersonnelSetup: {Namespace=Ict.Petra.Client.MPersonnel.Gui.Setup, DontShowNestedTasksAsLinks=true, Label=Setup}
                    PersonnelApplication: {Label=Application}
                        ApplicantStatus: {Label=Applicant Statuses, Description=Maintain Applicant Statuses, ActionOpenScreen=TFrmApplicantStatusSetup}                         
                        ApplicationType: {Label=Application Types, Description=Maintain Application Types, ActionOpenScreen=TFrmApplicationTypeSetup}
                        ArrivalDeparturePoint: {Label=Arrival and Departure Points, Description=Maintain Arrival and Departure Points, ActionOpenScreen=TFrmArrivalDeparturePointSetup}
                        Country_EventPreferenceLevel: {Label=Country/Event Preference Levels, Description=Maintain Country/Event Preference Levels, ActionOpenScreen=TFrmCountry_EventLevelSetup}
                        EventRole: {Label=Event Roles, Description=Maintain Event Roles, ActionOpenScreen=TFrmEventRoleSetup}
                        OrganisationContact: {Label=Organisation Contacts, Description=Maintain Organisation Contacts, ActionOpenScreen=TFrmOrganisationContactSetup}
                        TransportType: {Label=Transport Types, Description=Maintain Transport Types, ActionOpenScreen=TFrmTransportTypeSetup}
                    PersonnelFormLetterSetup: {Label=Form Letter Setup}
                        FormDesign: {Namespace=Ict.Petra.Client.MCommon.Gui.Setup, Description=Maintain Printable Form Designs, ActionOpenScreen=TFrmFormDesignSetup, Context=Personnel}
                        AddressLayoutCodes: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Address Layout Codes, Description=Maintain Address Layout Codes, ActionOpenScreen=TFrmAddressLayoutCodeSetup, Context=Personnel}
                        AddressLayouts: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Address Layouts, Description=Maintain Address Layouts, ActionOpenScreen=TFrmAddressLayoutSetup, Context=Personnel}
                        LetterFormalities: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup, Label=Letter Formalities, Description=Maintain Letter Formalities, ActionOpenScreen=TFrmFormalitySetup, Context=Personnel}                      
                    General:
                        DocumentTypeCategory: {Label=Document Type Categories, Description=Maintain Document Type Categories, ActionOpenScreen=TFrmDocumentTypeCategorySetup}
                        DocumentType: {Label=Document Types, Description=Maintain Document Types, ActionOpenScreen=TFrmDocumentTypeSetup}
                        JobAssignmentType: {Label=Job Assignment Types, Description=Maintain Job Assignment Types, ActionOpenScreen=TFrmJobAssignmentTypeSetup}
                        LanguageLevel: {Label=Language Levels, Description=Maintain Language Levels, ActionOpenScreen=TFrmLanguageLevelSetup}
                        LeadershipRating: {Label=Leadership Ratings, Description=Maintain Leadership Ratings, ActionOpenScreen=TFrmLeadershipRatingSetup}
                        PassportType: {Label=Passport Types, Description=Maintain Passport Types, ActionOpenScreen=TFrmPassportTypeSetup}
                        Position: {Label=Positions, Description=Maintain Positions, ActionOpenScreen=TFrmPositionSetup}
                        SkillCategory: {Label=Skill Categories, Description=Maintain Skill Categories, ActionOpenScreen=TFrmSkillCategorySetup}
                        SkillLevel: {Label=Skill Levels, Description=Maintain Skill Levels, ActionOpenScreen=TFrmSkillLevelSetup}
                        UnitHierarchy: {Label=Unit Hierarchy, Description=Maintain Unit Hierarchy, ActionOpenScreen=TFrmUnitHierarchy}
                    PersonnelLocalData: {Label=Local Data}
                        LocalDataOptionListNames: {Label=Local Data Option List Names, Description=Maintain Local Data Option List Names, Namespace=Ict.Petra.Client.MPartner.Gui.Setup, ActionOpenScreen=TFrmLocalDataOptionListNameSetup, Context=Personnel}
                        LocalDataOptions: {Label=Local Data Options, Description=Maintain Local Data Options, Namespace=Ict.Petra.Client.MPartner.Gui.Setup, ActionOpenScreen=TFrmLocalDataOptionsSetup, Context=Personnel}
                        #LocalApplicationDataFields: {Label=Local Application Data Fields, Description=Maintain Local Application Data Fields, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalApplicationDataFieldSetup}
                        LocalPersonnelDataFields: {Label=Local Personnel Data Fields, Description=Maintain Local Personnel Data Fields, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalPersonnelDataFieldSetup}
                        #LocalDataFieldOrderLongTermApp: {Label=Field Order for Long Term Applications, Description=Maintain Field Order for Long Term Applications, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=LongTermApp}
                        #LocalDataFieldOrderShortTermApp: {Label=Field Order for Short Term Applications, Description=Maintain Field Order for Short Term Applications, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=ShortTermApp}
                        LocalDataFieldOrderPersonnel: {Label=Field Order for Personnel, Description=Maintain Field Order for Personnel, Namespace=Ict.Petra.Client.MCommon.Gui.Setup, ActionOpenScreen=TFrmLocalDataFieldOrderSetup, Context=Personnel}                      
        #ConferenceManagement: {Icon=conference.ico, PermissionsRequired=CONFERENCE, DependsOnConference=true}
        #    Main: {SkipThisLevel=true}
        #        Conference: {Namespace=Ict.Petra.Client.MConference.Gui, DontShowNestedTasksAsLinks=true}
        #            Conference:
        #                SelectConference: {Description=Select a Conference to work on, ActionOpenScreen=TFrmConferenceFindForm}
        #                NewConference: {Namespace=Ict.Petra.Client.MConference.Gui, Description=Create a new Conference, ActionClick=TConferenceMain.NewConference}
        #                DeleteConference: {Label=Delete This Conference, Description="Careful: Delete the conference with all conference data", ActionClick=TDeleteConference.DeleteThisConference}
        #            Attendees:
        #                AttendeeList: {Namespace=Ict.Petra.Client.MConference.Gui, Description=Browse Conference Attendees, ActionClick=TConferenceMain.AttendeeListForSelectedConference}
        #                RefreshAttendees: {Namespace=Ict.Petra.Client.MConference.Gui, Description=Refresh conference attendees after adding/importing new attendees, ActionClick=TConferenceMain.RefreshAttendees}
        #        ConferenceReports: {Namespace=Ict.Petra.Client.MReporting.Gui.MConference, DontShowNestedTasksAsLinks=true, Label=Reports}  # Icon=Print.ico
        #            Reports:
        #                AbsenteeReport: {ActionOpenScreen=TFrmAbsenteeReport}
        #                AccommodationReport: {ActionOpenScreen=TFrmAccommodationReport}
        #                AgeSummaryReport: {ActionOpenScreen=TFrmAgeSummaryReport}
        #                ArrivalDepartureGroupReport: {ActionOpenScreen=TFrmArrivalDepartureGroup}
        #                ArrivalListingReport: {ActionOpenScreen=TFrmArrivalListingReport}
        #                AttendanceSummaryReport: {ActionOpenScreen=TFrmAttendanceSummaryReport}
        #                AttendeeReport: {ActionOpenScreen=TFrmAttendeeReport}
        #                ChildrenReport: {ActionOpenScreen=TFrmChildrenReport}
        #                CommentsReport: {ActionOpenScreen=TFrmCommentsReport}
        #                ConferenceRoleReport: {ActionOpenScreen=TFrmConferenceRoleReport}
        #                ExtraCostsReport: {ActionOpenScreen=TFrmExtraCostsReport}
        #                FamilyListingReport: {ActionOpenScreen=TFrmFamilyListingReport}
        #                GroupReports: {ActionOpenScreen=TFrmGroupReports}
        #                LanguageReport: {ActionOpenScreen=TFrmLanguagesReport}
        #                NationalitySummaryReport: {ActionOpenScreen=TFrmNationalitySummaryReport}
        #                PresentAttendeeReport: {ActionOpenScreen=TFrmPresentAttendeeReport}
        #                TransportReport: {ActionOpenScreen=TFrmTransportReport}
        #                #Payment:  {Namespace=Ict.Petra.Client.MReporting.Gui.MFinance, ActionOpenScreen=TFrmARConferencePayments}
        #            FieldReports:
        #                ChargedFieldReport: {ActionOpenScreen=TFrmChargedFieldReport}
        #                SendingFieldReport: {ActionOpenScreen=TFrmSendingFieldReport}
        #                ReceivingFieldReport: {ActionOpenScreen=TFrmReceivingFieldReport}
        #                RegisteringFieldReport: {ActionOpenScreen=TFrmRegisteringFieldReport}
        #                OutreachReport: {ActionOpenScreen=TFrmOutreachReport}
        #        ConferenceSetup: {Namespace=Ict.Petra.Client.MConference.Gui.Setup, DontShowNestedTasksAsLinks=true, Label=Setup}
        #            CurrentConference:
        #                MasterSettings: {Namespace=Ict.Petra.Client.MConference.Gui, Label=Conference Master Settings, Description=Maintain Conference Master Settings, ActionClick=TConferenceMain.MasterSettingsForSelectedConference}
        #                ChildDiscount: {Namespace=Ict.Petra.Client.MConference.Gui, Label=Child Discounts, Description=Maintain Child Discounts, ActionClick=TConferenceMain.ChildDiscountsForSelectedConference}
        #                ConferenceStandardCost: {Namespace=Ict.Petra.Client.MConference.Gui, Label=Conference Standard Costs, Description=Maintain Conference Standard Costs, ActionClick=TConferenceMain.StandardCostsForSelectedConference}
        #                EarlyLateRegistration: {Namespace=Ict.Petra.Client.MConference.Gui, Label=Early and Late Registrations, Description=Maintain Early and Late Registrations, ActionClick=TConferenceMain.EarlyLateRegistrationsForSelectedConference}
        #                OutreachSupplement: {Namespace=Ict.Petra.Client.MConference.Gui, Label=Outreach Supplements, Description=Maintain Outreach Supplements, ActionClick=TConferenceMain.OutreachSupplementsForSelectedConference}
        #            General:
        #                ConferenceCostType: {Label=Conference Cost Types, Description=Maintain Conference Cost Types, ActionOpenScreen=TFrmConferenceCostTypeSetup}
        FinancialDevelopment: {Icon=develope.ico, Namespace=Ict.Petra.Client.MFinDev.Gui, Label=Financial Development, DependsOnLedger=true, PermissionsRequired=DEVUSER}
            Main: {SkipThisLevel=true}
                FinDevReports: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinDev, DontShowNestedTasksAsLinks=true, Label=Reports}  # Icon=Print.ico
                    FDReports: {Label=Reports}
                        #IncomeByFund: {ActionOpenScreen=TFrmFDIncomeByFund}
                        #LocalIncomeSplit: {ActionOpenScreen=TFrmIncomeLocalSplit}
                        #DonorsPerRecipient: {ActionOpenScreen=TFrmDonorsPerRecipient}
                        TotalGiftPerDonor: {Label=Total Gifts per Donor, Description=Create Report of Total Gifts per Donor during selected period, ActionOpenScreen=TFrmTotalGiftPerDonor}
                        #MethodOfGiving: {ActionOpenScreen=TFrmMethodOfGiving}
                        ShortDonorReport: {Description=Create Report of Total Gifts per selected Donors during selected period, ActionOpenScreen=TFrmDonorReportShort}
                        DetailedDonorReport: {Description=Create Report of Gift Details per selected Donors, ActionOpenScreen=TFrmDonorReportDetail}
                        GiftsOverMinimumAmount: {Description=Create Report of Gifts as per selected options, ActionOpenScreen=TFrmGiftsOverMinimumAmount}
                        LapsedDonorReport: {Description=Create Report of Donors to see who has not given in a while, ActionOpenScreen=TFrmLapsedDonorReport}
                        SYBUNTReport: {ActionOpenScreen=TFrmSYBUNTReport}
                        NewDonorReport: {Description=Create Report of first time Donors, ActionOpenScreen=TFrmNewDonorReport}
                        TopDonorReport: {Description=Create Report of Top/Middle/Bottom Donors with selected dates and Motivation Groups/Details, ActionOpenScreen=TFrmTopDonorReport}
        UserSettings: {Label=User Settings, Icon=settings.ico, Namespace=Ict.Petra.Client.MSysMan.Gui}
            Main: {SkipThisLevel=true}
                UserPreferences: {Label=User Preferences, DontShowNestedTasksAsLinks=true}
                    UserPreferences:
                        SetUserPreferences: {Label=User Preferences, Description="Maintain User Preferences", ActionOpenScreen=TFrmUserPreferencesDialog}
                Security: {DontShowNestedTasksAsLinks=true}
                    Login:
                        ChangePassword: {Description="You are advised to change your password regularly!", ActionClick=TSysManMain.SetUserPassword}
        SystemManager: {Icon=sysman.ico, Namespace=Ict.Petra.Client.MSysMan.Gui, PermissionsRequired=SYSMAN, ShowAsCollapsiblePanels=true}
            Security:
                Users: {DontShowNestedTasksAsLinks=true}
                    Maintenance:
                        MaintainUsers: {Description: Add new users and manage permissions, ActionOpenScreen=TFrmMaintainUsers}
                        #DeleteUser:
                        #ModifyUserPermissions:
                        #ImportUserPermissions:
                    Activity:
                        #ViewCurrentUsers:
                        #ViewLoginLog:
                SecuritySetup: {DontShowNestedTasksAsLinks=true, Label=Setup}
                    Security:
                        Groups: {Label=Groups, Description=Maintain Security-related Groups, Namespace=Ict.Petra.Client.MSysMan.Gui.Setup, ActionOpenScreen=TFrmSecurityGroupSetup}
            Database:
                Database: {DontShowNestedTasksAsLinks=true}
                    ExportDatabase: {DontShowNestedTasksAsLinks=true}
                        ExportAllData: {ActionClick=TSysManMain.ExportAllData}
                    RestoreDatabase:
                        RestoreDatabaseFromBackup: {ActionClick=TSysManMain.RestoreDatabase, Description=Replaces all existing data with backed-up data}
            Auditing:
                Logs: {DontShowNestedTasksAsLinks=true}
                    #ErrorLog
                    #SystemStatusLog
                AuditingReports: {DontShowNestedTasksAsLinks=true, Label=Reports}
                    #PartnerFullReport
            SystemSettings:
                SettingsSetup: {DontShowNestedTasksAsLinks=true, Label=Setup}
                    #SystemParameters
                    #Sites
                    #Purging
                    General:
                        InstalledSites: {Label=Maintain Sites, Description=Maintain Installed Sites, Namespace=Ict.Petra.Client.MSysMan.Gui.Setup, ActionOpenScreen=TFrmInstalledSitesSetup}
                        LanguageSpecifics: {Label=Language Specifics, Description=Maintain Month Names for Different Languages, Namespace=Ict.Petra.Client.MSysMan.Gui.Setup, ActionOpenScreen=TFrmLanguageSpecificSetup}
                        GeneralSystemSettings: {Label=System Settings, Description=Maintain System Settings, Namespace=Ict.Petra.Client.MSysMan.Gui.Setup, ActionOpenScreen=TFrmSystemSettingsSetup}
                
