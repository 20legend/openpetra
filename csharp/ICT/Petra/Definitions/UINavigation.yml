OpenPetra:
    SearchBoxes:
        Partner:
            Label: Search Partner
        Transaction:
            Label: Search Transaction
            Comment: Search by Reference, or Narrative
        Batch:
            Label: Search Batch
            Comment: Search by Reference, or Batch Number
        Report:
            Label: Search Report
            Comment: Search for Report name, or saved report settings
        Donor:
            Label: Search Donor
            Comment: Search for donor by name, bank account, or partner key
        Recipient:
            Label: Search Recipient
            Comment: Search for recipient (Worker or Project) by name, country, or partner key
        Task:
            Label: Search for Task
    MainMenu:
        # Department
        Partner: {Label=Pa&rtner, Icon=partner_small.ico}
            # Module
            Main:
                # Sub Module
                Partners: {Icon=partners.ico, Namespace=Ict.Petra.Client.MPartner.Gui}
                    SearchBoxes: [Partner]
                    NewPartner:
                        AddNewFamily: {ActionClick=TFrmPartnerMain.NewPartner}
                        AddNewPerson: {ActionClick=TFrmPartnerMain.NewPerson}
                        AddNewOrganisation: {ActionClick=TFrmPartnerMain.NewOrganisation}
                    MaintainPartner:
                        #ChangeAddress:
                        #MergePartners:
                        FindPartner: {ActionClick=TFrmPartnerMain.FindPartner}
                    Contacts:
                        FindAndDeleteContacts: {ActionOpenScreen=TFrmPartnerContacts}
                    ImportExport: {Label=Import and Export}
                        ExportPartners: {ActionClick=TFrmPartnerMain.ExportPartners, Description="Export to YAML file for importing into other OpenPetra database"}
                        ImportPartners: {ActionClick=TFrmPartnerMain.ImportPartners, Label=Import from YAML, Description="Import Partners, only useful for initial database setup"}
                        ImportPartnersFromCSV: {ActionOpenScreen=TFrmPartnerImport, Label=Import from CSV, Description=Import Partners without overwriting}
                #Extracts:
                Reports: {Icon=printer.ico, Namespace=Ict.Petra.Client.MReporting.Gui.MPartner}
                    PartnerReports:
                        PartnerByCity: {ActionOpenScreen=TFrmPartnerByCity}
                        PartnerAddress: {Label=Brief Address Report, ActionOpenScreen=TFrmBriefAddressReport)
                        BriefFoundation: {Label=Brief Foundation Report, ActionOpenScreen=TFrmBriefFoundationReport)
                        SupportingChurches: {Label=Supporting Churches Report, ActionOpenScreen=TFrmSupportingChurchesReport)
                        ValidBankAccount: {Label=Valid Bank Account Report, ActionOpenScreen=TFrmValidBankAccountReport)
                        PublicationStatisticalReport: {Label=Publication Statistical Report, ActionOpenScreen=TFrmPublicationStatisticalReport)
                        BulkAddressReport: {Label=Bulk Address Report, ActionOpenScreen=TFrmBulkAddressReport)
                        PartnerContactReport: {Label=Partner Contact Report, ActionOpenScreen=TFrmPartnerContactReport)
                        SubscriptionReport: {Label=Subscription Report, ActionOpenScreen=TFrmSubscriptionReport)
                        LocalPartnerDataReport: {Label=Local Partner Data, ActionOpenScreen=TFrmLocalPartnerDataReport)
           
                #MailingSubscriptions: {Label=Mailing&&Subscriptions, Icon=mail.ico}
                Setup: {Namespace=Ict.Petra.Client.MPartner.Gui.Setup}
                    SpecialTypes: {Label=Setup Partner Types, Description=Add new Special Types for the Partner Edit screen,  ActionOpenScreen=TFrmPartnerTypeSetup}
            #MoreFunctions:
                #SetupPartnerModule:
        # DependsOnLedger means that this department will be displayed for each available ledger, with the appropriate LedgerNumber
        Finance: {Icon=accounts_small.ico, Label=Ledger {0} {1}, DependsOnLedger=true, Namespace=Ict.Petra.Client.MFinance.Gui}
            GiftProcessing:
                SearchBoxes: [Donor, Recipient]
                Main:
                    GiftEntry:
                        ImportGiftsFromBankStatement: {Description: Matching donors and recipients, ActionOpenScreen=TFrmBankStatementImport}
                        GiftBatches: {Description:Manually enter and post Gift batches, ActionOpenScreen=Gift.TFrmGiftBatch}
                        #AddGifts:
                        #ImportGifts:
                        #EditExistingGifts:
                        #EditLastUnpostedGiftBatch:
                        #PostGiftBatch:
                    GiftReceipting:
                        PrintAnnualReceipts: {Description:Print the annual gift receipts, ActionOpenScreen=Gift.TFrmGiftReceiptPrinting}
                        #PrintSingleReceipt:
                    FormLetters:
                        PrintNewDonorSubscriptionLetters: {Description:Send a letter to new donors that will get subscribed to our publication, ActionOpenScreen=Gift.TFrmGiftNewDonorLetter}
                    Setup: {Namespace=Ict.Petra.Client.MFinance.Gui.Setup}
                        MotivationDetailSetup: {Description: "Create motivation details, towards which donations can be assigned", ActionOpenScreen=Gift.TFrmGiftMotivationSetup}
            AccountsPayable:
                Main:
                    AccountsPayable: {Description: Manage suppliers and invoices, ActionOpenScreen=AccountsPayable.TFrmAPMain}
            GeneralLedger:
                Main:
                    SearchBoxes: [Transaction, Batch]
                    General:
                        ImportGLTransactionsFromBankStatement: {Description: Matching regular payments etc, ActionOpenScreen=TFrmBankStatementImport}
                        GLBatches: {Description:Enter and post General Ledger batches, ActionOpenScreen=GL.TFrmGLBatch}
                        #EnterTransactions:
                        #ImportTransactions:
                        #EditExistingTransactions:
                        #EditTransactionsInPreviouslyUsedBatch:
                        #PostBatch:
                        #FindTransaction:
                    Reports: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinance}
                        AccountDetailReport: {ActionOpenScreen=TFrmAccountDetail}
                        BalanceSheet: {ActionOpenScreen=TFrmBalanceSheet}
                            #CurrentPeriod:
                            #EndOfLastYear:
                            #SpecifyParameters:
                            #RepeatLastReport:
                            #MyFancyBalanceSheetWithCoolGraph:
                        IncomeExpenseStatement: {ActionOpenScreen=TFrmIncomeExpenseStmt}
                    #PeriodEnd:
                    #YearEnd:
                    #ICHProcessing:
                    Setup: {Namespace=Ict.Petra.Client.MFinance.Gui.Setup}
                        ManageAccounts: {Description:Add accounts and modify the hierarchy, ActionOpenScreen=GL.TFrmGLAccountHierarchy}
                        ManageCostCentres: {Description:Add and maintain cost centres, ActionOpenScreen=GL.TFrmGLCostCentreHierarchy}
                        #Accounts:
                            #AddPostingAccount:
                            #AddForeignCurrencyAccount:
                            #AddSummarisationAccount:
                            #EditAccount:
                            #DeleteAccount:
                            #RenameAccount:
                            #ImportChartOfAccounts:
                        #CostCentres:
                            #AddCostCentre:
                            #EditCostCentre:
                            #DeleteCostCentre:
                            #RenameCostCentre:
                            #LinkCostCentreToPartner:
                        #Other:
                            #LedgerSetupShepherd:
                            #SetupCalendar:
                            #ChangeNumberOfForwardingPeriods:
            #Budgets:
            #ICH:
            #Reports:
            FinanceModuleSetup:  {Namespace=Ict.Petra.Client.MFinance.Gui.Setup}
                Main: 
                    CreateLedger: {ActionOpenScreen=TFrmGLCreateLedger}
                    SetupCurrencies: {ActionOpenScreen=TFrmSetupCurrency}
                    SetupDailyExchangeRate: {ActionOpenScreen=TFrmSetupDailyExchangeRate}
            
        Personnel: {Icon=personel_small.ico}
            Reports:
                Reports: {Namespace=Ict.Petra.Client.MReporting.Gui.MPersonnel}
                    PersonnelReports:
                        ProgressReport: {ActionOpenScreen=TFrmProgressReport}
                        PreviousExperienceReport: {ActionOpenScreen=TFrmPreviousExperienceReport}
                        EndOfCommitmentReport: {ActionOpenScreen=TFrmEndOfCommitmentReport}
                        StartOfCommitmentReport: {ActionOpenScreen=TFrmStartOfCommitmentReport}
        ConferenceManagement: {Icon=conference_small.ico}
        FinancialDevelopment: {Icon=develope_small.ico, Namespace=Ict.Petra.Client.MFinDev.Gui, Label=FinDev {0} {1}, DependsOnLedger=true}
            Reports:
                Reports: {Namespace=Ict.Petra.Client.MReporting.Gui.MFinDev}
                    IncomeByFund: {ActionOpenScreen=TFrmFDIncomeByFund}
        Settings: {Icon=sysman_small.ico, Namespace=Ict.Petra.Client.MSysMan.Gui}
            Main:
                Safety:
                    SetPassword: {Description="Please change your own password regularly", ActionClick=TSysManMain.SetUserPassword}
        SystemManager: {Icon=sysman_small.ico, Namespace=Ict.Petra.Client.MSysMan.Gui}
            Users:
                Functions:
                    MaintainUsers: {Description: Add new users and manage permissions, ActionOpenScreen=TFrmMaintainUsers}
                    #DeleteUser:
                    #ModifyUserPermissions:
                    #ImportUserPermissions:
            Finance:
                LedgerOperations: {Namespace=Ict.Petra.Client.MFinance.Gui.Setup}
                    CreateLedger: {ActionOpenScreen=TFrmGLCreateLedger}
                    #DeleteLedger:
                ExchangeRates: {Namespace=Ict.Petra.Client.MFinance.Gui}
                    SetupCurrencies: {ActionOpenScreen=Setup.TFrmSetupCurrency}
                    SetupDailyExchangeRate: {ActionOpenScreen=Setup.TFrmSetupDailyExchangeRate}
            Database:
                ImportExport:
                    ExportAllData: {ActionClick=TSysManMain.ExportAllData}
                    ResetDatabase: {ActionClick=TSysManMain.ImportAllData}