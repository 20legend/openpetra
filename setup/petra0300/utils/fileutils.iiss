{ Replaces the given string with a second string throughout a text file }
function ReplaceInTextFile(Filename, OriginalText, NewText: String; CaseSensitive: Boolean): Boolean;
var
  ReplacedSuccessfully: Boolean;
  FileString: String;
  LowerFileString: String;
  LowerOriginalText: String;
  NumberReplacements: LongInt;
  CurrentPosition: LongInt;
  ReplacementString: String;
begin
  ReplacedSuccessfully := False;
  NumberReplacements := 0;

  { Attempt to open the file and read it into a string }
  if (LoadStringFromFile(Filename, FileString))
  then begin
    if (CaseSensitive)
    then begin
      { Change the OriginalText, replacing only if an exact match, including case }
      StringChange(FileString, OriginalText, NewText);

      { Since we don't know how many replacements, just set to none }
      NumberReplacements := 0;
    end else begin
      { Save the lower-case equivalents of needle and haystack }
      LowerFileString := LowerCase(FileString);
      LowerOriginalText := LowerCase(OriginalText);

      { Decide on a bogus replacement string (for use in LowerFileString) }
      if (StringOfChar('*', Length(NewText)) <> NewText)
      then begin
        ReplacementString := StringOfChar('*', Length(NewText));
      end else begin
        ReplacementString := StringOfChar('.', Length(NewText));
      end;

      { Do an initial search for the needle }
      CurrentPosition := Pos(LowerOriginalText, LowerFileString);
      while (CurrentPosition <> 0)
      do begin
        { Remove the old text that was found }
        Delete(LowerFileString, CurrentPosition, Length(LowerOriginalText));
        Delete(FileString, CurrentPosition, Length(OriginalText));

        { Insert the replacement text }
        Insert(ReplacementString, LowerFileString, CurrentPosition);
        Insert(NewText, FileString, CurrentPosition);

        NumberReplacements := NumberReplacements + 1;

        CurrentPosition := Pos(LowerOriginalText, LowerFileString);
      end;
    end;

    { Now that we've modified the string, save it back to file }
    if (SaveStringToFile(Filename, FileString, False))
    then begin
      ReplacedSuccessfully := True;
    end;
  end;

  Result := ReplacedSuccessfully;
end;
