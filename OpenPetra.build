<?xml version="1.0"?>
<project name="OpenPetra">

include buildfile="inc/nant/OpenPetra.common.xml"/>

<target name="custclean">
  <foreach item="String" property="devenv-name" delim="," in="${projectfiles.templates-list}" >
    <delete file="${path::combine(dir.projectfiles,
                                  path::combine(devenv-name, 'OpenPetra.sln'))}" />
  </foreach>                                
</target>

<target name="nanttasks" depends="" >
  <property name="target" value="compile" overwrite="false" />
  <nant inheritall="false" target="${target}" 
        buildfile="inc/nanttasks/nanttasks.build" />
</target>

<target name="csharp" depends="nanttasks" >
  <property name="target" value="compile" overwrite="false" />
  <nant inheritall="false" target="${target}" 
        buildfile="csharp/csharp.build" />
</target>

<target name="internal-subdirs" 
        depends="csharp,nanttasks" />


<target name="generateSolutionNoCompile" >
  <call target="generateCsprojectNoCompile" />
  <call target="generate-solution-all-internal" />
</target>

<target name="generateSolution" depends="compile" >
  <call target="generateSolutionNoCompile" />
</target>

<!-- Generate solution targets -->
<target name="generate-solution-all-internal" >
  <foreach item="String" property="devenv-name" delim="," in="${projectfiles.templates-list}" >
    <call target="generate-solution-internal" />
  </foreach>
</target>


<target name="generate-solution-internal" >
  <property name="templatedir" value="${path::combine(dir.incdir.template, devenv-name)}" />
  <property name="TemplateProject" value="" />
  <property name="TemplateConfiguration" value="" />
  <property name="SolutionGuid" value="{${OP::GUIDGen()}}" />
  <foreach item="File" property="ProjectFile">
    <in>
      <items basedir="${path::combine(dir.projectfiles, devenv-name)}">
        <include name="*.csproj"/>
      </items>
    </in>
    <do>  
      <xmlpeek file="${ProjectFile}"
              xpath="/*[local-name()='Project']/*[local-name()='PropertyGroup']/*[local-name()='ProjectGuid']"
              property="ProjectGuid"/>
      <property name="ProjectName" value="${path::get-file-name-without-extension(ProjectFile)}" />
      <loadfile file="${path::combine(templatedir, 'template.sln.project')}"
                property="tempTemplateProject" encoding="utf-8">  
        <filterchain>
          <expandproperties />
        </filterchain>
      </loadfile>
      <property name="TemplateProject" value="${TemplateProject}${tempTemplateProject}" />
      <loadfile file="${path::combine(templatedir, 'template.sln.configuration')}"
                property="tempTemplateConfiguration" encoding="utf-8">  
        <filterchain>
          <expandproperties />
        </filterchain>
      </loadfile>
      <property name="TemplateConfiguration" value="${TemplateConfiguration}${tempTemplateConfiguration}" />
    </do>
  </foreach>
  <copy file="${path::combine(templatedir, 'template.sln')}"
        tofile="${path::combine(dir.projectfiles,
                                path::combine(devenv-name, 'OpenPetra.sln'))}" 
        overwrite="true">  
    <filterchain>
      <expandproperties />
    </filterchain>
  </copy>

</target>

<!-- Include default implementation -->
<include buildfile="inc/nant/OpenPetra.subdirs.xml"/> 

</project>

